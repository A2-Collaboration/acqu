//
// File generated by rootcint at Tue Mar 12 17:40:12 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIottdIacqudIrootdIsrcdIUserDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "UserDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TA2CalArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CalArray(void *p);
   static void deleteArray_TA2CalArray(void *p);
   static void destruct_TA2CalArray(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CalArray*)
   {
      ::TA2CalArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CalArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CalArray", ::TA2CalArray::Class_Version(), "/home/ott/acqu/root/src/TA2CalArray.h", 28,
                  typeid(::TA2CalArray), DefineBehavior(ptr, ptr),
                  &::TA2CalArray::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CalArray) );
      instance.SetDelete(&delete_TA2CalArray);
      instance.SetDeleteArray(&deleteArray_TA2CalArray);
      instance.SetDestructor(&destruct_TA2CalArray);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CalArray*)
   {
      return GenerateInitInstanceLocal((::TA2CalArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CalArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2FPMicro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2FPMicro(void *p);
   static void deleteArray_TA2FPMicro(void *p);
   static void destruct_TA2FPMicro(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2FPMicro*)
   {
      ::TA2FPMicro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2FPMicro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2FPMicro", ::TA2FPMicro::Class_Version(), "/home/ott/acqu/root/src/TA2FPMicro.h", 19,
                  typeid(::TA2FPMicro), DefineBehavior(ptr, ptr),
                  &::TA2FPMicro::Dictionary, isa_proxy, 4,
                  sizeof(::TA2FPMicro) );
      instance.SetDelete(&delete_TA2FPMicro);
      instance.SetDeleteArray(&deleteArray_TA2FPMicro);
      instance.SetDestructor(&destruct_TA2FPMicro);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2FPMicro*)
   {
      return GenerateInitInstanceLocal((::TA2FPMicro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2PlasticPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2PlasticPID(void *p);
   static void deleteArray_TA2PlasticPID(void *p);
   static void destruct_TA2PlasticPID(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2PlasticPID*)
   {
      ::TA2PlasticPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2PlasticPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2PlasticPID", ::TA2PlasticPID::Class_Version(), "/home/ott/acqu/root/src/TA2PlasticPID.h", 26,
                  typeid(::TA2PlasticPID), DefineBehavior(ptr, ptr),
                  &::TA2PlasticPID::Dictionary, isa_proxy, 4,
                  sizeof(::TA2PlasticPID) );
      instance.SetDelete(&delete_TA2PlasticPID);
      instance.SetDeleteArray(&deleteArray_TA2PlasticPID);
      instance.SetDestructor(&destruct_TA2PlasticPID);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2PlasticPID*)
   {
      return GenerateInitInstanceLocal((::TA2PlasticPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2GenericApp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2GenericApp(void *p);
   static void deleteArray_TA2GenericApp(void *p);
   static void destruct_TA2GenericApp(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2GenericApp*)
   {
      ::TA2GenericApp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2GenericApp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2GenericApp", ::TA2GenericApp::Class_Version(), "/home/ott/acqu/root/src/TA2GenericApp.h", 21,
                  typeid(::TA2GenericApp), DefineBehavior(ptr, ptr),
                  &::TA2GenericApp::Dictionary, isa_proxy, 4,
                  sizeof(::TA2GenericApp) );
      instance.SetDelete(&delete_TA2GenericApp);
      instance.SetDeleteArray(&deleteArray_TA2GenericApp);
      instance.SetDestructor(&destruct_TA2GenericApp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2GenericApp*)
   {
      return GenerateInitInstanceLocal((::TA2GenericApp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyCrystalBall_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyCrystalBall(void *p);
   static void deleteArray_TA2MyCrystalBall(void *p);
   static void destruct_TA2MyCrystalBall(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyCrystalBall*)
   {
      ::TA2MyCrystalBall *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyCrystalBall >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyCrystalBall", ::TA2MyCrystalBall::Class_Version(), "/home/ott/acqu/root/src/TA2MyCrystalBall.h", 28,
                  typeid(::TA2MyCrystalBall), DefineBehavior(ptr, ptr),
                  &::TA2MyCrystalBall::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyCrystalBall) );
      instance.SetDelete(&delete_TA2MyCrystalBall);
      instance.SetDeleteArray(&deleteArray_TA2MyCrystalBall);
      instance.SetDestructor(&destruct_TA2MyCrystalBall);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyCrystalBall*)
   {
      return GenerateInitInstanceLocal((::TA2MyCrystalBall*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyCrystalBall*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyTAPS_BaF2PWO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyTAPS_BaF2PWO(void *p);
   static void deleteArray_TA2MyTAPS_BaF2PWO(void *p);
   static void destruct_TA2MyTAPS_BaF2PWO(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyTAPS_BaF2PWO*)
   {
      ::TA2MyTAPS_BaF2PWO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyTAPS_BaF2PWO >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyTAPS_BaF2PWO", ::TA2MyTAPS_BaF2PWO::Class_Version(), "/home/ott/acqu/root/src/TA2MyTAPS_BaF2PWO.h", 53,
                  typeid(::TA2MyTAPS_BaF2PWO), DefineBehavior(ptr, ptr),
                  &::TA2MyTAPS_BaF2PWO::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyTAPS_BaF2PWO) );
      instance.SetDelete(&delete_TA2MyTAPS_BaF2PWO);
      instance.SetDeleteArray(&deleteArray_TA2MyTAPS_BaF2PWO);
      instance.SetDestructor(&destruct_TA2MyTAPS_BaF2PWO);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyTAPS_BaF2PWO*)
   {
      return GenerateInitInstanceLocal((::TA2MyTAPS_BaF2PWO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyTAPS_BaF2PWO*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2PlasticVETO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2PlasticVETO(void *p);
   static void deleteArray_TA2PlasticVETO(void *p);
   static void destruct_TA2PlasticVETO(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2PlasticVETO*)
   {
      ::TA2PlasticVETO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2PlasticVETO >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2PlasticVETO", ::TA2PlasticVETO::Class_Version(), "/home/ott/acqu/root/src/TA2PlasticVETO.h", 23,
                  typeid(::TA2PlasticVETO), DefineBehavior(ptr, ptr),
                  &::TA2PlasticVETO::Dictionary, isa_proxy, 4,
                  sizeof(::TA2PlasticVETO) );
      instance.SetDelete(&delete_TA2PlasticVETO);
      instance.SetDeleteArray(&deleteArray_TA2PlasticVETO);
      instance.SetDestructor(&destruct_TA2PlasticVETO);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2PlasticVETO*)
   {
      return GenerateInitInstanceLocal((::TA2PlasticVETO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2PlasticVETO*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyTAPS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyTAPS(void *p);
   static void deleteArray_TA2MyTAPS(void *p);
   static void destruct_TA2MyTAPS(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyTAPS*)
   {
      ::TA2MyTAPS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyTAPS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyTAPS", ::TA2MyTAPS::Class_Version(), "/home/ott/acqu/root/src/TA2MyTAPS.h", 56,
                  typeid(::TA2MyTAPS), DefineBehavior(ptr, ptr),
                  &::TA2MyTAPS::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyTAPS) );
      instance.SetDelete(&delete_TA2MyTAPS);
      instance.SetDeleteArray(&deleteArray_TA2MyTAPS);
      instance.SetDestructor(&destruct_TA2MyTAPS);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyTAPS*)
   {
      return GenerateInitInstanceLocal((::TA2MyTAPS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyTAPS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyPhysics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyPhysics(void *p);
   static void deleteArray_TA2MyPhysics(void *p);
   static void destruct_TA2MyPhysics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyPhysics*)
   {
      ::TA2MyPhysics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyPhysics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyPhysics", ::TA2MyPhysics::Class_Version(), "/home/ott/acqu/root/src/TA2MyPhysics.h", 99,
                  typeid(::TA2MyPhysics), DefineBehavior(ptr, ptr),
                  &::TA2MyPhysics::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyPhysics) );
      instance.SetDelete(&delete_TA2MyPhysics);
      instance.SetDeleteArray(&deleteArray_TA2MyPhysics);
      instance.SetDestructor(&destruct_TA2MyPhysics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyPhysics*)
   {
      return GenerateInitInstanceLocal((::TA2MyPhysics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyPhysics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyAnalysis(void *p);
   static void deleteArray_TA2MyAnalysis(void *p);
   static void destruct_TA2MyAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyAnalysis*)
   {
      ::TA2MyAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyAnalysis", ::TA2MyAnalysis::Class_Version(), "/home/ott/acqu/root/src/TA2MyAnalysis.h", 57,
                  typeid(::TA2MyAnalysis), DefineBehavior(ptr, ptr),
                  &::TA2MyAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyAnalysis) );
      instance.SetDelete(&delete_TA2MyAnalysis);
      instance.SetDeleteArray(&deleteArray_TA2MyAnalysis);
      instance.SetDestructor(&destruct_TA2MyAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyAnalysis*)
   {
      return GenerateInitInstanceLocal((::TA2MyAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyCaLib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyCaLib(void *p);
   static void deleteArray_TA2MyCaLib(void *p);
   static void destruct_TA2MyCaLib(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyCaLib*)
   {
      ::TA2MyCaLib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyCaLib >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyCaLib", ::TA2MyCaLib::Class_Version(), "/home/ott/acqu/root/src/TA2MyCaLib.h", 71,
                  typeid(::TA2MyCaLib), DefineBehavior(ptr, ptr),
                  &::TA2MyCaLib::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyCaLib) );
      instance.SetDelete(&delete_TA2MyCaLib);
      instance.SetDeleteArray(&deleteArray_TA2MyCaLib);
      instance.SetDestructor(&destruct_TA2MyCaLib);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyCaLib*)
   {
      return GenerateInitInstanceLocal((::TA2MyCaLib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyCaLib*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyCalibration_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyCalibration(void *p);
   static void deleteArray_TA2MyCalibration(void *p);
   static void destruct_TA2MyCalibration(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyCalibration*)
   {
      ::TA2MyCalibration *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyCalibration >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyCalibration", ::TA2MyCalibration::Class_Version(), "/home/ott/acqu/root/src/TA2MyCalibration.h", 58,
                  typeid(::TA2MyCalibration), DefineBehavior(ptr, ptr),
                  &::TA2MyCalibration::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyCalibration) );
      instance.SetDelete(&delete_TA2MyCalibration);
      instance.SetDeleteArray(&deleteArray_TA2MyCalibration);
      instance.SetDestructor(&destruct_TA2MyCalibration);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyCalibration*)
   {
      return GenerateInitInstanceLocal((::TA2MyCalibration*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyCalibration*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyClusterCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyClusterCalib(void *p);
   static void deleteArray_TA2MyClusterCalib(void *p);
   static void destruct_TA2MyClusterCalib(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyClusterCalib*)
   {
      ::TA2MyClusterCalib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyClusterCalib >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyClusterCalib", ::TA2MyClusterCalib::Class_Version(), "/home/ott/acqu/root/src/TA2MyClusterCalib.h", 36,
                  typeid(::TA2MyClusterCalib), DefineBehavior(ptr, ptr),
                  &::TA2MyClusterCalib::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyClusterCalib) );
      instance.SetDelete(&delete_TA2MyClusterCalib);
      instance.SetDeleteArray(&deleteArray_TA2MyClusterCalib);
      instance.SetDestructor(&destruct_TA2MyClusterCalib);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyClusterCalib*)
   {
      return GenerateInitInstanceLocal((::TA2MyClusterCalib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyClusterCalib*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MyRateEstimation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MyRateEstimation(void *p);
   static void deleteArray_TA2MyRateEstimation(void *p);
   static void destruct_TA2MyRateEstimation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MyRateEstimation*)
   {
      ::TA2MyRateEstimation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MyRateEstimation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MyRateEstimation", ::TA2MyRateEstimation::Class_Version(), "/home/ott/acqu/root/src/TA2MyRateEstimation.h", 26,
                  typeid(::TA2MyRateEstimation), DefineBehavior(ptr, ptr),
                  &::TA2MyRateEstimation::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MyRateEstimation) );
      instance.SetDelete(&delete_TA2MyRateEstimation);
      instance.SetDeleteArray(&deleteArray_TA2MyRateEstimation);
      instance.SetDestructor(&destruct_TA2MyRateEstimation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MyRateEstimation*)
   {
      return GenerateInitInstanceLocal((::TA2MyRateEstimation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MyRateEstimation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2UserAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2UserAnalysis(void *p);
   static void deleteArray_TA2UserAnalysis(void *p);
   static void destruct_TA2UserAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2UserAnalysis*)
   {
      ::TA2UserAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2UserAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2UserAnalysis", ::TA2UserAnalysis::Class_Version(), "/home/ott/acqu/root/src/TA2UserAnalysis.h", 23,
                  typeid(::TA2UserAnalysis), DefineBehavior(ptr, ptr),
                  &::TA2UserAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::TA2UserAnalysis) );
      instance.SetDelete(&delete_TA2UserAnalysis);
      instance.SetDeleteArray(&deleteArray_TA2UserAnalysis);
      instance.SetDestructor(&destruct_TA2UserAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2UserAnalysis*)
   {
      return GenerateInitInstanceLocal((::TA2UserAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2UserControl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2UserControl(void *p);
   static void deleteArray_TA2UserControl(void *p);
   static void destruct_TA2UserControl(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2UserControl*)
   {
      ::TA2UserControl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2UserControl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2UserControl", ::TA2UserControl::Class_Version(), "/home/ott/acqu/root/src/TA2UserControl.h", 21,
                  typeid(::TA2UserControl), DefineBehavior(ptr, ptr),
                  &::TA2UserControl::Dictionary, isa_proxy, 4,
                  sizeof(::TA2UserControl) );
      instance.SetDelete(&delete_TA2UserControl);
      instance.SetDeleteArray(&deleteArray_TA2UserControl);
      instance.SetDestructor(&destruct_TA2UserControl);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2UserControl*)
   {
      return GenerateInitInstanceLocal((::TA2UserControl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2UserControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TA2CalArray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CalArray::Class_Name()
{
   return "TA2CalArray";
}

//______________________________________________________________________________
const char *TA2CalArray::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CalArray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CalArray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CalArray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CalArray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2FPMicro::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2FPMicro::Class_Name()
{
   return "TA2FPMicro";
}

//______________________________________________________________________________
const char *TA2FPMicro::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2FPMicro::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2FPMicro::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2FPMicro::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2FPMicro*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2PlasticPID::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2PlasticPID::Class_Name()
{
   return "TA2PlasticPID";
}

//______________________________________________________________________________
const char *TA2PlasticPID::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2PlasticPID::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2PlasticPID::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2PlasticPID::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticPID*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2GenericApp::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2GenericApp::Class_Name()
{
   return "TA2GenericApp";
}

//______________________________________________________________________________
const char *TA2GenericApp::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2GenericApp::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2GenericApp::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2GenericApp::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApp*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyCrystalBall::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyCrystalBall::Class_Name()
{
   return "TA2MyCrystalBall";
}

//______________________________________________________________________________
const char *TA2MyCrystalBall::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCrystalBall*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyCrystalBall::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCrystalBall*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyCrystalBall::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCrystalBall*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyCrystalBall::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCrystalBall*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyTAPS_BaF2PWO::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyTAPS_BaF2PWO::Class_Name()
{
   return "TA2MyTAPS_BaF2PWO";
}

//______________________________________________________________________________
const char *TA2MyTAPS_BaF2PWO::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS_BaF2PWO*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyTAPS_BaF2PWO::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS_BaF2PWO*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyTAPS_BaF2PWO::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS_BaF2PWO*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyTAPS_BaF2PWO::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS_BaF2PWO*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2PlasticVETO::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2PlasticVETO::Class_Name()
{
   return "TA2PlasticVETO";
}

//______________________________________________________________________________
const char *TA2PlasticVETO::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticVETO*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2PlasticVETO::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticVETO*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2PlasticVETO::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticVETO*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2PlasticVETO::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2PlasticVETO*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyTAPS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyTAPS::Class_Name()
{
   return "TA2MyTAPS";
}

//______________________________________________________________________________
const char *TA2MyTAPS::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyTAPS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyTAPS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyTAPS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyTAPS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyPhysics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyPhysics::Class_Name()
{
   return "TA2MyPhysics";
}

//______________________________________________________________________________
const char *TA2MyPhysics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyPhysics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyPhysics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyPhysics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyPhysics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyPhysics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyPhysics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyPhysics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyAnalysis::Class_Name()
{
   return "TA2MyAnalysis";
}

//______________________________________________________________________________
const char *TA2MyAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyCaLib::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyCaLib::Class_Name()
{
   return "TA2MyCaLib";
}

//______________________________________________________________________________
const char *TA2MyCaLib::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCaLib*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyCaLib::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCaLib*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyCaLib::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCaLib*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyCaLib::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCaLib*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyCalibration::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyCalibration::Class_Name()
{
   return "TA2MyCalibration";
}

//______________________________________________________________________________
const char *TA2MyCalibration::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCalibration*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyCalibration::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCalibration*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyCalibration::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCalibration*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyCalibration::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyCalibration*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyClusterCalib::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyClusterCalib::Class_Name()
{
   return "TA2MyClusterCalib";
}

//______________________________________________________________________________
const char *TA2MyClusterCalib::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyClusterCalib*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyClusterCalib::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyClusterCalib*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyClusterCalib::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyClusterCalib*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyClusterCalib::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyClusterCalib*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MyRateEstimation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MyRateEstimation::Class_Name()
{
   return "TA2MyRateEstimation";
}

//______________________________________________________________________________
const char *TA2MyRateEstimation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyRateEstimation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MyRateEstimation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MyRateEstimation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MyRateEstimation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyRateEstimation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MyRateEstimation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MyRateEstimation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2UserAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2UserAnalysis::Class_Name()
{
   return "TA2UserAnalysis";
}

//______________________________________________________________________________
const char *TA2UserAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2UserAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2UserAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2UserAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2UserControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2UserControl::Class_Name()
{
   return "TA2UserControl";
}

//______________________________________________________________________________
const char *TA2UserControl::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2UserControl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2UserControl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2UserControl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2UserControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TA2UserControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2UserControl.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2UserControl::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2UserControl::Class(),this);
   }
}

//______________________________________________________________________________
void TA2UserControl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2UserControl.
      TClass *R__cl = ::TA2UserControl::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Control::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2UserControl(void *p) {
      delete ((::TA2UserControl*)p);
   }
   static void deleteArray_TA2UserControl(void *p) {
      delete [] ((::TA2UserControl*)p);
   }
   static void destruct_TA2UserControl(void *p) {
      typedef ::TA2UserControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2UserControl

//______________________________________________________________________________
void TA2UserAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2UserAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2UserAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2UserAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void TA2UserAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2UserAnalysis.
      TClass *R__cl = ::TA2UserAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Analysis::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2UserAnalysis(void *p) {
      delete ((::TA2UserAnalysis*)p);
   }
   static void deleteArray_TA2UserAnalysis(void *p) {
      delete [] ((::TA2UserAnalysis*)p);
   }
   static void destruct_TA2UserAnalysis(void *p) {
      typedef ::TA2UserAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2UserAnalysis

//______________________________________________________________________________
void TA2GenericApp::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2GenericApp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2GenericApp::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2GenericApp::Class(),this);
   }
}

//______________________________________________________________________________
void TA2GenericApp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2GenericApp.
      TClass *R__cl = ::TA2GenericApp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGenDet", &fGenDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLScint", &fLScint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLTrig", &fLTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrig", &fTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFPMic", &fFPMic);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2GenericApp(void *p) {
      delete ((::TA2GenericApp*)p);
   }
   static void deleteArray_TA2GenericApp(void *p) {
      delete [] ((::TA2GenericApp*)p);
   }
   static void destruct_TA2GenericApp(void *p) {
      typedef ::TA2GenericApp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2GenericApp

//______________________________________________________________________________
void TA2PlasticVETO::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2PlasticVETO.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2PlasticVETO::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2PlasticVETO::Class(),this);
   }
}

//______________________________________________________________________________
void TA2PlasticVETO::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2PlasticVETO.
      TClass *R__cl = ::TA2PlasticVETO::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2PlasticVETO(void *p) {
      delete ((::TA2PlasticVETO*)p);
   }
   static void deleteArray_TA2PlasticVETO(void *p) {
      delete [] ((::TA2PlasticVETO*)p);
   }
   static void destruct_TA2PlasticVETO(void *p) {
      typedef ::TA2PlasticVETO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2PlasticVETO

//______________________________________________________________________________
void TA2PlasticPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2PlasticPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2PlasticPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2PlasticPID::Class(),this);
   }
}

//______________________________________________________________________________
void TA2PlasticPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2PlasticPID.
      TClass *R__cl = ::TA2PlasticPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2PlasticPID(void *p) {
      delete ((::TA2PlasticPID*)p);
   }
   static void deleteArray_TA2PlasticPID(void *p) {
      delete [] ((::TA2PlasticPID*)p);
   }
   static void destruct_TA2PlasticPID(void *p) {
      typedef ::TA2PlasticPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2PlasticPID

//______________________________________________________________________________
void TA2CalArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CalArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CalArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CalArray::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CalArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CalArray.
      TClass *R__cl = ::TA2CalArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      TA2ClusterDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CalArray(void *p) {
      delete ((::TA2CalArray*)p);
   }
   static void deleteArray_TA2CalArray(void *p) {
      delete [] ((::TA2CalArray*)p);
   }
   static void destruct_TA2CalArray(void *p) {
      typedef ::TA2CalArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CalArray

//______________________________________________________________________________
void TA2FPMicro::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2FPMicro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2FPMicro::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2FPMicro::Class(),this);
   }
}

//______________________________________________________________________________
void TA2FPMicro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2FPMicro.
      TClass *R__cl = ::TA2FPMicro::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFPhits", &fFPhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFPhits", &fNFPhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFPelem", &fNFPelem);
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2FPMicro(void *p) {
      delete ((::TA2FPMicro*)p);
   }
   static void deleteArray_TA2FPMicro(void *p) {
      delete [] ((::TA2FPMicro*)p);
   }
   static void destruct_TA2FPMicro(void *p) {
      typedef ::TA2FPMicro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2FPMicro

//______________________________________________________________________________
void TA2MyAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyAnalysis.
      TClass *R__cl = ::TA2MyAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Photon_TOF_TAPS", &fH_2g_fulinc_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Photon_TOF_CB", &fH_2g_fulinc_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Photon_PSA", &fH_2g_fulinc_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Eta_E_Theta_Gen", &fH_2g_fulinc_Eta_E_Theta_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Eta_E_Theta", &fH_2g_fulinc_Eta_E_Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Coinc_Time_CB", &fH_2g_fulinc_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Coinc_Time_CB_TAPS", &fH_2g_fulinc_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Coinc_Time_TAPS", &fH_2g_fulinc_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Rand_Time_CB", &fH_2g_fulinc_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_Rand_Time_TAPS", &fH_2g_fulinc_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_IM_Tot", &fH_2g_fulinc_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_IM_E", &fH_2g_fulinc_IM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_MM_Tot", &fH_2g_fulinc_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f2g_fulinc_NCTBin", &f2g_fulinc_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_IM", &fH_2g_fulinc_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_E", &fH_2g_fulinc_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_ExFunc", &fH_2g_fulinc_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Photon_TOF_TAPS", &fH_2g_qfinc_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Photon_TOF_CB", &fH_2g_qfinc_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Photon_PSA", &fH_2g_qfinc_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Coinc_Time_CB", &fH_2g_qfinc_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Coinc_Time_CB_TAPS", &fH_2g_qfinc_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Coinc_Time_TAPS", &fH_2g_qfinc_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Rand_Time_CB", &fH_2g_qfinc_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Rand_Time_TAPS", &fH_2g_qfinc_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_IM_Tot", &fH_2g_qfinc_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_MM_Tot", &fH_2g_qfinc_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f2g_qfinc_NCTBin", &f2g_qfinc_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_IM", &fH_2g_qfinc_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_ExFunc", &fH_2g_qfinc_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_ExFunc_Gen", &fH_2g_qfinc_ExFunc_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_Det", &fH_2g_qfinc_Det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Photon_TOF_TAPS", &fH_2g_fulexc_p_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Proton_TOF_TAPS", &fH_2g_fulexc_p_Proton_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Photon_TOF_CB", &fH_2g_fulexc_p_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Proton_TOF_CB", &fH_2g_fulexc_p_Proton_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Photon_PSA", &fH_2g_fulexc_p_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Proton_PSA", &fH_2g_fulexc_p_Proton_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Proton_dE_E_CB", &fH_2g_fulexc_p_Proton_dE_E_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Proton_dE_E_TAPS", &fH_2g_fulexc_p_Proton_dE_E_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_PhiDiff_Eta_Recoil", &fH_2g_fulexc_p_PhiDiff_Eta_Recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Recoil_Fermi", &fH_2g_fulexc_p_Recoil_Fermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Coinc_Time_CB", &fH_2g_fulexc_p_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Coinc_Time_CB_TAPS", &fH_2g_fulexc_p_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Coinc_Time_TAPS", &fH_2g_fulexc_p_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Rand_Time_CB", &fH_2g_fulexc_p_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Rand_Time_TAPS", &fH_2g_fulexc_p_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_IM_Tot", &fH_2g_fulexc_p_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_MM_Tot", &fH_2g_fulexc_p_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f2g_fulexc_p_NCTBin", &f2g_fulexc_p_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_IM", &fH_2g_fulexc_p_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_ExFunc", &fH_2g_fulexc_p_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_ExFunc_Gen", &fH_2g_fulexc_p_ExFunc_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_IM_W", &fH_2g_fulexc_p_IM_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_ExFunc_W", &fH_2g_fulexc_p_ExFunc_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_ExFunc_W_Gen", &fH_2g_fulexc_p_ExFunc_W_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_IM_W_TOF", &fH_2g_fulexc_p_IM_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_ExFunc_W_TOF", &fH_2g_fulexc_p_ExFunc_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_ExFunc_W_TOF_Gen", &fH_2g_fulexc_p_ExFunc_W_TOF_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_Det", &fH_2g_fulexc_p_Det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Photon_TOF_TAPS", &fH_2g_fulexc_n_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Neutron_TOF_TAPS", &fH_2g_fulexc_n_Neutron_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Photon_TOF_CB", &fH_2g_fulexc_n_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Neutron_TOF_CB", &fH_2g_fulexc_n_Neutron_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Photon_PSA", &fH_2g_fulexc_n_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Neutron_PSA", &fH_2g_fulexc_n_Neutron_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_PhiDiff_Eta_Recoil", &fH_2g_fulexc_n_PhiDiff_Eta_Recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Recoil_Fermi", &fH_2g_fulexc_n_Recoil_Fermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Coinc_Time_CB", &fH_2g_fulexc_n_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Coinc_Time_CB_TAPS", &fH_2g_fulexc_n_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Coinc_Time_TAPS", &fH_2g_fulexc_n_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Rand_Time_CB", &fH_2g_fulexc_n_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Rand_Time_TAPS", &fH_2g_fulexc_n_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_IM_Tot", &fH_2g_fulexc_n_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_MM_Tot", &fH_2g_fulexc_n_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f2g_fulexc_n_NCTBin", &f2g_fulexc_n_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_IM", &fH_2g_fulexc_n_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_ExFunc", &fH_2g_fulexc_n_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_ExFunc_Gen", &fH_2g_fulexc_n_ExFunc_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_IM_W", &fH_2g_fulexc_n_IM_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_ExFunc_W", &fH_2g_fulexc_n_ExFunc_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_ExFunc_W_Gen", &fH_2g_fulexc_n_ExFunc_W_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_IM_W_TOF", &fH_2g_fulexc_n_IM_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_ExFunc_W_TOF", &fH_2g_fulexc_n_ExFunc_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_ExFunc_W_TOF_Gen", &fH_2g_fulexc_n_ExFunc_W_TOF_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_Det", &fH_2g_fulexc_n_Det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Photon_TOF_TAPS", &fH_6g_fulinc_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Photon_TOF_CB", &fH_6g_fulinc_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Photon_PSA", &fH_6g_fulinc_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Eta_E_Theta_Gen", &fH_6g_fulinc_Eta_E_Theta_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Eta_E_Theta", &fH_6g_fulinc_Eta_E_Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Coinc_Time_CB", &fH_6g_fulinc_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Coinc_Time_CB_TAPS", &fH_6g_fulinc_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Coinc_Time_TAPS", &fH_6g_fulinc_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Rand_Time_CB", &fH_6g_fulinc_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_Rand_Time_TAPS", &fH_6g_fulinc_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_IM_Tot", &fH_6g_fulinc_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_IM_E", &fH_6g_fulinc_IM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_MM_Tot", &fH_6g_fulinc_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f6g_fulinc_NCTBin", &f6g_fulinc_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_IM", &fH_6g_fulinc_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_E", &fH_6g_fulinc_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_ExFunc", &fH_6g_fulinc_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_IM_Debug[10]", &fH_6g_fulinc_IM_Debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Photon_TOF_TAPS", &fH_6g_qfinc_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Photon_TOF_CB", &fH_6g_qfinc_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Photon_PSA", &fH_6g_qfinc_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Coinc_Time_CB", &fH_6g_qfinc_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Coinc_Time_CB_TAPS", &fH_6g_qfinc_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Coinc_Time_TAPS", &fH_6g_qfinc_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Rand_Time_CB", &fH_6g_qfinc_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_Rand_Time_TAPS", &fH_6g_qfinc_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_IM_Tot", &fH_6g_qfinc_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_MM_Tot", &fH_6g_qfinc_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f6g_qfinc_NCTBin", &f6g_qfinc_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_IM", &fH_6g_qfinc_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_ExFunc", &fH_6g_qfinc_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_ExFunc_Gen", &fH_6g_qfinc_ExFunc_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_qfinc_IM_Debug[10]", &fH_6g_qfinc_IM_Debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Photon_TOF_TAPS", &fH_6g_fulexc_p_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Proton_TOF_TAPS", &fH_6g_fulexc_p_Proton_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Photon_TOF_CB", &fH_6g_fulexc_p_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Proton_TOF_CB", &fH_6g_fulexc_p_Proton_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Photon_PSA", &fH_6g_fulexc_p_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Proton_PSA", &fH_6g_fulexc_p_Proton_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Proton_dE_E_CB", &fH_6g_fulexc_p_Proton_dE_E_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Proton_dE_E_TAPS", &fH_6g_fulexc_p_Proton_dE_E_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_PhiDiff_Eta_Recoil", &fH_6g_fulexc_p_PhiDiff_Eta_Recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Recoil_Fermi", &fH_6g_fulexc_p_Recoil_Fermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Coinc_Time_CB", &fH_6g_fulexc_p_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Coinc_Time_CB_TAPS", &fH_6g_fulexc_p_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Coinc_Time_TAPS", &fH_6g_fulexc_p_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Rand_Time_CB", &fH_6g_fulexc_p_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_Rand_Time_TAPS", &fH_6g_fulexc_p_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_IM_Tot", &fH_6g_fulexc_p_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_MM_Tot", &fH_6g_fulexc_p_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f6g_fulexc_p_NCTBin", &f6g_fulexc_p_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_IM", &fH_6g_fulexc_p_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_ExFunc", &fH_6g_fulexc_p_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_ExFunc_Gen", &fH_6g_fulexc_p_ExFunc_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_IM_W", &fH_6g_fulexc_p_IM_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_ExFunc_W", &fH_6g_fulexc_p_ExFunc_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_ExFunc_W_Gen", &fH_6g_fulexc_p_ExFunc_W_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_p_IM_Debug[10]", &fH_6g_fulexc_p_IM_Debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Photon_TOF_TAPS", &fH_6g_fulexc_n_Photon_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Neutron_TOF_TAPS", &fH_6g_fulexc_n_Neutron_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Photon_TOF_CB", &fH_6g_fulexc_n_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Neutron_TOF_CB", &fH_6g_fulexc_n_Neutron_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Photon_PSA", &fH_6g_fulexc_n_Photon_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Neutron_PSA", &fH_6g_fulexc_n_Neutron_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_PhiDiff_Eta_Recoil", &fH_6g_fulexc_n_PhiDiff_Eta_Recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Recoil_Fermi", &fH_6g_fulexc_n_Recoil_Fermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Coinc_Time_CB", &fH_6g_fulexc_n_Coinc_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Coinc_Time_CB_TAPS", &fH_6g_fulexc_n_Coinc_Time_CB_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Coinc_Time_TAPS", &fH_6g_fulexc_n_Coinc_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Rand_Time_CB", &fH_6g_fulexc_n_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_Rand_Time_TAPS", &fH_6g_fulexc_n_Rand_Time_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_IM_Tot", &fH_6g_fulexc_n_IM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_MM_Tot", &fH_6g_fulexc_n_MM_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f6g_fulexc_n_NCTBin", &f6g_fulexc_n_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_IM", &fH_6g_fulexc_n_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_ExFunc", &fH_6g_fulexc_n_ExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_ExFunc_Gen", &fH_6g_fulexc_n_ExFunc_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_IM_W", &fH_6g_fulexc_n_IM_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_ExFunc_W", &fH_6g_fulexc_n_ExFunc_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_ExFunc_W_Gen", &fH_6g_fulexc_n_ExFunc_W_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulexc_n_IM_Debug[10]", &fH_6g_fulexc_n_IM_Debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Proton_TOF_TAPS", &fH_Comp_p_Proton_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Photon_TOF_CB", &fH_Comp_p_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Proton_PSA", &fH_Comp_p_Proton_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Proton_dE_E_TAPS", &fH_Comp_p_Proton_dE_E_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_2g_IM", &fH_Comp_p_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_PhiDiff_Gamma_Recoil", &fH_Comp_p_PhiDiff_Gamma_Recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Recoil_Fermi", &fH_Comp_p_Recoil_Fermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ENuclKin_ENuclTOF", &fH_Comp_p_ENuclKin_ENuclTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_EBeam_CosThetaCM", &fH_Comp_p_EBeam_CosThetaCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_E_Theta_Gamma", &fH_Comp_p_E_Theta_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_E_Theta_Gamma_Miss", &fH_Comp_p_E_Theta_Gamma_Miss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Rand_Time_CB", &fH_Comp_p_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ME_W_Tot", &fH_Comp_p_ME_W_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComp_p_NCTBin", &fComp_p_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ME_W", &fH_Comp_p_ME_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ExFunc_W", &fH_Comp_p_ExFunc_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ExFunc_W_90_110", &fH_Comp_p_ExFunc_W_90_110);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ExFunc_W_110_130", &fH_Comp_p_ExFunc_W_110_130);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ExFunc_W_130_150", &fH_Comp_p_ExFunc_W_130_150);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ExFunc_W_Gen", &fH_Comp_p_ExFunc_W_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ME_W_TOF", &fH_Comp_p_ME_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_ExFunc_W_TOF", &fH_Comp_p_ExFunc_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Gen", &fH_Comp_p_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_Det", &fH_Comp_p_Det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_MVA_Value", &fH_Comp_p_MVA_Value);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMVA_Reader_Comp_p", &fMVA_Reader_Comp_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_1_Comp_p", &fMVA_Var_1_Comp_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_2_Comp_p", &fMVA_Var_2_Comp_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_3_Comp_p", &fMVA_Var_3_Comp_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_4_Comp_p", &fMVA_Var_4_Comp_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_5_Comp_p", &fMVA_Var_5_Comp_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Neutron_TOF_TAPS", &fH_Comp_n_Neutron_TOF_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Photon_TOF_CB", &fH_Comp_n_Photon_TOF_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Neutron_PSA", &fH_Comp_n_Neutron_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_2g_IM", &fH_Comp_n_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_PhiDiff_Gamma_Recoil", &fH_Comp_n_PhiDiff_Gamma_Recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Recoil_Fermi", &fH_Comp_n_Recoil_Fermi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ENuclKin_ENuclTOF", &fH_Comp_n_ENuclKin_ENuclTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_EBeam_CosThetaCM", &fH_Comp_n_EBeam_CosThetaCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_E_Theta_Gamma", &fH_Comp_n_E_Theta_Gamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_E_Theta_Gamma_Miss", &fH_Comp_n_E_Theta_Gamma_Miss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Rand_Time_CB", &fH_Comp_n_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ME_W_Tot", &fH_Comp_n_ME_W_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComp_n_NCTBin", &fComp_n_NCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ME_W", &fH_Comp_n_ME_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ExFunc_W", &fH_Comp_n_ExFunc_W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ExFunc_W_90_110", &fH_Comp_n_ExFunc_W_90_110);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ExFunc_W_110_130", &fH_Comp_n_ExFunc_W_110_130);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ExFunc_W_130_150", &fH_Comp_n_ExFunc_W_130_150);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ExFunc_W_Gen", &fH_Comp_n_ExFunc_W_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ME_W_TOF", &fH_Comp_n_ME_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_ExFunc_W_TOF", &fH_Comp_n_ExFunc_W_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Gen", &fH_Comp_n_Gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_Det", &fH_Comp_n_Det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_MVA_Value", &fH_Comp_n_MVA_Value);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMVA_Reader_Comp_n", &fMVA_Reader_Comp_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_1_Comp_n", &fMVA_Var_1_Comp_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_2_Comp_n", &fMVA_Var_2_Comp_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_3_Comp_n", &fMVA_Var_3_Comp_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_4_Comp_n", &fMVA_Var_4_Comp_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMVA_Var_5_Comp_n", &fMVA_Var_5_Comp_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreateEtaGridEff", &fCreateEtaGridEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreateEta_p_Eff", &fCreateEta_p_Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreateEta_n_Eff", &fCreateEta_n_Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreateComp_p_Eff", &fCreateComp_p_Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreateComp_n_Eff", &fCreateComp_n_Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulinc_DetEff", &fH_2g_fulinc_DetEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_6g_fulinc_DetEff", &fH_6g_fulinc_DetEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_qfinc_PhaseSpace", &fH_2g_qfinc_PhaseSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_p_PhaseSpace", &fH_2g_fulexc_p_PhaseSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_2g_fulexc_n_PhaseSpace", &fH_2g_fulexc_n_PhaseSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_p_DetEff", &fH_Comp_p_DetEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Comp_n_DetEff", &fH_Comp_n_DetEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_2g_qfinc_MM_Min", &fG_2g_qfinc_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_2g_qfinc_MM_Max", &fG_2g_qfinc_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_2g_fulexc_p_MM_Min", &fG_2g_fulexc_p_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_2g_fulexc_p_MM_Max", &fG_2g_fulexc_p_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_2g_fulexc_n_MM_Min", &fG_2g_fulexc_n_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_2g_fulexc_n_MM_Max", &fG_2g_fulexc_n_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_6g_qfinc_MM_Min", &fG_6g_qfinc_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_6g_qfinc_MM_Max", &fG_6g_qfinc_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_6g_fulexc_p_MM_Min", &fG_6g_fulexc_p_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_6g_fulexc_p_MM_Max", &fG_6g_fulexc_p_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_6g_fulexc_n_MM_Min", &fG_6g_fulexc_n_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fG_6g_fulexc_n_MM_Max", &fG_6g_fulexc_n_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTestP", &hTestP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTestN", &hTestN);
      TA2MyPhysics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyAnalysis(void *p) {
      delete ((::TA2MyAnalysis*)p);
   }
   static void deleteArray_TA2MyAnalysis(void *p) {
      delete [] ((::TA2MyAnalysis*)p);
   }
   static void destruct_TA2MyAnalysis(void *p) {
      typedef ::TA2MyAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyAnalysis

//______________________________________________________________________________
void TA2MyCalibration::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyCalibration.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyCalibration::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyCalibration::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyCalibration::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyCalibration.
      TClass *R__cl = ::TA2MyCalibration::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCalib", &fNCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCB2gCalib", &fCB2gCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS2gCalib", &fTAPS2gCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_PSACalib", &fTAPS_PSACalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPS_LEDCalib", &fTAPS_LEDCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeCalib", &fTimeCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPIDCalib", &fPIDCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCBWalk", &fCBWalk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTaggerTimeCalib", &fTaggerTimeCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSDebugOutput", &fTAPSDebugOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusterDebug", &fClusterDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoCalib", &fVetoCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTotClusters", &fNTotClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBP4", &fCBP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSP4", &fTAPSP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_BeamHel", &fH_Calib_BeamHel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_PID", &fH_Calib_CB_PID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Total_E", &fH_Calib_Total_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_IM_2g", &fH_Calib_IM_2g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_IM_2g_2CB", &fH_Calib_IM_2g_2CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_IM_2g_1TAPS", &fH_Calib_IM_2g_1TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_IM_2g_2TAPS", &fH_Calib_IM_2g_2TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_IM_2g_cut", &fH_Calib_IM_2g_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_IM_2g_IM_Em", &fH_Calib_IM_2g_IM_Em);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Charged_Theta", &fH_Calib_Charged_Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_NtotalClusters", &fH_Calib_NtotalClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_Energy", &fH_Calib_TAPS_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_Energy", &fH_Calib_CB_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_ClSize_v_Energy", &fH_Calib_CB_ClSize_v_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_Nhits", &fH_Calib_Tagger_Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_Hits", &fH_Calib_Tagger_Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_Energy", &fH_Calib_Tagger_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_Time", &fH_Calib_Tagger_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_HelTest", &fH_Calib_HelTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_VetoCorrel", &fH_Calib_TAPS_VetoCorrel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_pi0_Energy", &fH_Calib_CB_2g_pi0_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_pi0_Angle", &fH_Calib_CB_2g_pi0_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_eta_Energy", &fH_Calib_CB_2g_eta_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_eta_Angle", &fH_Calib_CB_2g_eta_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_SingleClusterPos", &fH_Calib_TAPS_SingleClusterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_ClusterPos", &fH_Calib_TAPS_ClusterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_ClPhi_v_ClTheta", &fH_Calib_TAPS_ClPhi_v_ClTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_ClPhi_v_ClTheta", &fH_Calib_CB_ClPhi_v_ClTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_TOF", &fH_Calib_TAPS_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_Walk[384]", &fH_Calib_TAPS_Walk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CFD", &fH_Calib_CFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_LED1", &fH_Calib_LED1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_LED2", &fH_Calib_LED2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_LG[384]", &fH_Calib_TAPS_LG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_LG_CFD[384]", &fH_Calib_TAPS_LG_CFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_LG_NOCFD[384]", &fH_Calib_TAPS_LG_NOCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_LG_LED1[384]", &fH_Calib_TAPS_LG_LED1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_LG_LED2[384]", &fH_Calib_TAPS_LG_LED2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IMS", &fH_Calib_CB_2g_IMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IM", &fH_Calib_CB_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IM2", &fH_Calib_CB_2g_IM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IMS_cut", &fH_Calib_CB_2g_IMS_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IM_cut", &fH_Calib_CB_2g_IM_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IM2_cut", &fH_Calib_CB_2g_IM2_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_Time", &fH_Calib_CB_2g_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_Time_cut", &fH_Calib_CB_2g_Time_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_1g_IMS", &fH_Calib_TAPS_1g_IMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_1g_IM", &fH_Calib_TAPS_1g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_1g_IM2", &fH_Calib_TAPS_1g_IM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_2g_IMS_noV", &fH_Calib_TAPS_2g_IMS_noV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_2g_IMS", &fH_Calib_TAPS_2g_IMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_2g_IM", &fH_Calib_TAPS_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_2g_Time", &fH_Calib_TAPS_2g_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_Tagger", &fH_Calib_Time_Tagger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_TAPS_vs_Tagger_ClnoV", &fH_Calib_Time_TAPS_vs_Tagger_ClnoV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_Tagger_vs_TAPS_ClnoV", &fH_Calib_Time_Tagger_vs_TAPS_ClnoV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_TAPS_vs_Tagger_Cl", &fH_Calib_Time_TAPS_vs_Tagger_Cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_Tagger_vs_TAPS_Cl", &fH_Calib_Time_Tagger_vs_TAPS_Cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_TAPS_vs_Tagger", &fH_Calib_Time_TAPS_vs_Tagger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Time_Tagger_vs_TAPS", &fH_Calib_Time_Tagger_vs_TAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_PSAR_vs_PSAA_Veto[384]", &fH_Calib_TAPS_PSAR_vs_PSAA_Veto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_PSAR_vs_PSAA[384]", &fH_Calib_TAPS_PSAR_vs_PSAA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_PID_ID_v_CBAz", &fH_Calib_PID_ID_v_CBAz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_PID_CB_Phi_Diff", &fH_Calib_PID_CB_Phi_Diff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_PID_Energy", &fH_Calib_PID_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_PID_Time", &fH_Calib_PID_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_ClSize_v_dE", &fH_Calib_ClSize_v_dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_PID_dE_v_Th[24]", &fH_Calib_PID_dE_v_Th);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CBWalk_Et[720]", &fH_Calib_CBWalk_Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CBWalk_EtS", &fH_Calib_CBWalk_EtS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_PbGlass_Time", &fH_Calib_PbGlass_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_m_PbGlass_Sum", &fH_Calib_Tagger_m_PbGlass_Sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_p_PbGlass_Sum", &fH_Calib_Tagger_p_PbGlass_Sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_m_PbGlass", &fH_Calib_Tagger_m_PbGlass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_Tagger_p_PbGlass", &fH_Calib_Tagger_p_PbGlass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_TAPS_Veto_dE_E_tot", &fH_TAPS_Veto_dE_E_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_TAPS_Veto_dE_E[384]", &fH_TAPS_Veto_dE_E);
      TA2MyPhysics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyCalibration(void *p) {
      delete ((::TA2MyCalibration*)p);
   }
   static void deleteArray_TA2MyCalibration(void *p) {
      delete [] ((::TA2MyCalibration*)p);
   }
   static void destruct_TA2MyCalibration(void *p) {
      typedef ::TA2MyCalibration current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyCalibration

//______________________________________________________________________________
void TA2MyCaLib::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyCaLib.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyCaLib::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyCaLib::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyCaLib::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyCaLib.
      TClass *R__cl = ::TA2MyCaLib::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCalib", &fNCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelemTAGG", &fNelemTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelemCB", &fNelemCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelemTAPS", &fNelemTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelemPID", &fNelemPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelemVeto", &fNelemVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_Target_Position", &fCalib_Target_Position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_IM_TargPos", &fHCalib_CB_IM_TargPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Energy", &fCalib_CB_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_IM", &fHCalib_CB_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_IM_Neut", &fHCalib_CB_IM_Neut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Quad", &fCalib_CB_Quad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Quad_Pi0_Min", &fCalib_CB_Quad_Pi0_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Quad_Pi0_Max", &fCalib_CB_Quad_Pi0_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Quad_Eta_Min", &fCalib_CB_Quad_Eta_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Quad_Eta_Max", &fCalib_CB_Quad_Eta_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Quad_IM", &fHCalib_CB_Quad_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Quad_Pi0_Mean_E", &fHCalib_CB_Quad_Pi0_Mean_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Quad_Eta_Mean_E", &fHCalib_CB_Quad_Eta_Mean_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Time", &fCalib_CB_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Time", &fHCalib_CB_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Time_Neut", &fHCalib_CB_Time_Neut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Time_Ind", &fHCalib_CB_Time_Ind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk", &fCalib_CB_Walk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_Pi0_Min", &fCalib_CB_Walk_Pi0_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_Pi0_Max", &fCalib_CB_Walk_Pi0_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_Prompt_Min", &fCalib_CB_Walk_Prompt_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_Prompt_Max", &fCalib_CB_Walk_Prompt_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_BG1_Min", &fCalib_CB_Walk_BG1_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_BG1_Max", &fCalib_CB_Walk_BG1_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_BG2_Min", &fCalib_CB_Walk_BG2_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_BG2_Max", &fCalib_CB_Walk_BG2_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_MM_Min", &fCalib_CB_Walk_MM_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_CB_Walk_MM_Max", &fCalib_CB_Walk_MM_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Walk_IM", &fHCalib_CB_Walk_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Walk_MM", &fHCalib_CB_Walk_MM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Walk_Rand_Time_CB", &fHCalib_CB_Walk_Rand_Time_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_CB_Walk_E_T", &fHCalib_CB_Walk_E_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Energy", &fCalib_TAPS_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_IM", &fHCalib_TAPS_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_IM_Neut", &fHCalib_TAPS_IM_Neut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_IM_Neut_2Cl", &fHCalib_TAPS_IM_Neut_2Cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Time", &fCalib_TAPS_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_Time", &fHCalib_TAPS_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_Time_Neut", &fHCalib_TAPS_Time_Neut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_Time_Ind", &fHCalib_TAPS_Time_Ind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Quad", &fCalib_TAPS_Quad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Quad_Pi0_Min", &fCalib_TAPS_Quad_Pi0_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Quad_Pi0_Max", &fCalib_TAPS_Quad_Pi0_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Quad_Eta_Min", &fCalib_TAPS_Quad_Eta_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_Quad_Eta_Max", &fCalib_TAPS_Quad_Eta_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_Quad_IM", &fHCalib_TAPS_Quad_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_Quad_Pi0_Mean_E", &fHCalib_TAPS_Quad_Pi0_Mean_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_Quad_Eta_Mean_E", &fHCalib_TAPS_Quad_Eta_Mean_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_PSA", &fCalib_TAPS_PSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_PSAR_PSAA", &fHCalib_TAPS_PSAR_PSAA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_TAPS_LED", &fCalib_TAPS_LED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_LG", &fHCalib_TAPS_LG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_LG_CFD", &fHCalib_TAPS_LG_CFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_LG_NOCFD", &fHCalib_TAPS_LG_NOCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_LG_LED1", &fHCalib_TAPS_LG_LED1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_TAPS_LG_LED2", &fHCalib_TAPS_LG_LED2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_PID_Phi", &fCalib_PID_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_PID_CBPhi_ID", &fHCalib_PID_CBPhi_ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_PID_CBPhi_ID_1Cryst", &fHCalib_PID_CBPhi_ID_1Cryst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_PID_Energy", &fCalib_PID_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_PID_dE_E", &fHCalib_PID_dE_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_PID_Time", &fCalib_PID_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_PID_Time", &fHCalib_PID_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_PID_Time_Ind", &fHCalib_PID_Time_Ind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_Veto_Corr", &fCalib_Veto_Corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Veto_Corr", &fHCalib_Veto_Corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_Veto_Energy", &fCalib_Veto_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Veto_dE_E", &fHCalib_Veto_dE_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_Veto_Time", &fCalib_Veto_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Veto_Time", &fHCalib_Veto_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Veto_Time_Ind", &fHCalib_Veto_Time_Ind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalib_Tagger_Time", &fCalib_Tagger_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Tagger_Time", &fHCalib_Tagger_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Tagger_Time_Neut", &fHCalib_Tagger_Time_Neut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCalib_Tagger_Time_Ind", &fHCalib_Tagger_Time_Ind);
      TA2MyPhysics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyCaLib(void *p) {
      delete ((::TA2MyCaLib*)p);
   }
   static void deleteArray_TA2MyCaLib(void *p) {
      delete [] ((::TA2MyCaLib*)p);
   }
   static void destruct_TA2MyCaLib(void *p) {
      typedef ::TA2MyCaLib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyCaLib

//______________________________________________________________________________
void TA2MyClusterCalib::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyClusterCalib.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyClusterCalib::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyClusterCalib::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyClusterCalib::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyClusterCalib.
      TClass *R__cl = ::TA2MyClusterCalib::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_Energy_MC", &fH_Photon_Energy_MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_Diff_Px", &fH_Photon_CB_Diff_Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_Diff_Py", &fH_Photon_CB_Diff_Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_Diff_Pz", &fH_Photon_CB_Diff_Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_Diff_E", &fH_Photon_CB_Diff_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_Diff_Theta", &fH_Photon_CB_Diff_Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_Diff_Phi", &fH_Photon_CB_Diff_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_CorrFac_Tot", &fH_Photon_CB_CorrFac_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_CorrFac[180]", &fH_Photon_CB_CorrFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_CB_CorrTheta[180]", &fH_Photon_CB_CorrTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_Diff_Px", &fH_Photon_TAPS_Diff_Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_Diff_Py", &fH_Photon_TAPS_Diff_Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_Diff_Pz", &fH_Photon_TAPS_Diff_Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_Diff_E", &fH_Photon_TAPS_Diff_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_Diff_Theta", &fH_Photon_TAPS_Diff_Theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_Diff_Phi", &fH_Photon_TAPS_Diff_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_CorrFac_Tot", &fH_Photon_TAPS_CorrFac_Tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_CorrFac[180]", &fH_Photon_TAPS_CorrFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Photon_TAPS_CorrTheta[180]", &fH_Photon_TAPS_CorrTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IM", &fH_Calib_CB_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_CB_2g_IM2", &fH_Calib_CB_2g_IM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_1g_IM", &fH_Calib_TAPS_1g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_1g_IM2", &fH_Calib_TAPS_1g_IM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Calib_TAPS_2g_Time", &fH_Calib_TAPS_2g_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_CB_2g_IM", &fH_CB_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_CB_Pion_Avr_E", &fH_CB_Pion_Avr_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_CB_Eta_Avr_E", &fH_CB_Eta_Avr_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_TAPS_1g_IM", &fH_TAPS_1g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_TAPS_2g_IM", &fH_TAPS_2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_TAPS_Pion_Avr_E", &fH_TAPS_Pion_Avr_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_TAPS_Eta_Avr_E", &fH_TAPS_Eta_Avr_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPhotonCalib", &fIsPhotonCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonMC_Px", &fPhotonMC_Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonMC_Py", &fPhotonMC_Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonMC_Pz", &fPhotonMC_Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonMC_Pt", &fPhotonMC_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonMC_En", &fPhotonMC_En);
      TA2MyPhysics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyClusterCalib(void *p) {
      delete ((::TA2MyClusterCalib*)p);
   }
   static void deleteArray_TA2MyClusterCalib(void *p) {
      delete [] ((::TA2MyClusterCalib*)p);
   }
   static void destruct_TA2MyClusterCalib(void *p) {
      typedef ::TA2MyClusterCalib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyClusterCalib

//______________________________________________________________________________
void TA2MyRateEstimation::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyRateEstimation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyRateEstimation::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyRateEstimation::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyRateEstimation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyRateEstimation.
      TClass *R__cl = ::TA2MyRateEstimation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_eta2g_IM", &fH_eta2g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_eta6g_raw_IM", &fH_eta6g_raw_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_eta6g_IM", &fH_eta6g_IM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_eta6g_pi0_IM", &fH_eta6g_pi0_IM);
      TA2MyPhysics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyRateEstimation(void *p) {
      delete ((::TA2MyRateEstimation*)p);
   }
   static void deleteArray_TA2MyRateEstimation(void *p) {
      delete [] ((::TA2MyRateEstimation*)p);
   }
   static void destruct_TA2MyRateEstimation(void *p) {
      typedef ::TA2MyRateEstimation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyRateEstimation

//______________________________________________________________________________
void TA2MyPhysics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyPhysics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyPhysics::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyPhysics::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyPhysics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyPhysics.
      TClass *R__cl = ::TA2MyPhysics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_EventInfo", &fH_EventInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Corrected_Scalers", &fH_Corrected_Scalers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_Corrected_SumScalers", &fH_Corrected_SumScalers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_MCVertX", &fH_MCVertX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_MCVertY", &fH_MCVertY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_MCVertZ", &fH_MCVertZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOldScalerSumValue", &fOldScalerSumValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOldP2ScalerSum", &fOldP2ScalerSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBadTaggerChannels", &fNBadTaggerChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadTaggerChannels", &fBadTaggerChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNt_P2TaggerRatio", &fNt_P2TaggerRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetPosition", &fTargetPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCBTimeOffset", &fCBTimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSTimeOffset", &fTAPSTimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_CB_PID_Coinc_Hits", &fH_CB_PID_Coinc_Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH_CB_PID_dE_E", &fH_CB_PID_dE_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCBPIDPhiLimit", &fCBPIDPhiLimit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCaLibReader", &fCaLibReader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalysisMode", &fAnalysisMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMC", &fIsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCVertX", &fMCVertX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCVertY", &fMCVertY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCVertZ", &fMCVertZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventCounter", &fEventCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventOffset", &fEventOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveEvent", &fSaveEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTagger", &fTagger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLadder", &fLadder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTaggerPhotonNhits", &fTaggerPhotonNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerPhotonHits", &fTaggerPhotonHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerPhotonEnergy", &fTaggerPhotonEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaggerPhotonTime", &fTaggerPhotonTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaI", &fNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNaINhits", &fNaINhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaIHits", &fNaIHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaIEnergy", &fNaIEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaITime", &fNaITime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBClTime", &fCBClTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBPID_Index", &fCBPID_Index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBPID_dE", &fCBPID_dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBClusterHit", &fCBClusterHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCBNCluster", &fCBNCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCBCluster", &fCBCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPIDNhits", &fPIDNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDHits", &fPIDHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDEnergy", &fPIDEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDTime", &fPIDTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDHitPos", &fPIDHitPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2PWO", &fBaF2PWO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2PWONhits", &fBaF2PWONhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2PWOHits", &fBaF2PWOHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2PWOEnergy", &fBaF2PWOEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2PWOTime", &fBaF2PWOTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2Pattern", &fBaF2Pattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2CFDPattern", &fBaF2CFDPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2LED1Pattern", &fBaF2LED1Pattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2LED2Pattern", &fBaF2LED2Pattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2CFDNhits", &fBaF2CFDNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2CFDHits", &fBaF2CFDHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2LED1Nhits", &fBaF2LED1Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2LED1Hits", &fBaF2LED1Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaF2LED2Nhits", &fBaF2LED2Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2LED2Hits", &fBaF2LED2Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSClusterHit", &fTAPSClusterHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAPSNCluster", &fTAPSNCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPSCluster", &fTAPSCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVeto", &fVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoNhits", &fVetoNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVetoHits", &fVetoHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVetoEnergy", &fVetoEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVetoTime", &fVetoTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbWO4", &fPbWO4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPbWO4Nhits", &fPbWO4Nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbWO4Hits", &fPbWO4Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbWO4Energy", &fPbWO4Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbWO4Time", &fPbWO4Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCP", &fCP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEBeamBitPos", &fEBeamBitPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEBeamBitNeg", &fEBeamBitNeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEBeamHelState", &fEBeamHelState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF", &fTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTOFBarNhits", &fTOFBarNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOFBarHits", &fTOFBarHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOFBarMeanEnergy", &fTOFBarMeanEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOFBarMeanTime", &fTOFBarMeanTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbGlassApp", &fPbGlassApp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbGlass", &fPbGlass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPbGlassNhits", &fPbGlassNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbGlassTime", &fPbGlassTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNNeutral", &fNNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCharged", &fNCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartCB", &fPartCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartTAPS", &fPartTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartNeutral", &fPartNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartCharged", &fPartCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMC", &fNMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartMC[30]", &fPartMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1CB", &fL1CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1TAPS_OR", &fL1TAPS_OR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1TAPS_M2", &fL1TAPS_M2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1Pulser", &fL1Pulser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1TAPS_Pulser", &fL1TAPS_Pulser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL2M1", &fL2M1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL2M2", &fL2M2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL2M3", &fL2M3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL2M4", &fL2M4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigTotalMult", &fTrigTotalMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigTAPSMult", &fTrigTAPSMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigCBSum", &fTrigCBSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigCBSegThr", &fTrigCBSegThr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigTAPSLED1Thr", &fTrigTAPSLED1Thr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigTAPSLED2Thr", &fTrigTAPSLED2Thr);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyPhysics(void *p) {
      delete ((::TA2MyPhysics*)p);
   }
   static void deleteArray_TA2MyPhysics(void *p) {
      delete [] ((::TA2MyPhysics*)p);
   }
   static void destruct_TA2MyPhysics(void *p) {
      typedef ::TA2MyPhysics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyPhysics

//______________________________________________________________________________
void TA2MyCrystalBall::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyCrystalBall.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyCrystalBall::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyCrystalBall::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyCrystalBall::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyCrystalBall.
      TClass *R__cl = ::TA2MyCrystalBall::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNaI", &fNaI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDdPhi", &fPIDdPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPIDdPhi", &fMaxPIDdPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngDiffI", &fAngDiffI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDij", &fPIDij);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDindex", &fPIDindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDdouble", &fPIDdouble);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaE", &fDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaEdouble", &fDeltaEdouble);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fECentral", &fECentral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEch", &fEch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaPhi", &fDeltaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaTheta", &fDeltaTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaEOR", &fDeltaEOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEchOR", &fEchOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCharged", &fNCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDEnergyDepo", &fPIDEnergyDepo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIDElementIndex", &fPIDElementIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPIDNelem", &fPIDNelem);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyCrystalBall(void *p) {
      delete ((::TA2MyCrystalBall*)p);
   }
   static void deleteArray_TA2MyCrystalBall(void *p) {
      delete [] ((::TA2MyCrystalBall*)p);
   }
   static void destruct_TA2MyCrystalBall(void *p) {
      typedef ::TA2MyCrystalBall current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyCrystalBall

//______________________________________________________________________________
void TA2MyTAPS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyTAPS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyTAPS::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyTAPS::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyTAPS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyTAPS.
      TClass *R__cl = ::TA2MyTAPS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBaF2PWO", &fBaF2PWO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVETO", &fVETO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTapsFudge", &fTapsFudge);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyTAPS(void *p) {
      delete ((::TA2MyTAPS*)p);
   }
   static void deleteArray_TA2MyTAPS(void *p) {
      delete [] ((::TA2MyTAPS*)p);
   }
   static void destruct_TA2MyTAPS(void *p) {
      typedef ::TA2MyTAPS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyTAPS

//______________________________________________________________________________
void TA2MyTAPS_BaF2PWO::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MyTAPS_BaF2PWO.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MyTAPS_BaF2PWO::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MyTAPS_BaF2PWO::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MyTAPS_BaF2PWO::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MyTAPS_BaF2PWO.
      TClass *R__cl = ::TA2MyTAPS_BaF2PWO::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSGElement", &fSGElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLGElement", &fLGElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSGElements", &fMaxSGElements);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSG", &fNSG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandGen", &fRandGen);
      TA2ClusterDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MyTAPS_BaF2PWO(void *p) {
      delete ((::TA2MyTAPS_BaF2PWO*)p);
   }
   static void deleteArray_TA2MyTAPS_BaF2PWO(void *p) {
      delete [] ((::TA2MyTAPS_BaF2PWO*)p);
   }
   static void destruct_TA2MyTAPS_BaF2PWO(void *p) {
      typedef ::TA2MyTAPS_BaF2PWO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MyTAPS_BaF2PWO

/********************************************************
* /home/ott/acqu/root/src/UserDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableUserDict();

extern "C" void G__set_cpp_environmentUserDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2CalArray.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2FPMicro.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2GenericApp.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyAnalysis.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyCaLib.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyCalibration.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyClusterCalib.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyCrystalBall.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyPhysics.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyRateEstimation.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyTAPS_BaF2PWO.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2MyTAPS.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2PlasticPID.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2PlasticVETO.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2UserAnalysis.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TA2UserControl.h");
  G__cpp_reset_tagtableUserDict();
}
#include <new>
extern "C" int G__cpp_dllrevUserDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TA2CalArray */
static int G__UserDict_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CalArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CalArray((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2CalArray((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CalArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CalArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CalArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CalArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CalArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CalArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CalArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CalArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_717_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CalArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_717_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CalArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CalArray(*(TA2CalArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CalArray G__TTA2CalArray;
static int G__UserDict_717_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CalArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CalArray*) (soff+(sizeof(TA2CalArray)*i)))->~G__TTA2CalArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CalArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CalArray*) (soff))->~G__TTA2CalArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2FPMicro */
static int G__UserDict_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2FPMicro* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2FPMicro((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2FPMicro((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2FPMicro*) G__getstructoffset())->GetFPhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2FPMicro*) G__getstructoffset())->GetNFPhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2FPMicro*) G__getstructoffset())->GetNFPelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2FPMicro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FPMicro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2FPMicro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2FPMicro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2FPMicro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FPMicro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2FPMicro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FPMicro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_718_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2FPMicro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_718_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2FPMicro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2FPMicro(*(TA2FPMicro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2FPMicro G__TTA2FPMicro;
static int G__UserDict_718_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2FPMicro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2FPMicro*) (soff+(sizeof(TA2FPMicro)*i)))->~G__TTA2FPMicro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2FPMicro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2FPMicro*) (soff))->~G__TTA2FPMicro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2PlasticPID */
static int G__UserDict_737_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2PlasticPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2PlasticPID((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2PlasticPID((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2PlasticPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2PlasticPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2PlasticPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PlasticPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PlasticPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_737_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PlasticPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_737_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2PlasticPID* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2PlasticPID(*(TA2PlasticPID*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2PlasticPID G__TTA2PlasticPID;
static int G__UserDict_737_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2PlasticPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2PlasticPID*) (soff+(sizeof(TA2PlasticPID)*i)))->~G__TTA2PlasticPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2PlasticPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2PlasticPID*) (soff))->~G__TTA2PlasticPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2GenericApp */
static int G__UserDict_738_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2GenericApp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2GenericApp((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2GenericApp((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetGenDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetLScint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetLTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericApp*) G__getstructoffset())->GetTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2GenericApp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2GenericApp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2GenericApp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericApp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericApp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_738_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericApp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_738_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2GenericApp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2GenericApp(*(TA2GenericApp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2GenericApp G__TTA2GenericApp;
static int G__UserDict_738_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2GenericApp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2GenericApp*) (soff+(sizeof(TA2GenericApp)*i)))->~G__TTA2GenericApp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2GenericApp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2GenericApp*) (soff))->~G__TTA2GenericApp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyCrystalBall */
static int G__UserDict_932_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyCrystalBall* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyCrystalBall((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyCrystalBall((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2MyCrystalBall*) G__getstructoffset())->GetNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2MyCrystalBall*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2MyCrystalBall*) G__getstructoffset())->GetNCharged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2MyCrystalBall*) G__getstructoffset())->GetDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2MyCrystalBall*) G__getstructoffset())->GetPIDEnergyDepo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2MyCrystalBall*) G__getstructoffset())->GetPIDElementIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyCrystalBall::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCrystalBall::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyCrystalBall::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyCrystalBall::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyCrystalBall*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCrystalBall::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyCrystalBall::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCrystalBall::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_932_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyCrystalBall::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_932_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyCrystalBall* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyCrystalBall(*(TA2MyCrystalBall*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyCrystalBall G__TTA2MyCrystalBall;
static int G__UserDict_932_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyCrystalBall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyCrystalBall*) (soff+(sizeof(TA2MyCrystalBall)*i)))->~G__TTA2MyCrystalBall();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyCrystalBall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyCrystalBall*) (soff))->~G__TTA2MyCrystalBall();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyTAPS_BaF2PWO */
static int G__UserDict_935_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyTAPS_BaF2PWO* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyTAPS_BaF2PWO((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyTAPS_BaF2PWO((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2MyTAPS_BaF2PWO*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2MyTAPS_BaF2PWO*) G__getstructoffset())->GetLGElement((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2MyTAPS_BaF2PWO*) G__getstructoffset())->GetSGElement((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2MyTAPS_BaF2PWO*) G__getstructoffset())->GetSGEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2MyTAPS_BaF2PWO*) G__getstructoffset())->GetLGEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyTAPS_BaF2PWO::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyTAPS_BaF2PWO::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyTAPS_BaF2PWO::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyTAPS_BaF2PWO::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyTAPS_BaF2PWO*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyTAPS_BaF2PWO::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyTAPS_BaF2PWO::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyTAPS_BaF2PWO::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_935_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyTAPS_BaF2PWO::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_935_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyTAPS_BaF2PWO* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyTAPS_BaF2PWO(*(TA2MyTAPS_BaF2PWO*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyTAPS_BaF2PWO G__TTA2MyTAPS_BaF2PWO;
static int G__UserDict_935_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyTAPS_BaF2PWO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyTAPS_BaF2PWO*) (soff+(sizeof(TA2MyTAPS_BaF2PWO)*i)))->~G__TTA2MyTAPS_BaF2PWO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyTAPS_BaF2PWO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyTAPS_BaF2PWO*) (soff))->~G__TTA2MyTAPS_BaF2PWO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2PlasticVETO */
static int G__UserDict_936_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2PlasticVETO* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2PlasticVETO((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2PlasticVETO((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2PlasticVETO::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticVETO::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2PlasticVETO::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2PlasticVETO::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2PlasticVETO*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticVETO::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PlasticVETO::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2PlasticVETO::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_936_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2PlasticVETO::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_936_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2PlasticVETO* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2PlasticVETO(*(TA2PlasticVETO*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2PlasticVETO G__TTA2PlasticVETO;
static int G__UserDict_936_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2PlasticVETO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2PlasticVETO*) (soff+(sizeof(TA2PlasticVETO)*i)))->~G__TTA2PlasticVETO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2PlasticVETO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2PlasticVETO*) (soff))->~G__TTA2PlasticVETO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyTAPS */
static int G__UserDict_937_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyTAPS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyTAPS((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyTAPS((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyTAPS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyTAPS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyTAPS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyTAPS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyTAPS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyTAPS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyTAPS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyTAPS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_937_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyTAPS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_937_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyTAPS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyTAPS(*(TA2MyTAPS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyTAPS G__TTA2MyTAPS;
static int G__UserDict_937_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyTAPS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyTAPS*) (soff+(sizeof(TA2MyTAPS)*i)))->~G__TTA2MyTAPS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyTAPS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyTAPS*) (soff))->~G__TTA2MyTAPS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyPhysics */
static int G__UserDict_945_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyPhysics*) G__getstructoffset())->ReconstructPhysics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TA2MyPhysics*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyPhysics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyPhysics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyPhysics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyPhysics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyPhysics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyPhysics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyPhysics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyPhysics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_945_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyPhysics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyPhysics G__TTA2MyPhysics;
static int G__UserDict_945_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyPhysics*) (soff+(sizeof(TA2MyPhysics)*i)))->~G__TTA2MyPhysics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyPhysics*) (soff))->~G__TTA2MyPhysics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyAnalysis */
static int G__UserDict_946_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyAnalysis((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyAnalysis((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_946_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_946_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyAnalysis(*(TA2MyAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyAnalysis G__TTA2MyAnalysis;
static int G__UserDict_946_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyAnalysis*) (soff+(sizeof(TA2MyAnalysis)*i)))->~G__TTA2MyAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyAnalysis*) (soff))->~G__TTA2MyAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyCaLib */
static int G__UserDict_948_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyCaLib* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyCaLib((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyCaLib((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyCaLib::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCaLib::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyCaLib::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyCaLib::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyCaLib*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCaLib::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyCaLib::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCaLib::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_948_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyCaLib::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_948_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyCaLib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyCaLib(*(TA2MyCaLib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyCaLib G__TTA2MyCaLib;
static int G__UserDict_948_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyCaLib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyCaLib*) (soff+(sizeof(TA2MyCaLib)*i)))->~G__TTA2MyCaLib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyCaLib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyCaLib*) (soff))->~G__TTA2MyCaLib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyCalibration */
static int G__UserDict_949_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyCalibration* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyCalibration((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyCalibration((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyCalibration::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCalibration::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyCalibration::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyCalibration::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyCalibration*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCalibration::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyCalibration::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyCalibration::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_949_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyCalibration::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_949_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyCalibration* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyCalibration(*(TA2MyCalibration*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyCalibration G__TTA2MyCalibration;
static int G__UserDict_949_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyCalibration*) (soff+(sizeof(TA2MyCalibration)*i)))->~G__TTA2MyCalibration();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyCalibration*) (soff))->~G__TTA2MyCalibration();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyClusterCalib */
static int G__UserDict_950_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyClusterCalib* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyClusterCalib((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyClusterCalib((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyClusterCalib::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyClusterCalib::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyClusterCalib::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyClusterCalib::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyClusterCalib*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyClusterCalib::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyClusterCalib::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyClusterCalib::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_950_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyClusterCalib::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_950_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyClusterCalib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyClusterCalib(*(TA2MyClusterCalib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyClusterCalib G__TTA2MyClusterCalib;
static int G__UserDict_950_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyClusterCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyClusterCalib*) (soff+(sizeof(TA2MyClusterCalib)*i)))->~G__TTA2MyClusterCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyClusterCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyClusterCalib*) (soff))->~G__TTA2MyClusterCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MyRateEstimation */
static int G__UserDict_951_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MyRateEstimation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2MyRateEstimation((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2MyRateEstimation((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MyRateEstimation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyRateEstimation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MyRateEstimation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MyRateEstimation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MyRateEstimation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyRateEstimation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyRateEstimation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MyRateEstimation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_951_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MyRateEstimation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_951_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MyRateEstimation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MyRateEstimation(*(TA2MyRateEstimation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MyRateEstimation G__TTA2MyRateEstimation;
static int G__UserDict_951_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MyRateEstimation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MyRateEstimation*) (soff+(sizeof(TA2MyRateEstimation)*i)))->~G__TTA2MyRateEstimation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MyRateEstimation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MyRateEstimation*) (soff))->~G__TTA2MyRateEstimation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2UserAnalysis */
static int G__UserDict_952_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2UserAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2UserAnalysis((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TA2UserAnalysis((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2UserAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2UserAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2UserAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2UserAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_952_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UserDict_952_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2UserAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2UserAnalysis(*(TA2UserAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2UserAnalysis G__TTA2UserAnalysis;
static int G__UserDict_952_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2UserAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2UserAnalysis*) (soff+(sizeof(TA2UserAnalysis)*i)))->~G__TTA2UserAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2UserAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2UserAnalysis*) (soff))->~G__TTA2UserAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2UserControl */
static int G__UserDict_960_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2UserControl* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2UserControl(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__UserDictLN_TA2UserControl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2UserControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2UserControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2UserControl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2UserControl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2UserControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UserDict_960_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2UserControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2UserControl G__TTA2UserControl;
static int G__UserDict_960_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2UserControl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2UserControl*) (soff+(sizeof(TA2UserControl)*i)))->~G__TTA2UserControl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2UserControl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2UserControl*) (soff))->~G__TTA2UserControl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TA2CalArray */

/* TA2FPMicro */

/* TA2PlasticPID */

/* TA2GenericApp */

/* TA2MyCrystalBall */

/* TA2MyTAPS_BaF2PWO */

/* TA2PlasticVETO */

/* TA2MyTAPS */

/* TA2MyPhysics */

/* TA2MyAnalysis */

/* TA2MyCaLib */

/* TA2MyCalibration */

/* TA2MyClusterCalib */

/* TA2MyRateEstimation */

/* TA2UserAnalysis */

/* TA2UserControl */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncUserDict {
 public:
  G__Sizep2memfuncUserDict(): p(&G__Sizep2memfuncUserDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncUserDict::*p)();
};

size_t G__get_sizep2memfuncUserDict()
{
  G__Sizep2memfuncUserDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceUserDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray))) {
     TA2CalArray *G__Lderived;
     G__Lderived=(TA2CalArray*)0x1000;
     {
       TA2ClusterDetector *G__Lpbase=(TA2ClusterDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro))) {
     TA2FPMicro *G__Lderived;
     G__Lderived=(TA2FPMicro*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID))) {
     TA2PlasticPID *G__Lderived;
     G__Lderived=(TA2PlasticPID*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp))) {
     TA2GenericApp *G__Lderived;
     G__Lderived=(TA2GenericApp*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall))) {
     TA2MyCrystalBall *G__Lderived;
     G__Lderived=(TA2MyCrystalBall*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO))) {
     TA2MyTAPS_BaF2PWO *G__Lderived;
     G__Lderived=(TA2MyTAPS_BaF2PWO*)0x1000;
     {
       TA2ClusterDetector *G__Lpbase=(TA2ClusterDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO))) {
     TA2PlasticVETO *G__Lderived;
     G__Lderived=(TA2PlasticVETO*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),G__get_linked_tagnum(&G__UserDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS))) {
     TA2MyTAPS *G__Lderived;
     G__Lderived=(TA2MyTAPS*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics))) {
     TA2MyPhysics *G__Lderived;
     G__Lderived=(TA2MyPhysics*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis))) {
     TA2MyAnalysis *G__Lderived;
     G__Lderived=(TA2MyAnalysis*)0x1000;
     {
       TA2MyPhysics *G__Lpbase=(TA2MyPhysics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib))) {
     TA2MyCaLib *G__Lderived;
     G__Lderived=(TA2MyCaLib*)0x1000;
     {
       TA2MyPhysics *G__Lpbase=(TA2MyPhysics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration))) {
     TA2MyCalibration *G__Lderived;
     G__Lderived=(TA2MyCalibration*)0x1000;
     {
       TA2MyPhysics *G__Lpbase=(TA2MyPhysics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib))) {
     TA2MyClusterCalib *G__Lderived;
     G__Lderived=(TA2MyClusterCalib*)0x1000;
     {
       TA2MyPhysics *G__Lpbase=(TA2MyPhysics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation))) {
     TA2MyRateEstimation *G__Lderived;
     G__Lderived=(TA2MyRateEstimation*)0x1000;
     {
       TA2MyPhysics *G__Lpbase=(TA2MyPhysics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis))) {
     TA2UserAnalysis *G__Lderived;
     G__Lderived=(TA2UserAnalysis*)0x1000;
     {
       TA2Analysis *G__Lpbase=(TA2Analysis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2Analysis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl))) {
     TA2UserControl *G__Lderived;
     G__Lderived=(TA2UserControl*)0x1000;
     {
       TA2Control *G__Lpbase=(TA2Control*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TA2Control),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TRint *G__Lpbase=(TRint*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TRint),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl),G__get_linked_tagnum(&G__UserDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableUserDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__UserDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TMVA::Types::EMVA>",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOTMVAcLcLTypescLcLEMVAcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLTypescLcLEMVAgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TMVA::Types::EMVA,less<TString> >",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOTMVAcLcLTypescLcLEMVAcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLTypescLcLEMVAgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<EMsgType,std::string>",117,G__get_linked_tagnum(&G__UserDictLN_maplETMVAcLcLEMsgTypecOstringcOlesslETMVAcLcLEMsgTypegRcOallocatorlEpairlEconstsPTMVAcLcLEMsgTypecOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TMVA::EMsgType,string>",117,G__get_linked_tagnum(&G__UserDictLN_maplETMVAcLcLEMsgTypecOstringcOlesslETMVAcLcLEMsgTypegRcOallocatorlEpairlEconstsPTMVAcLcLEMsgTypecOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TMVA::EMsgType,string,less<TMVA::EMsgType> >",117,G__get_linked_tagnum(&G__UserDictLN_maplETMVAcLcLEMsgTypecOstringcOlesslETMVAcLcLEMsgTypegRcOallocatorlEpairlEconstsPTMVAcLcLEMsgTypecOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__UserDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t*>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEfloatmUcOallocatorlEfloatmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEfloatmUcOallocatorlEfloatmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float*>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<VariableInfo>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TMVA::VariableInfo>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ClassInfo*>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TMVA::ClassInfo*>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeInfo>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TMVA::TreeInfo>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::vector<TreeInfo> >",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<TMVA::TreeInfo,allocator<TMVA::TreeInfo> > >",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<TMVA::TreeInfo,allocator<TMVA::TreeInfo> >,less<TString> >",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Bool_t>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__UserDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UserDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__UserDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,IMethod*>",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOTMVAcLcLIMethodmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLIMethodmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TMVA::IMethod*>",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOTMVAcLcLIMethodmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLIMethodmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TMVA::IMethod*,less<TString> >",117,G__get_linked_tagnum(&G__UserDictLN_maplETStringcOTMVAcLcLIMethodmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLIMethodmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TAPSType_t",117,G__get_linked_tagnum(&G__UserDictLN_ETAPSType),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TA2CalArray */
static void G__setup_memvarTA2CalArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   { TA2CalArray *p; p=(TA2CalArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2FPMicro */
static void G__setup_memvarTA2FPMicro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   { TA2FPMicro *p; p=(TA2FPMicro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFPhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNFPhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNFPelem=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2PlasticPID */
static void G__setup_memvarTA2PlasticPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   { TA2PlasticPID *p; p=(TA2PlasticPID*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2GenericApp */
static void G__setup_memvarTA2GenericApp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   { TA2GenericApp *p; p=(TA2GenericApp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2GenericDetector),-1,-1,2,"fGenDet=",0,"\"standard\" detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fLScint=",0,"Long scintillator bars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fLTrig=",0,"Long scntillator trigger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID),-1,-1,2,"fTrig=",0,"Small trigger scint");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro),-1,-1,2,"fFPMic=",0,"microscope tests");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyCrystalBall */
static void G__setup_memvarTA2MyCrystalBall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall));
   { TA2MyCrystalBall *p; p=(TA2MyCrystalBall*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),-1,-1,2,"fNaI=",0,"Pointer to NaI array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPID=",0,"Pointer to PID");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPIDdPhi=",0,"PID-CB Phi differences");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPIDdPhi=",0,"Max PID-CB Phi difference");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAngDiffI=",0,"for general sorting of angle differences");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDij=",0,"back reference PID j, to CB i");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDindex=",0,"Delta-E index associated with cluster");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDdouble=",0,"Delta-E 2nd index associated with cluster");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaE=",0,"Cluster correlated PID energy deposit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaEdouble=",0,"Cluster correlated PID energy deposit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fECentral=",0,"Fraction total energy in central clust elem.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEch=",0,"PID correlated Cluster energy deposit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaPhi=",0,"Difference in PiD and cluster phi");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaTheta=",0,"Difference in PiD and cluster phi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDeltaEOR=",0,"OR of Delta-E (for common dE-E cuts)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEchOR=",0,"OR correlated cluster-E (common dE-E cuts)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCharged=",0,"Number of CB clusters identified as charged");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPIDEnergyDepo=",0,"another array for the energy deposited in the PID (CB cluster wise)");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDElementIndex=",0,"array for the  PID element indices (CB cluster wise)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDNelem=",0,"number of PID elements");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyTAPS_BaF2PWO */
static void G__setup_memvarTA2MyTAPS_BaF2PWO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO));
   { TA2MyTAPS_BaF2PWO *p; p=(TA2MyTAPS_BaF2PWO*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__UserDictLN_ETAPSType),G__defined_typename("TAPSType_t"),-1,2,"fType=",0,"type of TAPS configuration");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitD2A_t),-1,-1,2,"fSGElement=",0,"short-gate detector elements");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitD2A_t),-1,-1,2,"fLGElement=",0,"long-gate detector elements");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxSGElements=",0,"size of short-gate arrays");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNSG=",0,"actual # short-gate elements entered");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TRandom3),-1,-1,2,"fRandGen=",0,"random number generator for hit position smearing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2PlasticVETO */
static void G__setup_memvarTA2PlasticVETO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO));
   { TA2PlasticVETO *p; p=(TA2PlasticVETO*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyTAPS */
static void G__setup_memvarTA2MyTAPS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS));
   { TA2MyTAPS *p; p=(TA2MyTAPS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),-1,-1,2,"fBaF2PWO=",0,"combined BaF2/PWO array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO),-1,-1,2,"fVETO=",0,"charged-particle ID  ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTapsFudge=",0,"TAPS fudge factor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyPhysics */
static void G__setup_memvarTA2MyPhysics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics));
   { TA2MyPhysics *p; p=(TA2MyPhysics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_EventInfo=",0,"general event information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_Corrected_Scalers=",0,"overflow corrected current scalers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_Corrected_SumScalers=",0,"overflow corrected accumulated scalers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_MCVertX=",0,"MC vertex x-coordinate");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_MCVertY=",0,"MC vertex y-coordinate");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_MCVertZ=",0,"MC vertex z-coordinate");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOldScalerSumValue=",0,"used to avoid double sum scaler addition");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOldP2ScalerSum=",0,"used to avoid double sum scaler addition");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNBadTaggerChannels=",0,"number of bad tagger channels");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBadTaggerChannels=",0,"list of bad tagger channels");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TNtupleD),-1,-1,4,"fNt_P2TaggerRatio=",0,"ntuple for the ratio p2/tagger");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTargetPosition=",0,"target position in z-direction    ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCBTimeOffset=",0,"global CB time offset");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAPSTimeOffset=",0,"global TAPS time offset");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fH_CB_PID_Coinc_Hits=",0,"CB-PID coincidence hits");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fH_CB_PID_dE_E=",0,"CB-PID dE vs. E plots");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCBPIDPhiLimit=",0,"CB-PID coincidence phi limit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_CaLibReader_t),-1,-1,4,"fCaLibReader=",0,"CaLib reader");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAnalysisMode=",0,"analysis mode (raw, MC, ...)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMC=",0,"flag for MC analysis mode");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMCVertX=",0,"MC vertex x-coordinate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMCVertY=",0,"MC vertex y-coordinate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMCVertZ=",0,"MC vertex z-coordinate");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,"run number");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEventCounter=",0,"event counter");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEventOffset=",0,"event offset when analyzing multiple files");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSaveEvent=",0,"if 1 : save current event in reduced AcquRoot ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Tagger),-1,-1,2,"fTagger=",0,"pointer to the Tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Ladder),-1,-1,2,"fLadder=",0,"pointer to the Ladder");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTaggerPhotonNhits=",0,"number of photons in the tagger");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggerPhotonHits=",0,"pointer to the Tagger photon hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerPhotonEnergy=",0,"pointer to the Tagger photon energy array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTaggerPhotonTime=",0,"pointer to the Tagger photon time array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall),-1,-1,2,"fCB=",0,"pointer to the Crystal Ball");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector),-1,-1,2,"fNaI=",0,"pointer to the NaI elements");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNaINhits=",0,"number of NaI hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNaIHits=",0,"pointer to the NaI hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNaIEnergy=",0,"pointer to the NaI energy array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNaITime=",0,"pointer to the NaI time array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCBClTime=",0,"pointer to the CB cluster time");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCBPID_Index=",0,"pointer to the PID index of the CB cluster");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCBPID_dE=",0,"pointer to the PID energy deposition of the CB cluster");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCBClusterHit=",0,"pointer to the CB cluster hit indices");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCBNCluster=",0,"number of clusters in CB");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"fCBCluster=",0,"pointer to the list of CB clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fPID=",0,"pointer to the PID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fPIDNhits=",0,"number of hits in the PID");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPIDHits=",0,"pointer to the PID hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPIDEnergy=",0,"pointer to the PID energy array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPIDTime=",0,"pointer to the PID time array");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TVector3),-1,-1,2,"fPIDHitPos=",0,"pointer to the PID hit position list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS),-1,-1,2,"fTAPS=",0,"pointer to TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO),-1,-1,2,"fBaF2PWO=",0,"pointer to the BaF2 (or the BaF2/PWO) array");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBaF2PWONhits=",0,"number of BaF2/PWO hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2PWOHits=",0,"pointer to the BaF2/PWO hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBaF2PWOEnergy=",0,"pointer the the BaF2/PWO energy array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBaF2PWOTime=",0,"pointer to the BaF2/PWO time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2BitPattern),-1,-1,2,"fBaF2Pattern=",0,"pointer to the TAPS bit pattern");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2CFDPattern=",0,"index of the CFD pattern in the TAPS bit pattern");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2LED1Pattern=",0,"index of the LED1 pattern in the TAPS bit pattern");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2LED2Pattern=",0,"index of the LED2 pattern in the TAPS bit pattern");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBaF2CFDNhits=",0,"number of CFD hits in the BaF2");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2CFDHits=",0,"pointer to the BaF2 CFD hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBaF2LED1Nhits=",0,"number of LED1 hits in the BaF2");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2LED1Hits=",0,"pointer to the BaF2 LED1 hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBaF2LED2Nhits=",0,"number of LED2 hits in the BaF2");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaF2LED2Hits=",0,"pointer to the BaF2 LED2 hits");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAPSClusterHit=",0,"pointer to the TAPS cluster hit indices");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTAPSNCluster=",0,"number of clusters in TAPS");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_HitCluster_t),-1,-1,2,"fTAPSCluster=",0,"pointer to the list of TAPS clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Detector),-1,-1,2,"fVeto=",0,"pointer to the TAPS Vetos");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fVetoNhits=",0,"number of Veto hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVetoHits=",0,"pointer to the Veto hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVetoEnergy=",0,"pointer to the Veto energy array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVetoTime=",0,"pointer to the Veto time array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2GenericDetector),-1,-1,2,"fPbWO4=",0,"pointer to the PbWO4 ring of TAPS");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fPbWO4Nhits=",0,"number of PbWO4 hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPbWO4Hits=",0,"pointer to the PbWO4 hits array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPbWO4Energy=",0,"pointer to the PbWO4 energy array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPbWO4Time=",0,"pointer to the PbWO4 time array");
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fCP=",0,"Circular polarisation: pointer to the electron beam helicity state");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEBeamBitPos=",0,"positive helicity bit value");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEBeamBitNeg=",0,"negative helicity bit value");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEBeamHelState=",0,"electron beam helicity state value (+1/-1)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2LongScint),-1,-1,2,"fTOF=",0,"pointer to the TOF wall");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTOFBarNhits=",0,"number of TOF bar hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTOFBarHits=",0,"pointer to the TOF bar hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTOFBarMeanEnergy=",0,"pointer to the TOF bar mean energy");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTOFBarMeanTime=",0,"pointer to the TOF bar mean time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2GenericApparatus),-1,-1,2,"fPbGlassApp=",0,"pointer to the Pb glass detector apparatus");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2GenericDetector),-1,-1,2,"fPbGlass=",0,"pointer to the Pb glass detector");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fPbGlassNhits=",0,"number of hits in the Pb glass detector");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPbGlassTime=",0,"pointer to the Pb glass detector time");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNNeutral=",0,"number of detected neutral particles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCharged=",0,"number of detected charged particles");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TOA2DetParticle),-1,-1,2,"fPartCB=",0,"array of particles detected in CB");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TOA2DetParticle),-1,-1,2,"fPartTAPS=",0,"array of particles detected in TAPS");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TOA2DetParticle),-1,-1,2,"fPartNeutral=",0,"array of detected neutral particles");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TOA2DetParticle),-1,-1,2,"fPartCharged=",0,"array of detected charged particles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNMC=",0,"number of MC particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TOMCParticle),-1,-1,2,"fPartMC[30]=",0,"array of MC particles");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL1CB=",0,"Level 1 CB sum trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL1TAPS_OR=",0,"Level 1 TAPS OR trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL1TAPS_M2=",0,"Level 1 TAPS M2 trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL1Pulser=",0,"Level 1 Pulser trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL1TAPS_Pulser=",0,"Level 1 TAPS Pulser trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL2M1=",0,"Level 2 M1+ trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL2M2=",0,"Level 2 M2+ trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL2M3=",0,"Level 2 M3+ trigger");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fL2M4=",0,"Level 2 M4+ trigger");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrigTotalMult=",0,"total multiplicity");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrigTAPSMult=",0,"TAPS alone multiplicity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrigCBSum=",0,"CB energy sum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrigCBSegThr=",0,"CB NaI segment high discriminator threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrigTAPSLED1Thr=",0,"TAPS LED1 thresholds");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrigTAPSLED2Thr=",0,"TAPS LED2 thresholds");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyAnalysis */
static void G__setup_memvarTA2MyAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis));
   { TA2MyAnalysis *p; p=(TA2MyAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_Eta_E_Theta_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_Eta_E_Theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulinc_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulinc_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulinc_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulinc_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulinc_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_IM_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f2g_fulinc_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulinc_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulinc_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_qfinc_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_qfinc_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_qfinc_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_qfinc_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_qfinc_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f2g_qfinc_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_qfinc_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_qfinc_ExFunc_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_2g_qfinc_Det=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Proton_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Proton_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Proton_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Proton_dE_E_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_Proton_dE_E_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_PhiDiff_Eta_Recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_Recoil_Fermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f2g_fulexc_p_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_p_ExFunc_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_IM_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_ExFunc_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_ExFunc_W_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_IM_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_ExFunc_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_p_ExFunc_W_TOF_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_2g_fulexc_p_Det=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_Neutron_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_Neutron_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_Neutron_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_PhiDiff_Eta_Recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_Recoil_Fermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f2g_fulexc_n_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_2g_fulexc_n_ExFunc_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_IM_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_ExFunc_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_ExFunc_W_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_IM_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_ExFunc_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_2g_fulexc_n_ExFunc_W_TOF_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_2g_fulexc_n_Det=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_Eta_E_Theta_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_Eta_E_Theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_IM_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f6g_fulinc_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulinc_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulinc_IM_Debug[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_qfinc_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_qfinc_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_qfinc_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_qfinc_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_qfinc_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f6g_qfinc_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_qfinc_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_ExFunc_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_qfinc_IM_Debug[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Proton_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Proton_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Proton_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Proton_dE_E_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_Proton_dE_E_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_PhiDiff_Eta_Recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_Recoil_Fermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f6g_fulexc_p_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_ExFunc_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_IM_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_ExFunc_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_p_ExFunc_W_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_p_IM_Debug[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_Photon_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_Neutron_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_Neutron_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_Photon_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_Neutron_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_PhiDiff_Eta_Recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_Recoil_Fermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_Coinc_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_Coinc_Time_CB_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_Coinc_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_Rand_Time_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_IM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_MM_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f6g_fulexc_n_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_ExFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_ExFunc_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_IM_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_ExFunc_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_6g_fulexc_n_ExFunc_W_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_6g_fulexc_n_IM_Debug[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_Proton_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_Proton_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_Proton_dE_E_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_p_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_p_PhiDiff_Gamma_Recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_p_Recoil_Fermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ENuclKin_ENuclTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_EBeam_CosThetaCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_E_Theta_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_E_Theta_Gamma_Miss=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_p_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ME_W_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fComp_p_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ME_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ExFunc_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ExFunc_W_90_110=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ExFunc_W_110_130=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ExFunc_W_130_150=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ExFunc_W_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ME_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_p_ExFunc_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_Comp_p_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_Comp_p_Det=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_p_MVA_Value=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TMVAcLcLReader),-1,-1,4,"fMVA_Reader_Comp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_1_Comp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_2_Comp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_3_Comp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_4_Comp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_5_Comp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_Neutron_TOF_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_Photon_TOF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_Neutron_PSA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_n_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_n_PhiDiff_Gamma_Recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_n_Recoil_Fermi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ENuclKin_ENuclTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_EBeam_CosThetaCM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_E_Theta_Gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_E_Theta_Gamma_Miss=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_n_Rand_Time_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ME_W_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fComp_n_NCTBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ME_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ExFunc_W=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ExFunc_W_90_110=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ExFunc_W_110_130=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ExFunc_W_130_150=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ExFunc_W_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ME_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Comp_n_ExFunc_W_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_Comp_n_Gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparseTlETArrayFgR),G__defined_typename("THnSparseF"),-1,4,"fH_Comp_n_Det=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Comp_n_MVA_Value=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TMVAcLcLReader),-1,-1,4,"fMVA_Reader_Comp_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_1_Comp_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_2_Comp_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_3_Comp_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_4_Comp_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMVA_Var_5_Comp_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCreateEtaGridEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCreateEta_p_Eff=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCreateEta_n_Eff=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCreateComp_p_Eff=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCreateComp_n_Eff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fH_2g_fulinc_DetEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fH_6g_fulinc_DetEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparse),-1,-1,4,"fH_2g_qfinc_PhaseSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparse),-1,-1,4,"fH_2g_fulexc_p_PhaseSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparse),-1,-1,4,"fH_2g_fulexc_n_PhaseSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparse),-1,-1,4,"fH_Comp_p_DetEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_THnSparse),-1,-1,4,"fH_Comp_n_DetEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_2g_qfinc_MM_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_2g_qfinc_MM_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraph),-1,-1,4,"fG_2g_fulexc_p_MM_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraph),-1,-1,4,"fG_2g_fulexc_p_MM_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraph),-1,-1,4,"fG_2g_fulexc_n_MM_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraph),-1,-1,4,"fG_2g_fulexc_n_MM_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_6g_qfinc_MM_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_6g_qfinc_MM_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_6g_fulexc_p_MM_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_6g_fulexc_p_MM_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_6g_fulexc_n_MM_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TGraphErrors),-1,-1,4,"fG_6g_fulexc_n_MM_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"hTestP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"hTestN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyCaLib */
static void G__setup_memvarTA2MyCaLib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib));
   { TA2MyCaLib *p; p=(TA2MyCaLib*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNCalib=",0,"number of enabled calibrations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelemTAGG=",0,"number of Tagger elements");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelemCB=",0,"number of CB elements");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelemTAPS=",0,"number of TAPS elements");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelemPID=",0,"number of PID elements");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelemVeto=",0,"number of Veto elements");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_Target_Position=",0,"target position calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_IM_TargPos=",0,"CB invariant mass vs target position");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_CB_Energy=",0,"CB energy calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_IM=",0,"CB invariant mass vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_IM_Neut=",0,"CB invariant mass (from neutral hits) vs element");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_CB_Quad=",0,"CB quadratic energy correction toggle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Quad_Pi0_Min=",0,"lower bound for the pi0 invariant mass cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Quad_Pi0_Max=",0,"upper bound for the pi0 invariant mass cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Quad_Eta_Min=",0,"lower bound for the eta invariant mass cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Quad_Eta_Max=",0,"upper bound for the eta invariant mass cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Quad_IM=",0,"CB invariant mass vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Quad_Pi0_Mean_E=",0,"mean energy of pi0 in CB");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Quad_Eta_Mean_E=",0,"mean energy of eta in CB");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_CB_Time=",0,"CB time calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Time=",0,"CB time vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Time_Neut=",0,"CB time (from neutral hits) vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Time_Ind=",0,"CB time (from neutral hits) vs element");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_CB_Walk=",0,"CB time walk calibration toggle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_Pi0_Min=",0,"lower bound of the pi0 invariant mass cut ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_Pi0_Max=",0,"upper bound of the pi0 invariant mass cut ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_Prompt_Min=",0,"lower bound for prompt tagger hits ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_Prompt_Max=",0,"upper bound for prompt tagger hits ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_BG1_Min=",0,"lower bound for tagger hits in background window 1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_BG1_Max=",0,"upper bound for tagger hits in background window 1");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_BG2_Min=",0,"lower bound for tagger hits in background window 2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_BG2_Max=",0,"upper bound for tagger hits in background window 2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_MM_Min=",0,"lower bound of the missing mass cut ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_CB_Walk_MM_Max=",0,"upper bound of the missing mass cut ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fHCalib_CB_Walk_IM=",0,"2 photon invariant mass for pi0 identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Walk_MM=",0,"pi0 missing mass for g + p -> p + pi0 identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1),-1,-1,4,"fHCalib_CB_Walk_Rand_Time_CB=",0,"CB-tagger time difference for random subtraction");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_CB_Walk_E_T=",0,"time vs energy for all CB elements");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_TAPS_Energy=",0,"TAPS energy calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_IM=",0,"CB-TAPS invariant mass vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_IM_Neut=",0,"CB-TAPS invariant mass (from neutral hits) vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_IM_Neut_2Cl=",0,"CB-TAPS invariant mass (from exactly 2 neutral hits) vs element");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_TAPS_Time=",0,"TAPS time calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_Time=",0,"TAPS time vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_Time_Neut=",0,"TAPS time (from neutral hits) vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_Time_Ind=",0,"TAPS time (from neutral hits) vs element");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_TAPS_Quad=",0,"TAPS quadratic energy correction toggle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_TAPS_Quad_Pi0_Min=",0,"lower bound for the pi0 invariant mass cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_TAPS_Quad_Pi0_Max=",0,"upper bound for the pi0 invariant mass cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_TAPS_Quad_Eta_Min=",0,"lower bound for the eta invariant mass cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalib_TAPS_Quad_Eta_Max=",0,"upper bound for the eta invariant mass cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_Quad_IM=",0,"TAPS invariant mass vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_Quad_Pi0_Mean_E=",0,"mean energy of pi0 in TAPS ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_Quad_Eta_Mean_E=",0,"mean energy of eta in TAPS ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_TAPS_PSA=",0,"TAPS PSA calibration toggle");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_PSAR_PSAA=",0,"LG, SG radius vs angle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_TAPS_LED=",0,"TAPS LED calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_LG=",0,"LG raw hit pattern");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_LG_CFD=",0,"LG raw hit pattern with CFD cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_LG_NOCFD=",0,"LG raw hit pattern with no-CFD cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_LG_LED1=",0,"LG raw hit pattern with LED1 cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_TAPS_LG_LED2=",0,"LG raw hit pattern with LED2 cut");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_PID_Phi=",0,"PID Phi calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_PID_CBPhi_ID=",0,"CB cluster Phi vs PID element index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_PID_CBPhi_ID_1Cryst=",0,"CB cluster (1 crystal) Phi vs PID element index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_PID_Energy=",0,"PID energy calibration toggle");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH3),-1,-1,4,"fHCalib_PID_dE_E=",0,"Cluster theta vs CB-PID dE vs E plots");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_PID_Time=",0,"PID time calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_PID_Time=",0,"PID time vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_PID_Time_Ind=",0,"PID time vs element");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_Veto_Corr=",0,"veto-crystal correlation toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Veto_Corr=",0,"veto hit vs TAPS crystal hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_Veto_Energy=",0,"Veto energy calibration toggle");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Veto_dE_E=",0,"TAPS-Veto dE vs E plots");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_Veto_Time=",0,"Veto time calibration toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Veto_Time=",0,"Veto time vs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Veto_Time_Ind=",0,"Veto time vs element");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCalib_Tagger_Time=",0,"tagger time toggle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Tagger_Time=",0,"tagger + TAPS time vs tagger element for all TAPS element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Tagger_Time_Neut=",0,"tagger + TAPS time vs tagger element for all TAPS element (neutral hits)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2),-1,-1,4,"fHCalib_Tagger_Time_Ind=",0,"tagger time vs tagger element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyCalibration */
static void G__setup_memvarTA2MyCalibration(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration));
   { TA2MyCalibration *p; p=(TA2MyCalibration*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNCalib=",0,"number of enabled calibrations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCB2gCalib=",0,"CB 2 gamma energy calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTAPS2gCalib=",0,"TAPS 2 gamma energy calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTAPS_PSACalib=",0,"TAPS PSA calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTAPS_LEDCalib=",0,"TAPS LED calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTimeCalib=",0,"time calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPIDCalib=",0,"PID calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCBWalk=",0,"CB walk correction");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTaggerTimeCalib=",0,"Tagger time calibration");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTAPSDebugOutput=",0,"TAPS debug output");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fClusterDebug=",0,"cluster debugging");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVetoCalib=",0,"Veto calibration");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNTotClusters=",0,"number of total clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,4,"fCBP4=",0,"4-vector array of particle detected in CB");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TLorentzVector),-1,-1,4,"fTAPSP4=",0,"4-vector array of particle detected in TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_BeamHel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_PID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Total_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_IM_2g=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_IM_2g_2CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_IM_2g_1TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_IM_2g_2TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_IM_2g_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_IM_2g_IM_Em=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Charged_Theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_NtotalClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_ClSize_v_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Tagger_Nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Tagger_Hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Tagger_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Tagger_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_HelTest=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_VetoCorrel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CB_2g_pi0_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CB_2g_pi0_Angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CB_2g_eta_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CB_2g_eta_Angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_SingleClusterPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_ClusterPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_ClPhi_v_ClTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_ClPhi_v_ClTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_Walk[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_LED1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_LED2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_LG[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_LG_CFD[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_LG_NOCFD[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_LG_LED1[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_LG_LED2[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CB_2g_IMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_IM2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_CB_2g_IMS_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_IM_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_IM2_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_Time_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_1g_IMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_1g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_1g_IM2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_2g_IMS_noV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_TAPS_2g_IMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_2g_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_Tagger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_TAPS_vs_Tagger_ClnoV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_Tagger_vs_TAPS_ClnoV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_TAPS_vs_Tagger_Cl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_Tagger_vs_TAPS_Cl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_TAPS_vs_Tagger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Time_Tagger_vs_TAPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_PSAR_vs_PSAA_Veto[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_PSAR_vs_PSAA[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_PID_ID_v_CBAz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_PID_CB_Phi_Diff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_PID_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_PID_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_ClSize_v_dE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_PID_dE_v_Th[24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CBWalk_Et[720]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CBWalk_EtS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_PbGlass_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Tagger_m_PbGlass_Sum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Calib_Tagger_p_PbGlass_Sum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Tagger_m_PbGlass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_Tagger_p_PbGlass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_TAPS_Veto_dE_E_tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_TAPS_Veto_dE_E[384]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyClusterCalib */
static void G__setup_memvarTA2MyClusterCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib));
   { TA2MyClusterCalib *p; p=(TA2MyClusterCalib*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_Energy_MC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_Diff_Px=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_Diff_Py=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_Diff_Pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_Diff_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_Diff_Theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_Diff_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_CorrFac_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_CorrFac[180]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_CB_CorrTheta[180]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_Diff_Px=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_Diff_Py=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_Diff_Pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_Diff_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_Diff_Theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_Diff_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_CorrFac_Tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_CorrFac[180]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_Photon_TAPS_CorrTheta[180]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_CB_2g_IM2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_1g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_1g_IM2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH2F),-1,-1,4,"fH_Calib_TAPS_2g_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_CB_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_CB_Pion_Avr_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_CB_Eta_Avr_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_TAPS_1g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_TAPS_2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_TAPS_Pion_Avr_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_TAPS_Eta_Avr_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsPhotonCalib=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPhotonMC_Px=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPhotonMC_Py=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPhotonMC_Pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPhotonMC_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPhotonMC_En=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MyRateEstimation */
static void G__setup_memvarTA2MyRateEstimation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation));
   { TA2MyRateEstimation *p; p=(TA2MyRateEstimation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_eta2g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_eta6g_raw_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_eta6g_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TH1F),-1,-1,4,"fH_eta6g_pi0_IM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2UserAnalysis */
static void G__setup_memvarTA2UserAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   { TA2UserAnalysis *p; p=(TA2UserAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2UserControl */
static void G__setup_memvarTA2UserControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl));
   { TA2UserControl *p; p=(TA2UserControl*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__UserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarUserDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTA2CalArray(void) {
   /* TA2CalArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2CalArray));
   G__memfunc_setup("TA2CalArray",982,G__UserDict_717_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2CalArray), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_717_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CalArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_717_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CalArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_717_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CalArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_717_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CalArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_717_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_717_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CalArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_717_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CalArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_717_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CalArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_717_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CalArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CalArray", 982, G__UserDict_717_0_20, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2CalArray), -1, 0, 1, 1, 1, 0, "u 'TA2CalArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CalArray", 1108, G__UserDict_717_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2FPMicro(void) {
   /* TA2FPMicro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro));
   G__memfunc_setup("TA2FPMicro",855,G__UserDict_718_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "register variables for plot", (void*) NULL, 1);
   G__memfunc_setup("GetFPhits",878,G__UserDict_718_0_9, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFPhits",956,G__UserDict_718_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFPelem",935,G__UserDict_718_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_718_0_12, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2FPMicro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_718_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FPMicro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_718_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2FPMicro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_718_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2FPMicro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_718_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_718_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FPMicro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_718_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2FPMicro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_718_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FPMicro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_718_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2FPMicro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2FPMicro", 855, G__UserDict_718_0_24, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2FPMicro), -1, 0, 1, 1, 1, 0, "u 'TA2FPMicro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2FPMicro", 981, G__UserDict_718_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2PlasticPID(void) {
   /* TA2PlasticPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID));
   G__memfunc_setup("TA2PlasticPID",1140,G__UserDict_737_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display/cut setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_737_0_6, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2PlasticPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_737_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_737_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2PlasticPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_737_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2PlasticPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_737_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_737_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_737_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PlasticPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_737_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_737_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PlasticPID::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2PlasticPID", 1140, G__UserDict_737_0_18, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 1, 1, 1, 0, "u 'TA2PlasticPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2PlasticPID", 1266, G__UserDict_737_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2GenericApp(void) {
   /* TA2GenericApp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp));
   G__memfunc_setup("TA2GenericApp",1189,G__UserDict_738_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("GetGenDet",855,G__UserDict_738_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TA2GenericDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLScint",877,G__UserDict_738_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TA2LongScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLTrig",770,G__UserDict_738_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2LongScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrig",694,G__UserDict_738_0_10, 85, G__get_linked_tagnum(&G__UserDictLN_TA2PlasticPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_738_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2GenericApp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_738_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_738_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2GenericApp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_738_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2GenericApp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_738_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_738_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_738_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericApp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_738_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_738_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericApp::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2GenericApp", 1189, G__UserDict_738_0_23, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2GenericApp), -1, 0, 1, 1, 1, 0, "u 'TA2GenericApp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2GenericApp", 1315, G__UserDict_738_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyCrystalBall(void) {
   /* TA2MyCrystalBall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall));
   G__memfunc_setup("TA2MyCrystalBall",1514,G__UserDict_932_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "pass ptr to analyser", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "event by event analysis", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("GetNaI",536,G__UserDict_932_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TA2ClusterDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__UserDict_932_0_9, 85, G__get_linked_tagnum(&G__UserDictLN_TA2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCharged",1052,G__UserDict_932_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaE",847,G__UserDict_932_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPIDEnergyDepo",1519,G__UserDict_932_0_12, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPIDElementIndex",1727,G__UserDict_932_0_13, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_932_0_14, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyCrystalBall::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_932_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCrystalBall::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_932_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyCrystalBall::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_932_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyCrystalBall::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_932_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_932_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCrystalBall::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_932_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyCrystalBall::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_932_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCrystalBall::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_932_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyCrystalBall::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyCrystalBall", 1514, G__UserDict_932_0_26, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyCrystalBall), -1, 0, 1, 1, 1, 0, "u 'TA2MyCrystalBall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyCrystalBall", 1640, G__UserDict_932_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyTAPS_BaF2PWO(void) {
   /* TA2MyTAPS_BaF2PWO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO));
   G__memfunc_setup("TA2MyTAPS_BaF2PWO",1333,G__UserDict_935_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__UserDict_935_0_6, 105, G__get_linked_tagnum(&G__UserDictLN_ETAPSType), G__defined_typename("TAPSType_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLGElement",1149,G__UserDict_935_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_HitD2A_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSGElement",1156,G__UserDict_935_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_HitD2A_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSGEnergy",1060,G__UserDict_935_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLGEnergy",1053,G__UserDict_935_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_935_0_11, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyTAPS_BaF2PWO::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_935_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyTAPS_BaF2PWO::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_935_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyTAPS_BaF2PWO::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_935_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyTAPS_BaF2PWO::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_935_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_935_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyTAPS_BaF2PWO::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_935_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyTAPS_BaF2PWO::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_935_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyTAPS_BaF2PWO::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_935_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyTAPS_BaF2PWO::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyTAPS_BaF2PWO", 1333, G__UserDict_935_0_23, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS_BaF2PWO), -1, 0, 1, 1, 1, 0, "u 'TA2MyTAPS_BaF2PWO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyTAPS_BaF2PWO", 1459, G__UserDict_935_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2PlasticVETO(void) {
   /* TA2PlasticVETO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO));
   G__memfunc_setup("TA2PlasticVETO",1237,G__UserDict_936_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display/cut setup", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_936_0_6, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2PlasticVETO::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_936_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticVETO::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_936_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2PlasticVETO::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_936_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2PlasticVETO::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_936_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_936_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticVETO::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_936_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PlasticVETO::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_936_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2PlasticVETO::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_936_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2PlasticVETO::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2PlasticVETO", 1237, G__UserDict_936_0_18, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2PlasticVETO), -1, 0, 1, 1, 1, 0, "u 'TA2PlasticVETO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2PlasticVETO", 1363, G__UserDict_936_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyTAPS(void) {
   /* TA2MyTAPS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS));
   G__memfunc_setup("TA2MyTAPS",709,G__UserDict_937_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_937_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyTAPS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_937_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyTAPS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_937_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyTAPS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_937_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyTAPS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_937_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_937_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyTAPS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_937_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyTAPS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_937_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyTAPS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_937_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyTAPS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyTAPS", 709, G__UserDict_937_0_20, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyTAPS), -1, 0, 1, 1, 1, 0, "u 'TA2MyTAPS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyTAPS", 835, G__UserDict_937_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyPhysics(void) {
   /* TA2MyPhysics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyPhysics));
   G__memfunc_setup("LoadDetectors",1325,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TA2DataManager' - 0 - parent i - 'Int_t' 0 - depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCorrectedScaler",2136,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - sc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPatternIndex",1526,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"C - 'Char_t' 10 - patternName U 'TA2BitPattern' - 0 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyCaLib",961,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBadTaggerChannel",1750,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrigger",912,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'TOA2RecParticle' - 1 - mesons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearCBTimeWalk",1418,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBGSubtractionWeight",2207,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 14, 1, 2, 0, 
"u 'TOA2RecParticle' - 1 - meson d - 'Double_t' 0 - taggerTime "
"d - 'Double_t' 0 - limitPromptLowCB d - 'Double_t' 0 - limitPromptHighCB "
"d - 'Double_t' 0 - limitBG1LowCB d - 'Double_t' 0 - limitBG1HighCB "
"d - 'Double_t' 0 - limitBG2LowCB d - 'Double_t' 0 - limitBG2HighCB "
"d - 'Double_t' 0 - limitPromptLowTAPS d - 'Double_t' 0 - limitPromptHighTAPS "
"d - 'Double_t' 0 - limitBG1LowTAPS d - 'Double_t' 0 - limitBG1HighTAPS "
"d - 'Double_t' 0 - limitBG2LowTAPS d - 'Double_t' 0 - limitBG2HighTAPS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVetoInFrontOfElement",2301,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAPSRing",1000,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAPSBlock",1091,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckClusterVeto",1630,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"U 'HitCluster_t' - 0 - inCluster I - 'Int_t' 0 '0' outVetoIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckClusterPID",1437,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"U 'HitCluster_t' - 0 - inCluster I - 'Int_t' 0 '0' outPIDIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPSA",706,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"U 'TOA2DetParticle' - 0 - p U 'TCutG' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetForeignVetoHits",1824,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'TOA2DetParticle' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'TLorentzVector' - 1 - p4 d - 'Double_t' 0 - Ekin "
"d - 'Double_t' 0 - mass U 'TVector3' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"u 'TLorentzVector' - 1 - p4 d - 'Double_t' 0 - Ekin "
"d - 'Double_t' 0 - mass d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSA",516,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"U 'TOA2DetParticle' - 0 - p D - 'Double_t' 0 - psaR "
"D - 'Double_t' 0 - psaA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPSA",619,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TH2' - 0 - h U 'TOA2DetParticle' - 0 - p "
"d - 'Double_t' 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilldE_E",724,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'TH2' - 0 - hCB U 'TH2' - 0 - hTAPS "
"U 'TOA2DetParticle' - 0 - p d - 'Double_t' 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTOF",624,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"U 'TH2' - 0 - hCB U 'TH2' - 0 - hTAPS "
"U 'TOA2DetParticle' - 0 - p d - 'Double_t' 0 - t "
"g - 'Bool_t' 0 - isMC d - 'Double_t' 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTaggerCoincidence",2101,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'TOA2RecParticle' - 1 - meson d - 'Double_t' 0 - taggerTime "
"U 'TH1' - 0 - hCB U 'TH1' - 0 - hTAPS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTaggerCoincidence2D",2219,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"u 'TOA2RecParticle' - 1 - meson d - 'Double_t' 0 - taggerTime "
"i - 'Int_t' 0 - taggerElement U 'TH2' - 0 - hCB "
"U 'TH2' - 0 - hTAPS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - line i - 'Int_t' 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructPhysics",1919,G__UserDict_945_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumber",1214,G__UserDict_945_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__UserDict_945_0_32, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyPhysics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_945_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyPhysics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_945_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyPhysics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_945_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyPhysics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_945_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_945_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyPhysics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_945_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyPhysics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_945_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyPhysics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_945_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyPhysics::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyPhysics", 1262, G__UserDict_945_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyAnalysis(void) {
   /* TA2MyAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis));
   G__memfunc_setup("FillExFunc",976,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - 'Int_t' 0 - taggElem U 'TH1' - 0 - hExFunc "
"d - 'Double_t' 0 - weight d - 'Double_t' 0 - eKin "
"d - 'Double_t' 0 - theta U 'TH2' - 0 - hEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCTBin",720,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - cosTheta i - 'Int_t' 0 - nCosThetaBins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TA2MyAnalysis",1233,G__UserDict_946_0_3, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TA2Analysis' - 0 - analysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - line i - 'Int_t' 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructPhysics",1919,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_946_0_7, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_946_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_946_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_946_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_946_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_946_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_946_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_946_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_946_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyAnalysis", 1233, G__UserDict_946_0_19, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyAnalysis), -1, 0, 1, 1, 1, 0, "u 'TA2MyAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyAnalysis", 1359, G__UserDict_946_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyCaLib(void) {
   /* TA2MyCaLib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib));
   G__memfunc_setup("TA2MyCaLib",840,G__UserDict_948_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TA2Analysis' - 0 - analysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - line i - 'Int_t' 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructPhysics",1919,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_948_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyCaLib::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_948_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCaLib::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_948_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyCaLib::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_948_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyCaLib::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_948_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_948_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCaLib::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_948_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyCaLib::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_948_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCaLib::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_948_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyCaLib::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyCaLib", 840, G__UserDict_948_0_17, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyCaLib), -1, 0, 1, 1, 1, 0, "u 'TA2MyCaLib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyCaLib", 966, G__UserDict_948_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyCalibration(void) {
   /* TA2MyCalibration */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration));
   G__memfunc_setup("IsInOuterTAPSRing",1610,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - inElement", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInInnerTAPSRing",1591,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - inElement", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TA2MyCalibration",1525,G__UserDict_949_0_3, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TA2Analysis' - 0 - analysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - line i - 'Int_t' 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructPhysics",1919,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_949_0_8, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyCalibration::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_949_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCalibration::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_949_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyCalibration::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_949_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyCalibration::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_949_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_949_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCalibration::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_949_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyCalibration::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_949_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyCalibration::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_949_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyCalibration::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyCalibration", 1525, G__UserDict_949_0_20, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyCalibration), -1, 0, 1, 1, 1, 0, "u 'TA2MyCalibration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyCalibration", 1651, G__UserDict_949_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyClusterCalib(void) {
   /* TA2MyClusterCalib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib));
   G__memfunc_setup("TA2MyClusterCalib",1610,G__UserDict_950_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TA2Analysis' - 0 - analysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - line i - 'Int_t' 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructPhysics",1919,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_950_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyClusterCalib::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_950_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyClusterCalib::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_950_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyClusterCalib::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_950_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyClusterCalib::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_950_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_950_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyClusterCalib::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_950_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyClusterCalib::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_950_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyClusterCalib::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_950_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyClusterCalib::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyClusterCalib", 1610, G__UserDict_950_0_17, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyClusterCalib), -1, 0, 1, 1, 1, 0, "u 'TA2MyClusterCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyClusterCalib", 1736, G__UserDict_950_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MyRateEstimation(void) {
   /* TA2MyRateEstimation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation));
   G__memfunc_setup("TA2MyRateEstimation",1846,G__UserDict_951_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TA2Analysis' - 0 - analysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - line i - 'Int_t' 0 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructPhysics",1919,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_951_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MyRateEstimation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_951_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyRateEstimation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_951_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MyRateEstimation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_951_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MyRateEstimation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_951_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_951_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyRateEstimation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_951_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyRateEstimation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_951_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MyRateEstimation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_951_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MyRateEstimation::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MyRateEstimation", 1846, G__UserDict_951_0_17, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2MyRateEstimation), -1, 0, 1, 1, 1, 0, "u 'TA2MyRateEstimation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MyRateEstimation", 1972, G__UserDict_951_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2UserAnalysis(void) {
   /* TA2UserAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis));
   G__memfunc_setup("TA2UserAnalysis",1450,G__UserDict_952_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis), -1, 0, 1, 1, 1, 0, "C - - 10 - -", "normal use, pass ptr to TAcquRoot", (void*) NULL, 0);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "cut/display setup", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_952_0_5, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2UserAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_952_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_952_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2UserAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_952_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2UserAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_952_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_952_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_952_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_952_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_952_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2UserAnalysis", 1450, G__UserDict_952_0_17, (int) ('i'), G__get_linked_tagnum(&G__UserDictLN_TA2UserAnalysis), -1, 0, 1, 1, 1, 0, "u 'TA2UserAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2UserAnalysis", 1576, G__UserDict_952_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2UserControl(void) {
   /* TA2UserControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UserDictLN_TA2UserControl));
   G__memfunc_setup("TA2UserControl",1351,G__UserDict_960_0_1, 105, G__get_linked_tagnum(&G__UserDictLN_TA2UserControl), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - I - - 0 - - "
"C - - 2 - - Y - - 0 'NULL' - "
"i - - 0 '-1' - g - 'Bool_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateAnalyser",1427,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__UserDict_960_0_3, 85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2UserControl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__UserDict_960_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserControl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__UserDict_960_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2UserControl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__UserDict_960_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2UserControl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__UserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__UserDict_960_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__UserDict_960_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserControl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__UserDict_960_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserControl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__UserDict_960_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2UserControl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__UserDict_960_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2UserControl::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2UserControl", 1477, G__UserDict_960_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncUserDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)(&gAR),85,0,0,G__get_linked_tagnum(&G__UserDictLN_TAcquRoot),-1,-1,1,"gAR=",0,(char*)NULL);
   G__memvar_setup((void*)(&gAN),85,0,0,G__get_linked_tagnum(&G__UserDictLN_TA2Analysis),-1,-1,1,"gAN=",0,(char*)NULL);
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {
}

static void G__cpp_setup_global11() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalUserDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
  G__cpp_setup_global11();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcUserDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__UserDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2System = { "TA2System" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Analysis = { "TA2Analysis" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TAcquRoot = { "TAcquRoot" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2BitPattern = { "TA2BitPattern" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2DataManager = { "TA2DataManager" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TH3 = { "TH3" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2HistManager = { "TA2HistManager" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Detector = { "TA2Detector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_HitD2A_t = { "HitD2A_t" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2ClusterDetector = { "TA2ClusterDetector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_HitCluster_t = { "HitCluster_t" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2CalArray = { "TA2CalArray" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2FPMicro = { "TA2FPMicro" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Apparatus = { "TA2Apparatus" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2GenericDetector = { "TA2GenericDetector" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2LongScint = { "TA2LongScint" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2PlasticPID = { "TA2PlasticPID" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2GenericApp = { "TA2GenericApp" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TOA2DetParticle = { "TOA2DetParticle" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TOA2RecParticle = { "TOA2RecParticle" , 99 , -1 };
G__linked_taginfo G__UserDictLN_THnSparse = { "THnSparse" , 99 , -1 };
G__linked_taginfo G__UserDictLN_THnSparseTlETArrayFgR = { "THnSparseT<TArrayF>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMVA = { "TMVA" , 110 , -1 };
G__linked_taginfo G__UserDictLN_maplETStringcOTMVAcLcLTypescLcLEMVAcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLTypescLcLEMVAgRsPgRsPgR = { "map<TString,TMVA::Types::EMVA,less<TString>,allocator<pair<const TString,TMVA::Types::EMVA> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplETMVAcLcLEMsgTypecOstringcOlesslETMVAcLcLEMsgTypegRcOallocatorlEpairlEconstsPTMVAcLcLEMsgTypecOstringgRsPgRsPgR = { "map<TMVA::EMsgType,string,less<TMVA::EMsgType>,allocator<pair<const TMVA::EMsgType,string> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR = { "vector<float*,allocator<float*> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlEfloatmUcOallocatorlEfloatmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float*,allocator<float*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR = { "vector<TMVA::VariableInfo,allocator<TMVA::VariableInfo> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TMVA::VariableInfo,allocator<TMVA::VariableInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR = { "vector<TMVA::ClassInfo*,allocator<TMVA::ClassInfo*> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TMVA::ClassInfo*,allocator<TMVA::ClassInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR = { "vector<TMVA::TreeInfo,allocator<TMVA::TreeInfo> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TMVA::TreeInfo,allocator<TMVA::TreeInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplETStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRsPgRsPgRsPgR = { "map<TString,vector<TMVA::TreeInfo,allocator<TMVA::TreeInfo> >,less<TString>,allocator<pair<const TString,vector<TMVA::TreeInfo,allocator<TMVA::TreeInfo> > > > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TMVAcLcLReader = { "TMVA::Reader" , 99 , -1 };
G__linked_taginfo G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UserDictLN_maplETStringcOTMVAcLcLIMethodmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLIMethodmUgRsPgRsPgR = { "map<TString,TMVA::IMethod*,less<TString>,allocator<pair<const TString,TMVA::IMethod*> > >" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TOMCParticle = { "TOMCParticle" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TNtupleD = { "TNtupleD" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Physics = { "TA2Physics" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Ladder = { "TA2Ladder" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Tagger = { "TA2Tagger" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyCrystalBall = { "TA2MyCrystalBall" , 99 , -1 };
G__linked_taginfo G__UserDictLN_ETAPSType = { "ETAPSType" , 101 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyTAPS_BaF2PWO = { "TA2MyTAPS_BaF2PWO" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2PlasticVETO = { "TA2PlasticVETO" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyTAPS = { "TA2MyTAPS" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2GenericApparatus = { "TA2GenericApparatus" , 99 , -1 };
G__linked_taginfo G__UserDictLN_CaLibReader_t = { "CaLibReader_t" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyPhysics = { "TA2MyPhysics" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyAnalysis = { "TA2MyAnalysis" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyCaLib = { "TA2MyCaLib" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyCalibration = { "TA2MyCalibration" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyClusterCalib = { "TA2MyClusterCalib" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2MyRateEstimation = { "TA2MyRateEstimation" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2UserAnalysis = { "TA2UserAnalysis" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TRint = { "TRint" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2Control = { "TA2Control" , 99 , -1 };
G__linked_taginfo G__UserDictLN_TA2UserControl = { "TA2UserControl" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableUserDict() {
  G__UserDictLN_TClass.tagnum = -1 ;
  G__UserDictLN_TBuffer.tagnum = -1 ;
  G__UserDictLN_TMemberInspector.tagnum = -1 ;
  G__UserDictLN_TObject.tagnum = -1 ;
  G__UserDictLN_TNamed.tagnum = -1 ;
  G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__UserDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__UserDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_TRandom3.tagnum = -1 ;
  G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_TH1.tagnum = -1 ;
  G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_TQObject.tagnum = -1 ;
  G__UserDictLN_TApplication.tagnum = -1 ;
  G__UserDictLN_TA2System.tagnum = -1 ;
  G__UserDictLN_TA2Analysis.tagnum = -1 ;
  G__UserDictLN_TAcquRoot.tagnum = -1 ;
  G__UserDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__UserDictLN_TH1F.tagnum = -1 ;
  G__UserDictLN_TGraph.tagnum = -1 ;
  G__UserDictLN_TH2.tagnum = -1 ;
  G__UserDictLN_TCutG.tagnum = -1 ;
  G__UserDictLN_TA2BitPattern.tagnum = -1 ;
  G__UserDictLN_TA2DataManager.tagnum = -1 ;
  G__UserDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__UserDictLN_TH2F.tagnum = -1 ;
  G__UserDictLN_TH3.tagnum = -1 ;
  G__UserDictLN_TA2HistManager.tagnum = -1 ;
  G__UserDictLN_TA2Detector.tagnum = -1 ;
  G__UserDictLN_HitD2A_t.tagnum = -1 ;
  G__UserDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__UserDictLN_TVector3.tagnum = -1 ;
  G__UserDictLN_TA2ClusterDetector.tagnum = -1 ;
  G__UserDictLN_HitCluster_t.tagnum = -1 ;
  G__UserDictLN_TA2CalArray.tagnum = -1 ;
  G__UserDictLN_TA2FPMicro.tagnum = -1 ;
  G__UserDictLN_TLorentzVector.tagnum = -1 ;
  G__UserDictLN_TA2Apparatus.tagnum = -1 ;
  G__UserDictLN_TA2GenericDetector.tagnum = -1 ;
  G__UserDictLN_TA2LongScint.tagnum = -1 ;
  G__UserDictLN_TA2PlasticPID.tagnum = -1 ;
  G__UserDictLN_TA2GenericApp.tagnum = -1 ;
  G__UserDictLN_TOA2DetParticle.tagnum = -1 ;
  G__UserDictLN_TOA2RecParticle.tagnum = -1 ;
  G__UserDictLN_THnSparse.tagnum = -1 ;
  G__UserDictLN_THnSparseTlETArrayFgR.tagnum = -1 ;
  G__UserDictLN_TGraphErrors.tagnum = -1 ;
  G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_TMVA.tagnum = -1 ;
  G__UserDictLN_maplETStringcOTMVAcLcLTypescLcLEMVAcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLTypescLcLEMVAgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_maplETMVAcLcLEMsgTypecOstringcOlesslETMVAcLcLEMsgTypegRcOallocatorlEpairlEconstsPTMVAcLcLEMsgTypecOstringgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlEfloatmUcOallocatorlEfloatmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_maplETStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_TMVAcLcLReader.tagnum = -1 ;
  G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__UserDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UserDictLN_maplETStringcOTMVAcLcLIMethodmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLIMethodmUgRsPgRsPgR.tagnum = -1 ;
  G__UserDictLN_TOMCParticle.tagnum = -1 ;
  G__UserDictLN_TNtupleD.tagnum = -1 ;
  G__UserDictLN_TA2Physics.tagnum = -1 ;
  G__UserDictLN_TA2Ladder.tagnum = -1 ;
  G__UserDictLN_TA2Tagger.tagnum = -1 ;
  G__UserDictLN_TA2MyCrystalBall.tagnum = -1 ;
  G__UserDictLN_ETAPSType.tagnum = -1 ;
  G__UserDictLN_TA2MyTAPS_BaF2PWO.tagnum = -1 ;
  G__UserDictLN_TA2PlasticVETO.tagnum = -1 ;
  G__UserDictLN_TA2MyTAPS.tagnum = -1 ;
  G__UserDictLN_TA2GenericApparatus.tagnum = -1 ;
  G__UserDictLN_CaLibReader_t.tagnum = -1 ;
  G__UserDictLN_TA2MyPhysics.tagnum = -1 ;
  G__UserDictLN_TA2MyAnalysis.tagnum = -1 ;
  G__UserDictLN_TA2MyCaLib.tagnum = -1 ;
  G__UserDictLN_TA2MyCalibration.tagnum = -1 ;
  G__UserDictLN_TA2MyClusterCalib.tagnum = -1 ;
  G__UserDictLN_TA2MyRateEstimation.tagnum = -1 ;
  G__UserDictLN_TA2UserAnalysis.tagnum = -1 ;
  G__UserDictLN_TRint.tagnum = -1 ;
  G__UserDictLN_TA2Control.tagnum = -1 ;
  G__UserDictLN_TA2UserControl.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableUserDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__UserDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__UserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TApplication);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2System);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Analysis);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TAcquRoot);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH2);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TCutG);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2BitPattern);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2DataManager);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TH3);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2HistManager);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Detector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_HitD2A_t);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2ClusterDetector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_HitCluster_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2CalArray),sizeof(TA2CalArray),-1,324608,(char*)NULL,G__setup_memvarTA2CalArray,G__setup_memfuncTA2CalArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2FPMicro),sizeof(TA2FPMicro),-1,324608,(char*)NULL,G__setup_memvarTA2FPMicro,G__setup_memfuncTA2FPMicro);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Apparatus);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2GenericDetector);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2LongScint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2PlasticPID),sizeof(TA2PlasticPID),-1,324608,(char*)NULL,G__setup_memvarTA2PlasticPID,G__setup_memfuncTA2PlasticPID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2GenericApp),sizeof(TA2GenericApp),-1,324608,(char*)NULL,G__setup_memvarTA2GenericApp,G__setup_memfuncTA2GenericApp);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TOA2DetParticle);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TOA2RecParticle);
   G__get_linked_tagnum_fwd(&G__UserDictLN_THnSparse);
   G__get_linked_tagnum_fwd(&G__UserDictLN_THnSparseTlETArrayFgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMVA);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplETStringcOTMVAcLcLTypescLcLEMVAcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLTypescLcLEMVAgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplETMVAcLcLEMsgTypecOstringcOlesslETMVAcLcLEMsgTypegRcOallocatorlEpairlEconstsPTMVAcLcLEMsgTypecOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEfloatmUcOallocatorlEfloatmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlEfloatmUcOallocatorlEfloatmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLVariableInfocOallocatorlETMVAcLcLVariableInfogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLClassInfomUcOallocatorlETMVAcLcLClassInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplETStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETMVAcLcLTreeInfocOallocatorlETMVAcLcLTreeInfogRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TMVAcLcLReader);
   G__get_linked_tagnum_fwd(&G__UserDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_maplETStringcOTMVAcLcLIMethodmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTMVAcLcLIMethodmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TOMCParticle);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TNtupleD);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Physics);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Ladder);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Tagger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyCrystalBall),sizeof(TA2MyCrystalBall),-1,324608,(char*)NULL,G__setup_memvarTA2MyCrystalBall,G__setup_memfuncTA2MyCrystalBall);
   G__get_linked_tagnum_fwd(&G__UserDictLN_ETAPSType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyTAPS_BaF2PWO),sizeof(TA2MyTAPS_BaF2PWO),-1,324608,(char*)NULL,G__setup_memvarTA2MyTAPS_BaF2PWO,G__setup_memfuncTA2MyTAPS_BaF2PWO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2PlasticVETO),sizeof(TA2PlasticVETO),-1,324608,(char*)NULL,G__setup_memvarTA2PlasticVETO,G__setup_memfuncTA2PlasticVETO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyTAPS),sizeof(TA2MyTAPS),-1,324608,(char*)NULL,G__setup_memvarTA2MyTAPS,G__setup_memfuncTA2MyTAPS);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2GenericApparatus);
   G__get_linked_tagnum_fwd(&G__UserDictLN_CaLibReader_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyPhysics),sizeof(TA2MyPhysics),-1,324609,(char*)NULL,G__setup_memvarTA2MyPhysics,G__setup_memfuncTA2MyPhysics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyAnalysis),sizeof(TA2MyAnalysis),-1,324608,(char*)NULL,G__setup_memvarTA2MyAnalysis,G__setup_memfuncTA2MyAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyCaLib),sizeof(TA2MyCaLib),-1,324608,(char*)NULL,G__setup_memvarTA2MyCaLib,G__setup_memfuncTA2MyCaLib);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyCalibration),sizeof(TA2MyCalibration),-1,324608,(char*)NULL,G__setup_memvarTA2MyCalibration,G__setup_memfuncTA2MyCalibration);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyClusterCalib),sizeof(TA2MyClusterCalib),-1,324608,(char*)NULL,G__setup_memvarTA2MyClusterCalib,G__setup_memfuncTA2MyClusterCalib);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2MyRateEstimation),sizeof(TA2MyRateEstimation),-1,324608,(char*)NULL,G__setup_memvarTA2MyRateEstimation,G__setup_memfuncTA2MyRateEstimation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2UserAnalysis),sizeof(TA2UserAnalysis),-1,324608,(char*)NULL,G__setup_memvarTA2UserAnalysis,G__setup_memfuncTA2UserAnalysis);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TRint);
   G__get_linked_tagnum_fwd(&G__UserDictLN_TA2Control);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__UserDictLN_TA2UserControl),sizeof(TA2UserControl),-1,323584,(char*)NULL,G__setup_memvarTA2UserControl,G__setup_memfuncTA2UserControl);
}
extern "C" void G__cpp_setupUserDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupUserDict()");
  G__set_cpp_environmentUserDict();
  G__cpp_setup_tagtableUserDict();

  G__cpp_setup_inheritanceUserDict();

  G__cpp_setup_typetableUserDict();

  G__cpp_setup_memvarUserDict();

  G__cpp_setup_memfuncUserDict();
  G__cpp_setup_globalUserDict();
  G__cpp_setup_funcUserDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncUserDict();
  return;
}
class G__cpp_setup_initUserDict {
  public:
    G__cpp_setup_initUserDict() { G__add_setup_func("UserDict",(G__incsetup)(&G__cpp_setupUserDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initUserDict() { G__remove_setup_func("UserDict"); }
};
G__cpp_setup_initUserDict G__cpp_setup_initializerUserDict;

