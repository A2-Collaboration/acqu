//
// File generated by rootcint at Mon Mar 18 14:55:24 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIottdIacqudIrootdIsrcdIMCUserDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MCUserDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMCUserGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TMCUserGenerator(void *p);
   static void deleteArray_TMCUserGenerator(void *p);
   static void destruct_TMCUserGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCUserGenerator*)
   {
      ::TMCUserGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCUserGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCUserGenerator", ::TMCUserGenerator::Class_Version(), "/home/ott/acqu/root/src/TMCUserGenerator.h", 18,
                  typeid(::TMCUserGenerator), DefineBehavior(ptr, ptr),
                  &::TMCUserGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TMCUserGenerator) );
      instance.SetDelete(&delete_TMCUserGenerator);
      instance.SetDeleteArray(&deleteArray_TMCUserGenerator);
      instance.SetDestructor(&destruct_TMCUserGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCUserGenerator*)
   {
      return GenerateInitInstanceLocal((::TMCUserGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCUserGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCUserParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TMCUserParticle(void *p);
   static void deleteArray_TMCUserParticle(void *p);
   static void destruct_TMCUserParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCUserParticle*)
   {
      ::TMCUserParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCUserParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCUserParticle", ::TMCUserParticle::Class_Version(), "/home/ott/acqu/root/src/TMCUserParticle.h", 21,
                  typeid(::TMCUserParticle), DefineBehavior(ptr, ptr),
                  &::TMCUserParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TMCUserParticle) );
      instance.SetDelete(&delete_TMCUserParticle);
      instance.SetDeleteArray(&deleteArray_TMCUserParticle);
      instance.SetDestructor(&destruct_TMCUserParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCUserParticle*)
   {
      return GenerateInitInstanceLocal((::TMCUserParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCUserParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMCUserGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCUserGenerator::Class_Name()
{
   return "TMCUserGenerator";
}

//______________________________________________________________________________
const char *TMCUserGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCUserGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCUserGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCUserGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCUserGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCUserGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCUserGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCUserGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCUserParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCUserParticle::Class_Name()
{
   return "TMCUserParticle";
}

//______________________________________________________________________________
const char *TMCUserParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCUserParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCUserParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCUserParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCUserParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCUserParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCUserParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCUserParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMCUserGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCUserGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCUserGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCUserGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void TMCUserGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCUserGenerator.
      TClass *R__cl = ::TMCUserGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      TMCFoamGenerator::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCUserGenerator(void *p) {
      delete ((::TMCUserGenerator*)p);
   }
   static void deleteArray_TMCUserGenerator(void *p) {
      delete [] ((::TMCUserGenerator*)p);
   }
   static void destruct_TMCUserGenerator(void *p) {
      typedef ::TMCUserGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCUserGenerator

//______________________________________________________________________________
void TMCUserParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCUserParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCUserParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCUserParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TMCUserParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCUserParticle.
      TClass *R__cl = ::TMCUserParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      TMCParticle::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCUserParticle(void *p) {
      delete ((::TMCUserParticle*)p);
   }
   static void deleteArray_TMCUserParticle(void *p) {
      delete [] ((::TMCUserParticle*)p);
   }
   static void destruct_TMCUserParticle(void *p) {
      typedef ::TMCUserParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCUserParticle

/********************************************************
* /home/ott/acqu/root/src/MCUserDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMCUserDict();

extern "C" void G__set_cpp_environmentMCUserDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TMCUserGenerator.h");
  G__add_compiledheader("/home/ott/acqu/root/src/TMCUserParticle.h");
  G__cpp_reset_tagtableMCUserDict();
}
#include <new>
extern "C" int G__cpp_dllrevMCUserDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMCUserGenerator */
static int G__MCUserDict_648_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCUserGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMCUserGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserGenerator((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMCUserGenerator((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCUserGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCUserGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCUserGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCUserGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCUserGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCUserGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCUserGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCUserGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_648_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCUserGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCUserDict_648_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCUserGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCUserGenerator(*(TMCUserGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCUserGenerator G__TTMCUserGenerator;
static int G__MCUserDict_648_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCUserGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCUserGenerator*) (soff+(sizeof(TMCUserGenerator)*i)))->~G__TTMCUserGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCUserGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCUserGenerator*) (soff))->~G__TTMCUserGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCUserParticle */
static int G__MCUserDict_649_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCUserParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCUserParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TParticlePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TParticlePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TParticlePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TParticlePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TParticlePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TMCUserParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TParticlePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCUserParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMCUserParticle((const Char_t*) G__int(libp->para[0]), (TMCUserParticle*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMCUserParticle((const Char_t*) G__int(libp->para[0]), (TMCUserParticle*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCUserParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCUserParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCUserParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCUserParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCUserParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCUserParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCUserParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCUserParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCUserDict_649_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCUserParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCUserDict_649_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCUserParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCUserParticle(*(TMCUserParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCUserParticle G__TTMCUserParticle;
static int G__MCUserDict_649_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCUserParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCUserParticle*) (soff+(sizeof(TMCUserParticle)*i)))->~G__TTMCUserParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCUserParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCUserParticle*) (soff))->~G__TTMCUserParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MCUserDict_649_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCUserParticle* dest = (TMCUserParticle*) G__getstructoffset();
   *dest = *(TMCUserParticle*) libp->para[0].ref;
   const TMCUserParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMCUserGenerator */

/* TMCUserParticle */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMCUserDict {
 public:
  G__Sizep2memfuncMCUserDict(): p(&G__Sizep2memfuncMCUserDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMCUserDict::*p)();
};

size_t G__get_sizep2memfuncMCUserDict()
{
  G__Sizep2memfuncMCUserDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMCUserDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator))) {
     TMCUserGenerator *G__Lderived;
     G__Lderived=(TMCUserGenerator*)0x1000;
     {
       TMCFoamGenerator *G__Lpbase=(TMCFoamGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator),G__get_linked_tagnum(&G__MCUserDictLN_TMCFoamGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMCGenerator *G__Lpbase=(TMCGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator),G__get_linked_tagnum(&G__MCUserDictLN_TMCGenerator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator),G__get_linked_tagnum(&G__MCUserDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator),G__get_linked_tagnum(&G__MCUserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator),G__get_linked_tagnum(&G__MCUserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle))) {
     TMCUserParticle *G__Lderived;
     G__Lderived=(TMCUserParticle*)0x1000;
     {
       TMCParticle *G__Lpbase=(TMCParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle),G__get_linked_tagnum(&G__MCUserDictLN_TMCParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle),G__get_linked_tagnum(&G__MCUserDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle),G__get_linked_tagnum(&G__MCUserDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMCUserDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MCUserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MCUserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MCUserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MCUserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MCUserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MCUserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MCUserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MCUserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MCUserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MCUserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MCUserDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MCUserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MCUserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MCUserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMCUserGenerator */
static void G__setup_memvarTMCUserGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator));
   { TMCUserGenerator *p; p=(TMCUserGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MCUserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCUserParticle */
static void G__setup_memvarTMCUserParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle));
   { TMCUserParticle *p; p=(TMCUserParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MCUserDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMCUserDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMCUserGenerator(void) {
   /* TMCUserGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator));
   G__memfunc_setup("TMCUserGenerator",1578,G__MCUserDict_648_0_1, 105, G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 '999999' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "parameter input from config file", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCUserDict_648_0_4, 85, G__get_linked_tagnum(&G__MCUserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCUserGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MCUserDict_648_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCUserGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MCUserDict_648_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCUserGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MCUserDict_648_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCUserGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCUserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCUserDict_648_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCUserDict_648_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCUserGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCUserDict_648_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCUserGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCUserDict_648_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCUserGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCUserDict_648_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCUserGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCUserGenerator", 1578, G__MCUserDict_648_0_16, (int) ('i'), G__get_linked_tagnum(&G__MCUserDictLN_TMCUserGenerator), -1, 0, 1, 1, 1, 0, "u 'TMCUserGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCUserGenerator", 1704, G__MCUserDict_648_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCUserParticle(void) {
   /* TMCUserParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle));
   G__memfunc_setup("TMCUserParticle",1463,G__MCUserDict_649_0_1, 105, G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' - "
"g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCUserParticle",1463,G__MCUserDict_649_0_2, 105, G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"U 'TParticlePDG' - 0 - - i - 'Int_t' 0 - - "
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCUserParticle",1463,G__MCUserDict_649_0_3, 105, G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TMCUserParticle' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCUserDict_649_0_6, 85, G__get_linked_tagnum(&G__MCUserDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCUserParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MCUserDict_649_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCUserParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MCUserDict_649_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCUserParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MCUserDict_649_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCUserParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCUserDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCUserDict_649_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCUserDict_649_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCUserParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCUserDict_649_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCUserParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCUserDict_649_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCUserParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCUserDict_649_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCUserParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCUserParticle", 1463, G__MCUserDict_649_0_18, (int) ('i'), G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle), -1, 0, 1, 1, 1, 0, "u 'TMCUserParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCUserParticle", 1589, G__MCUserDict_649_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MCUserDict_649_0_20, (int) ('u'), G__get_linked_tagnum(&G__MCUserDictLN_TMCUserParticle), -1, 1, 1, 1, 1, 0, "u 'TMCUserParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMCUserDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMCUserDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMCUserDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MCUserDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MCUserDictLN_TParticlePDG = { "TParticlePDG" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TA2System = { "TA2System" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMCParticle = { "TMCParticle" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMCGenerator = { "TMCGenerator" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMCFoamGenerator = { "TMCFoamGenerator" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMCUserGenerator = { "TMCUserGenerator" , 99 , -1 };
G__linked_taginfo G__MCUserDictLN_TMCUserParticle = { "TMCUserParticle" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMCUserDict() {
  G__MCUserDictLN_TClass.tagnum = -1 ;
  G__MCUserDictLN_TBuffer.tagnum = -1 ;
  G__MCUserDictLN_TMemberInspector.tagnum = -1 ;
  G__MCUserDictLN_TObject.tagnum = -1 ;
  G__MCUserDictLN_TNamed.tagnum = -1 ;
  G__MCUserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MCUserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MCUserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MCUserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MCUserDictLN_TParticlePDG.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MCUserDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MCUserDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MCUserDictLN_TRandom.tagnum = -1 ;
  G__MCUserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MCUserDictLN_TA2System.tagnum = -1 ;
  G__MCUserDictLN_TMCParticle.tagnum = -1 ;
  G__MCUserDictLN_TMCGenerator.tagnum = -1 ;
  G__MCUserDictLN_TMCFoamGenerator.tagnum = -1 ;
  G__MCUserDictLN_TMCUserGenerator.tagnum = -1 ;
  G__MCUserDictLN_TMCUserParticle.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMCUserDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TParticlePDG);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TRandom);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TA2System);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMCParticle);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMCGenerator);
   G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMCFoamGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMCUserGenerator),sizeof(TMCUserGenerator),-1,324608,(char*)NULL,G__setup_memvarTMCUserGenerator,G__setup_memfuncTMCUserGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MCUserDictLN_TMCUserParticle),sizeof(TMCUserParticle),-1,324608,(char*)NULL,G__setup_memvarTMCUserParticle,G__setup_memfuncTMCUserParticle);
}
extern "C" void G__cpp_setupMCUserDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMCUserDict()");
  G__set_cpp_environmentMCUserDict();
  G__cpp_setup_tagtableMCUserDict();

  G__cpp_setup_inheritanceMCUserDict();

  G__cpp_setup_typetableMCUserDict();

  G__cpp_setup_memvarMCUserDict();

  G__cpp_setup_memfuncMCUserDict();
  G__cpp_setup_globalMCUserDict();
  G__cpp_setup_funcMCUserDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMCUserDict();
  return;
}
class G__cpp_setup_initMCUserDict {
  public:
    G__cpp_setup_initMCUserDict() { G__add_setup_func("MCUserDict",(G__incsetup)(&G__cpp_setupMCUserDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMCUserDict() { G__remove_setup_func("MCUserDict"); }
};
G__cpp_setup_initMCUserDict G__cpp_setup_initializerMCUserDict;

