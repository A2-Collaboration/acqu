#!/bin/bash
#
#
VERSION=V1.5

CHKSYNC=1

# the end of the script at the beginning
verlassen()
{
  clear
  echo -e \\033[1mThis is: ${0##*/} \($VERSION\) \\033[0m
  date
  # show cursor
  echo -e -n \\033[\?25h
  echo Bye bye...
  exit ${1:-99}
}


hilfe(){
echo No help available yet.
exit 0
}

while [ $# -gt 0 ]
do
 case "$1" in "")
 ;; -h)              hilfe
 ;; -no-sync-check)  CHKSYNC='0'
 ;;
 esac
 shift
done

#  Signal handling
trap "verlassen 0" SIGHUP SIGINT SIGTERM

# hide cursor
echo -e -n \\033[\?25l


# an endless loop
while [ 1 = 1 ]; do
  clear
  echo -e -n \\033[H
  echo -e \\033[1mThis is: ${0##*/} \($VERSION\) \\033[0m
  date
  echo

  # check synchronization
  # read the last 2 lines from the log file 
  # and analysis it using 'awk'
  if [ "$CHKSYNC" = "1" ] ; then
    echo Synchronisation check:
    tail -10 ${HOME}/acqu/DataServer.log |
    grep Mismatch |
    tr -d ";" |
    tail -2 | 
      awk 'BEGIN{a=1; b=0; c=0}
      {
		#  $6 is the Event Number
          if (a==1) {a=0; s=-1*$6} #read in the first line from log
	  else {s=s+$6}            #for the second line from DataServer.log
	  if (($9=="ID1") && ($6>0)) {b=1}
	  diff=$10-$8
	  if (diff<-1){c=1}
          printf "Event: %d  %s-%s", $6 ,$7, $9
          printf "\033[1m"
          printf "     Diff: %d\n", diff
          printf "\033[0m"
      }
	  END{
	  if ((s==0)&&($7!~"ID")){printf "Status: OK"}
	  else if ($6==0 && s==0) {printf "Status: OK"}
	  else if (b==1){printf "\033[5;t\033[31mCB and Tagger out of sync!!"}
	  else if (c==1){printf "\033[5;t\033[31mCB and TAPS out of sync!!"}
	  else if (s<2){printf "\033[5;t\033[31mOut of sync!!"}
	  else {printf "event no. diff: %d", s}
	  printf "\033[0m\n"
	  }
	  '


    #again for storing the number of errors

    BT=`tail -10 ${HOME}/acqu/DataServer.log |
    grep Mismatch |
    tr -d ";" |
    tail -2 |
      awk -v BT="$BT" 'BEGIN{a=1; b=0; c=0}
      {
                #  $6 is the Event Number
          if (a==1) {a=0; s=-1*$6} #read in the first line from log
          else {s=s+$6}            #for the second line from DataServer.log
          if (($9=="ID1") && ($6>0)) {b=1}
          diff=$10-$8
          if (diff<-1){c=1}
      }
          END{
          if ((s==0)&&($7!~"ID")){BT=0;}
          else if ($6==0 && s==0) {BT=0;}
          else if (b==1){BT=BT+1;} #printf "\033[5;t\033[31mCB and Tagger out of sync!!"}
          else if (c==1){BT=BT+1;} #printf "\033[5;t\033[31mCB and TAPS out of sync!!"}
          else if (s<2){BT=BT+1;} #printf "\033[5;t\033[31mOut of sync!!"}
          else {BT=0;}
        printf "%i", BT
          }
          '`

	echo "Number of accumulated errors: $BT"

        if [ $BT -ge 5 ] ; then
           echo -en "\007"
	   ssh macrobusy ogg123 -q /usr/share/sounds/extra/Metal_Hit.ogg
        fi 



    # check file size
    echo
  fi
  echo Filesize check:
  ls -ltr --block-size=1M ${HOME}/acqu/scratch/*_[0-9]*.dat  | 
    tail -1 |
    awk '{c=32
    if ($5 > 5000) {c=34}
    if ($5 > 6500) {c=31}
    printf "%s \n(%s)",$8,$9
    printf " \033[1m"
    printf "    \033[%dm SIZE: %s MB",c,$5
    printf "\033[0m\n"
    if ($5 > 6800 && $5 < 7000) {c=31; printf "\007\033[5;t \n"; printf "\t\t\t\t\tFile is almost finished"; printf "\n"}
    if ($5 > 7000 && $5 < 7100) {c=31; printf "\007\033[5;t \n"; printf "\t\t\t\t\t\tFile is finished"; printf "\n"}
    if ($5 > 7100) {c=31; printf "\007\033[5;t \n"; printf "FILE IS REALLY FINISHED!!!"; printf "\n"; system("ssh macrobusy espeak -f /home/a2cb/msg 2>1 > /dev/null") }
}'
  echo
  echo Stop with Ctrl-C
  sleep 2
done

