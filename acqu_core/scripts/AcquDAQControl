#!/bin/bash

# This script manages the AcquDAQ start

# write everything to the syslog as well as to STDERR
LOGGER="logger -s -t AcquDAQControl" 

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root (VME access needs it)" | ${LOGGER}
    exit 1
fi

# define functions
function init() {
    # ensure there is a build directory
    # and use this as the working directory
    ACQU_USER=a2cb 
    ACQU_BUILD=/home/${ACQU_USER}/acqu-build
    mkdir -p ${ACQU_BUILD}
    cd ${ACQU_BUILD} || exit 1
    echo "Changed to ${ACQU_BUILD}..." | ${LOGGER}
}

function start() {
    init

    # ensure there is a correct symlink
    DATA_DIR=/acqu/acqu_core/AcquDAQ/data/$(hostname -s)
    echo "Linking data to ${DATA_DIR}..." | ${LOGGER}
    ln -Tfs ${DATA_DIR} data

    echo "Starting AcquDAQ in background, logging to syslog..." | ${LOGGER}
    nohup sh -c "./bin/AcquDAQ $@ 2>&1 | logger -t AcquDAQ" 2>/dev/null >/dev/null < /dev/null &
    echo "AcquDAQ started, check syslog for errors" | ${LOGGER}
}

function build() {
    init
    
    # silenty build the binaries
    # this ensures the binaries are up-to-date
    echo "Building the binaries..." | ${LOGGER}
    # pass the extra arguments to make
    make -j3 $@ || exit 1
}

function stop() {
    # kill all previous instances, ignore errors silently
    # and wait until the processes are killed
    echo "Killing already running AcquDAQ processes..." | ${LOGGER}
    killall -w -q AcquDAQ
}

# what to do?
case $1 in
    start)
        start "${@:2}"
        ;;
    stop)
        stop
        ;;
    build)
        build "${@:2}"
        ;;
    restart)
        stop
        start "${@:2}"
        ;;
    *)
        echo "Usage: $0 (start|stop|build|restart) [optional arguments]" | ${LOGGER}
        exit 255
        ;;
esac

