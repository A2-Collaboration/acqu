//
// File generated by rootcint at Thu Mar  7 14:00:40 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIacqudI4v6dIacqudIAcquRootdIsrcdIAcquRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AcquRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TA2System_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2System(void *p);
   static void deleteArray_TA2System(void *p);
   static void destruct_TA2System(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2System*)
   {
      ::TA2System *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2System >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2System", ::TA2System::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2System.h", 46,
                  typeid(::TA2System), DefineBehavior(ptr, ptr),
                  &::TA2System::Dictionary, isa_proxy, 4,
                  sizeof(::TA2System) );
      instance.SetDelete(&delete_TA2System);
      instance.SetDeleteArray(&deleteArray_TA2System);
      instance.SetDestructor(&destruct_TA2System);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2System*)
   {
      return GenerateInitInstanceLocal((::TA2System*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2System*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2DataFormat_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2DataFormat(void *p);
   static void deleteArray_TA2DataFormat(void *p);
   static void destruct_TA2DataFormat(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2DataFormat*)
   {
      ::TA2DataFormat *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2DataFormat >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2DataFormat", ::TA2DataFormat::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2DataFormat.h", 34,
                  typeid(::TA2DataFormat), DefineBehavior(ptr, ptr),
                  &::TA2DataFormat::Dictionary, isa_proxy, 4,
                  sizeof(::TA2DataFormat) );
      instance.SetDelete(&delete_TA2DataFormat);
      instance.SetDeleteArray(&deleteArray_TA2DataFormat);
      instance.SetDestructor(&destruct_TA2DataFormat);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2DataFormat*)
   {
      return GenerateInitInstanceLocal((::TA2DataFormat*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2DataFormat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Mk2Format_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Mk2Format(void *p);
   static void deleteArray_TA2Mk2Format(void *p);
   static void destruct_TA2Mk2Format(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Mk2Format*)
   {
      ::TA2Mk2Format *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Mk2Format >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Mk2Format", ::TA2Mk2Format::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Mk2Format.h", 90,
                  typeid(::TA2Mk2Format), DefineBehavior(ptr, ptr),
                  &::TA2Mk2Format::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Mk2Format) );
      instance.SetDelete(&delete_TA2Mk2Format);
      instance.SetDeleteArray(&deleteArray_TA2Mk2Format);
      instance.SetDestructor(&destruct_TA2Mk2Format);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Mk2Format*)
   {
      return GenerateInitInstanceLocal((::TA2Mk2Format*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Mk2Format*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Analysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Analysis(void *p);
   static void deleteArray_TA2Analysis(void *p);
   static void destruct_TA2Analysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Analysis*)
   {
      ::TA2Analysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Analysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Analysis", ::TA2Analysis::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Analysis.h", 54,
                  typeid(::TA2Analysis), DefineBehavior(ptr, ptr),
                  &::TA2Analysis::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Analysis) );
      instance.SetDelete(&delete_TA2Analysis);
      instance.SetDeleteArray(&deleteArray_TA2Analysis);
      instance.SetDestructor(&destruct_TA2Analysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Analysis*)
   {
      return GenerateInitInstanceLocal((::TA2Analysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Analysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2DataServer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2DataServer(void *p);
   static void deleteArray_TA2DataServer(void *p);
   static void destruct_TA2DataServer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2DataServer*)
   {
      ::TA2DataServer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2DataServer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2DataServer", ::TA2DataServer::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2DataServer.h", 51,
                  typeid(::TA2DataServer), DefineBehavior(ptr, ptr),
                  &::TA2DataServer::Dictionary, isa_proxy, 4,
                  sizeof(::TA2DataServer) );
      instance.SetDelete(&delete_TA2DataServer);
      instance.SetDeleteArray(&deleteArray_TA2DataServer);
      instance.SetDestructor(&destruct_TA2DataServer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2DataServer*)
   {
      return GenerateInitInstanceLocal((::TA2DataServer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2DataServer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TAcquRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TAcquRoot(void *p);
   static void deleteArray_TAcquRoot(void *p);
   static void destruct_TAcquRoot(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TAcquRoot*)
   {
      ::TAcquRoot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAcquRoot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAcquRoot", ::TAcquRoot::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TAcquRoot.h", 82,
                  typeid(::TAcquRoot), DefineBehavior(ptr, ptr),
                  &::TAcquRoot::Dictionary, isa_proxy, 4,
                  sizeof(::TAcquRoot) );
      instance.SetDelete(&delete_TAcquRoot);
      instance.SetDeleteArray(&deleteArray_TAcquRoot);
      instance.SetDestructor(&destruct_TAcquRoot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TAcquRoot*)
   {
      return GenerateInitInstanceLocal((::TAcquRoot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAcquRoot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Cut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Cut(void *p);
   static void deleteArray_TA2Cut(void *p);
   static void destruct_TA2Cut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Cut*)
   {
      ::TA2Cut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Cut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Cut", ::TA2Cut::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Cut.h", 44,
                  typeid(::TA2Cut), DefineBehavior(ptr, ptr),
                  &::TA2Cut::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Cut) );
      instance.SetDelete(&delete_TA2Cut);
      instance.SetDeleteArray(&deleteArray_TA2Cut);
      instance.SetDestructor(&destruct_TA2Cut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Cut*)
   {
      return GenerateInitInstanceLocal((::TA2Cut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Cut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2MultiCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2MultiCut(void *p);
   static void deleteArray_TA2MultiCut(void *p);
   static void destruct_TA2MultiCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2MultiCut*)
   {
      ::TA2MultiCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2MultiCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2MultiCut", ::TA2MultiCut::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2MultiCut.h", 19,
                  typeid(::TA2MultiCut), DefineBehavior(ptr, ptr),
                  &::TA2MultiCut::Dictionary, isa_proxy, 4,
                  sizeof(::TA2MultiCut) );
      instance.SetDelete(&delete_TA2MultiCut);
      instance.SetDeleteArray(&deleteArray_TA2MultiCut);
      instance.SetDestructor(&destruct_TA2MultiCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2MultiCut*)
   {
      return GenerateInitInstanceLocal((::TA2MultiCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2MultiCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2BitPattern_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2BitPattern(void *p);
   static void deleteArray_TA2BitPattern(void *p);
   static void destruct_TA2BitPattern(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2BitPattern*)
   {
      ::TA2BitPattern *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2BitPattern >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2BitPattern", ::TA2BitPattern::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2BitPattern.h", 30,
                  typeid(::TA2BitPattern), DefineBehavior(ptr, ptr),
                  &::TA2BitPattern::Dictionary, isa_proxy, 4,
                  sizeof(::TA2BitPattern) );
      instance.SetDelete(&delete_TA2BitPattern);
      instance.SetDeleteArray(&deleteArray_TA2BitPattern);
      instance.SetDestructor(&destruct_TA2BitPattern);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2BitPattern*)
   {
      return GenerateInitInstanceLocal((::TA2BitPattern*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2BitPattern*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2RateMonitor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2RateMonitor(void *p);
   static void deleteArray_TA2RateMonitor(void *p);
   static void destruct_TA2RateMonitor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2RateMonitor*)
   {
      ::TA2RateMonitor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2RateMonitor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2RateMonitor", ::TA2RateMonitor::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2RateMonitor.h", 27,
                  typeid(::TA2RateMonitor), DefineBehavior(ptr, ptr),
                  &::TA2RateMonitor::Dictionary, isa_proxy, 4,
                  sizeof(::TA2RateMonitor) );
      instance.SetDelete(&delete_TA2RateMonitor);
      instance.SetDeleteArray(&deleteArray_TA2RateMonitor);
      instance.SetDestructor(&destruct_TA2RateMonitor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2RateMonitor*)
   {
      return GenerateInitInstanceLocal((::TA2RateMonitor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2RateMonitor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2DataManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2DataManager(void *p);
   static void deleteArray_TA2DataManager(void *p);
   static void destruct_TA2DataManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2DataManager*)
   {
      ::TA2DataManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2DataManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2DataManager", ::TA2DataManager::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2DataManager.h", 47,
                  typeid(::TA2DataManager), DefineBehavior(ptr, ptr),
                  &::TA2DataManager::Dictionary, isa_proxy, 4,
                  sizeof(::TA2DataManager) );
      instance.SetDelete(&delete_TA2DataManager);
      instance.SetDeleteArray(&deleteArray_TA2DataManager);
      instance.SetDestructor(&destruct_TA2DataManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2DataManager*)
   {
      return GenerateInitInstanceLocal((::TA2DataManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2DataManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2H_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2H(void *p);
   static void deleteArray_TA2H(void *p);
   static void destruct_TA2H(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2H*)
   {
      ::TA2H *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2H >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2H", ::TA2H::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2H.h", 19,
                  typeid(::TA2H), DefineBehavior(ptr, ptr),
                  &::TA2H::Dictionary, isa_proxy, 4,
                  sizeof(::TA2H) );
      instance.SetDelete(&delete_TA2H);
      instance.SetDeleteArray(&deleteArray_TA2H);
      instance.SetDestructor(&destruct_TA2H);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2H*)
   {
      return GenerateInitInstanceLocal((::TA2H*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2H*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2HistManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2HistManager(void *p);
   static void deleteArray_TA2HistManager(void *p);
   static void destruct_TA2HistManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2HistManager*)
   {
      ::TA2HistManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2HistManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2HistManager", ::TA2HistManager::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2HistManager.h", 38,
                  typeid(::TA2HistManager), DefineBehavior(ptr, ptr),
                  &::TA2HistManager::Dictionary, isa_proxy, 4,
                  sizeof(::TA2HistManager) );
      instance.SetDelete(&delete_TA2HistManager);
      instance.SetDeleteArray(&deleteArray_TA2HistManager);
      instance.SetDestructor(&destruct_TA2HistManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2HistManager*)
   {
      return GenerateInitInstanceLocal((::TA2HistManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2HistManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Control_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Control(void *p);
   static void deleteArray_TA2Control(void *p);
   static void destruct_TA2Control(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Control*)
   {
      ::TA2Control *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Control >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Control", ::TA2Control::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Control.h", 41,
                  typeid(::TA2Control), DefineBehavior(ptr, ptr),
                  &::TA2Control::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Control) );
      instance.SetDelete(&delete_TA2Control);
      instance.SetDeleteArray(&deleteArray_TA2Control);
      instance.SetDestructor(&destruct_TA2Control);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Control*)
   {
      return GenerateInitInstanceLocal((::TA2Control*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Control*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Detector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Detector(void *p);
   static void deleteArray_TA2Detector(void *p);
   static void destruct_TA2Detector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Detector*)
   {
      ::TA2Detector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Detector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Detector", ::TA2Detector::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Detector.h", 85,
                  typeid(::TA2Detector), DefineBehavior(ptr, ptr),
                  &::TA2Detector::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Detector) );
      instance.SetDelete(&delete_TA2Detector);
      instance.SetDeleteArray(&deleteArray_TA2Detector);
      instance.SetDestructor(&destruct_TA2Detector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Detector*)
   {
      return GenerateInitInstanceLocal((::TA2Detector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Detector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2ParticleID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2ParticleID(void *p);
   static void deleteArray_TA2ParticleID(void *p);
   static void destruct_TA2ParticleID(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2ParticleID*)
   {
      ::TA2ParticleID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2ParticleID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2ParticleID", ::TA2ParticleID::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2ParticleID.h", 38,
                  typeid(::TA2ParticleID), DefineBehavior(ptr, ptr),
                  &::TA2ParticleID::Dictionary, isa_proxy, 4,
                  sizeof(::TA2ParticleID) );
      instance.SetDelete(&delete_TA2ParticleID);
      instance.SetDeleteArray(&deleteArray_TA2ParticleID);
      instance.SetDestructor(&destruct_TA2ParticleID);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2ParticleID*)
   {
      return GenerateInitInstanceLocal((::TA2ParticleID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2ParticleID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Particle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TA2Particle(void *p = 0);
   static void *newArray_TA2Particle(Long_t size, void *p);
   static void delete_TA2Particle(void *p);
   static void deleteArray_TA2Particle(void *p);
   static void destruct_TA2Particle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Particle*)
   {
      ::TA2Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Particle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Particle", ::TA2Particle::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Particle.h", 78,
                  typeid(::TA2Particle), DefineBehavior(ptr, ptr),
                  &::TA2Particle::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Particle) );
      instance.SetNew(&new_TA2Particle);
      instance.SetNewArray(&newArray_TA2Particle);
      instance.SetDelete(&delete_TA2Particle);
      instance.SetDeleteArray(&deleteArray_TA2Particle);
      instance.SetDestructor(&destruct_TA2Particle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Particle*)
   {
      return GenerateInitInstanceLocal((::TA2Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Apparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Apparatus(void *p);
   static void deleteArray_TA2Apparatus(void *p);
   static void destruct_TA2Apparatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Apparatus*)
   {
      ::TA2Apparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Apparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Apparatus", ::TA2Apparatus::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Apparatus.h", 44,
                  typeid(::TA2Apparatus), DefineBehavior(ptr, ptr),
                  &::TA2Apparatus::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Apparatus) );
      instance.SetDelete(&delete_TA2Apparatus);
      instance.SetDeleteArray(&deleteArray_TA2Apparatus);
      instance.SetDestructor(&destruct_TA2Apparatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Apparatus*)
   {
      return GenerateInitInstanceLocal((::TA2Apparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Apparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Physics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Physics(void *p);
   static void deleteArray_TA2Physics(void *p);
   static void destruct_TA2Physics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Physics*)
   {
      ::TA2Physics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Physics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Physics", ::TA2Physics::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Physics.h", 30,
                  typeid(::TA2Physics), DefineBehavior(ptr, ptr),
                  &::TA2Physics::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Physics) );
      instance.SetDelete(&delete_TA2Physics);
      instance.SetDeleteArray(&deleteArray_TA2Physics);
      instance.SetDestructor(&destruct_TA2Physics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Physics*)
   {
      return GenerateInitInstanceLocal((::TA2Physics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Physics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2GenericPhysics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2GenericPhysics(void *p);
   static void deleteArray_TA2GenericPhysics(void *p);
   static void destruct_TA2GenericPhysics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2GenericPhysics*)
   {
      ::TA2GenericPhysics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2GenericPhysics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2GenericPhysics", ::TA2GenericPhysics::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericPhysics.h", 22,
                  typeid(::TA2GenericPhysics), DefineBehavior(ptr, ptr),
                  &::TA2GenericPhysics::Dictionary, isa_proxy, 4,
                  sizeof(::TA2GenericPhysics) );
      instance.SetDelete(&delete_TA2GenericPhysics);
      instance.SetDeleteArray(&deleteArray_TA2GenericPhysics);
      instance.SetDestructor(&destruct_TA2GenericPhysics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2GenericPhysics*)
   {
      return GenerateInitInstanceLocal((::TA2GenericPhysics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2GenericPhysics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2GenericApparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2GenericApparatus(void *p);
   static void deleteArray_TA2GenericApparatus(void *p);
   static void destruct_TA2GenericApparatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2GenericApparatus*)
   {
      ::TA2GenericApparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2GenericApparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2GenericApparatus", ::TA2GenericApparatus::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericApparatus.h", 19,
                  typeid(::TA2GenericApparatus), DefineBehavior(ptr, ptr),
                  &::TA2GenericApparatus::Dictionary, isa_proxy, 4,
                  sizeof(::TA2GenericApparatus) );
      instance.SetDelete(&delete_TA2GenericApparatus);
      instance.SetDeleteArray(&deleteArray_TA2GenericApparatus);
      instance.SetDestructor(&destruct_TA2GenericApparatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2GenericApparatus*)
   {
      return GenerateInitInstanceLocal((::TA2GenericApparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2GenericApparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2GenericDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2GenericDetector(void *p);
   static void deleteArray_TA2GenericDetector(void *p);
   static void destruct_TA2GenericDetector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2GenericDetector*)
   {
      ::TA2GenericDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2GenericDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2GenericDetector", ::TA2GenericDetector::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericDetector.h", 39,
                  typeid(::TA2GenericDetector), DefineBehavior(ptr, ptr),
                  &::TA2GenericDetector::Dictionary, isa_proxy, 4,
                  sizeof(::TA2GenericDetector) );
      instance.SetDelete(&delete_TA2GenericDetector);
      instance.SetDeleteArray(&deleteArray_TA2GenericDetector);
      instance.SetDestructor(&destruct_TA2GenericDetector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2GenericDetector*)
   {
      return GenerateInitInstanceLocal((::TA2GenericDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2GenericDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2LongScint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2LongScint(void *p);
   static void deleteArray_TA2LongScint(void *p);
   static void destruct_TA2LongScint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2LongScint*)
   {
      ::TA2LongScint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2LongScint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2LongScint", ::TA2LongScint::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2LongScint.h", 28,
                  typeid(::TA2LongScint), DefineBehavior(ptr, ptr),
                  &::TA2LongScint::Dictionary, isa_proxy, 4,
                  sizeof(::TA2LongScint) );
      instance.SetDelete(&delete_TA2LongScint);
      instance.SetDeleteArray(&deleteArray_TA2LongScint);
      instance.SetDestructor(&destruct_TA2LongScint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2LongScint*)
   {
      return GenerateInitInstanceLocal((::TA2LongScint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2LongScint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2GenericCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2GenericCluster(void *p);
   static void deleteArray_TA2GenericCluster(void *p);
   static void destruct_TA2GenericCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2GenericCluster*)
   {
      ::TA2GenericCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2GenericCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2GenericCluster", ::TA2GenericCluster::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericCluster.h", 45,
                  typeid(::TA2GenericCluster), DefineBehavior(ptr, ptr),
                  &::TA2GenericCluster::Dictionary, isa_proxy, 4,
                  sizeof(::TA2GenericCluster) );
      instance.SetDelete(&delete_TA2GenericCluster);
      instance.SetDeleteArray(&deleteArray_TA2GenericCluster);
      instance.SetDestructor(&destruct_TA2GenericCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2GenericCluster*)
   {
      return GenerateInitInstanceLocal((::TA2GenericCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2GenericCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Ladder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Ladder(void *p);
   static void deleteArray_TA2Ladder(void *p);
   static void destruct_TA2Ladder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Ladder*)
   {
      ::TA2Ladder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Ladder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Ladder", ::TA2Ladder::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Ladder.h", 52,
                  typeid(::TA2Ladder), DefineBehavior(ptr, ptr),
                  &::TA2Ladder::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Ladder) );
      instance.SetDelete(&delete_TA2Ladder);
      instance.SetDeleteArray(&deleteArray_TA2Ladder);
      instance.SetDestructor(&destruct_TA2Ladder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Ladder*)
   {
      return GenerateInitInstanceLocal((::TA2Ladder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Ladder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TOFApparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TOFApparatus(void *p);
   static void deleteArray_TA2TOFApparatus(void *p);
   static void destruct_TA2TOFApparatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TOFApparatus*)
   {
      ::TA2TOFApparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TOFApparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TOFApparatus", ::TA2TOFApparatus::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2TOFApparatus.h", 29,
                  typeid(::TA2TOFApparatus), DefineBehavior(ptr, ptr),
                  &::TA2TOFApparatus::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TOFApparatus) );
      instance.SetDelete(&delete_TA2TOFApparatus);
      instance.SetDeleteArray(&deleteArray_TA2TOFApparatus);
      instance.SetDestructor(&destruct_TA2TOFApparatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TOFApparatus*)
   {
      return GenerateInitInstanceLocal((::TA2TOFApparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TOFApparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2ClusterDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2ClusterDetector(void *p);
   static void deleteArray_TA2ClusterDetector(void *p);
   static void destruct_TA2ClusterDetector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2ClusterDetector*)
   {
      ::TA2ClusterDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2ClusterDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2ClusterDetector", ::TA2ClusterDetector::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2ClusterDetector.h", 41,
                  typeid(::TA2ClusterDetector), DefineBehavior(ptr, ptr),
                  &::TA2ClusterDetector::Dictionary, isa_proxy, 4,
                  sizeof(::TA2ClusterDetector) );
      instance.SetDelete(&delete_TA2ClusterDetector);
      instance.SetDeleteArray(&deleteArray_TA2ClusterDetector);
      instance.SetDestructor(&destruct_TA2ClusterDetector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2ClusterDetector*)
   {
      return GenerateInitInstanceLocal((::TA2ClusterDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2ClusterDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Tagger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Tagger(void *p);
   static void deleteArray_TA2Tagger(void *p);
   static void destruct_TA2Tagger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Tagger*)
   {
      ::TA2Tagger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Tagger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Tagger", ::TA2Tagger::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Tagger.h", 56,
                  typeid(::TA2Tagger), DefineBehavior(ptr, ptr),
                  &::TA2Tagger::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Tagger) );
      instance.SetDelete(&delete_TA2Tagger);
      instance.SetDeleteArray(&deleteArray_TA2Tagger);
      instance.SetDestructor(&destruct_TA2Tagger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Tagger*)
   {
      return GenerateInitInstanceLocal((::TA2Tagger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Tagger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2WCLayer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2WCLayer(void *p);
   static void deleteArray_TA2WCLayer(void *p);
   static void destruct_TA2WCLayer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2WCLayer*)
   {
      ::TA2WCLayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2WCLayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2WCLayer", ::TA2WCLayer::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2WCLayer.h", 20,
                  typeid(::TA2WCLayer), DefineBehavior(ptr, ptr),
                  &::TA2WCLayer::Dictionary, isa_proxy, 4,
                  sizeof(::TA2WCLayer) );
      instance.SetDelete(&delete_TA2WCLayer);
      instance.SetDeleteArray(&deleteArray_TA2WCLayer);
      instance.SetDestructor(&destruct_TA2WCLayer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2WCLayer*)
   {
      return GenerateInitInstanceLocal((::TA2WCLayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2WCLayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylWire_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylWire(void *p);
   static void deleteArray_TA2CylWire(void *p);
   static void destruct_TA2CylWire(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylWire*)
   {
      ::TA2CylWire *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylWire >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylWire", ::TA2CylWire::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2CylWire.h", 18,
                  typeid(::TA2CylWire), DefineBehavior(ptr, ptr),
                  &::TA2CylWire::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylWire) );
      instance.SetDelete(&delete_TA2CylWire);
      instance.SetDeleteArray(&deleteArray_TA2CylWire);
      instance.SetDestructor(&destruct_TA2CylWire);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylWire*)
   {
      return GenerateInitInstanceLocal((::TA2CylWire*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylWire*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2CylStrip_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2CylStrip(void *p);
   static void deleteArray_TA2CylStrip(void *p);
   static void destruct_TA2CylStrip(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2CylStrip*)
   {
      ::TA2CylStrip *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2CylStrip >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2CylStrip", ::TA2CylStrip::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2CylStrip.h", 18,
                  typeid(::TA2CylStrip), DefineBehavior(ptr, ptr),
                  &::TA2CylStrip::Dictionary, isa_proxy, 4,
                  sizeof(::TA2CylStrip) );
      instance.SetDelete(&delete_TA2CylStrip);
      instance.SetDeleteArray(&deleteArray_TA2CylStrip);
      instance.SetDestructor(&destruct_TA2CylStrip);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2CylStrip*)
   {
      return GenerateInitInstanceLocal((::TA2CylStrip*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2CylStrip*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Track(void *p);
   static void deleteArray_TA2Track(void *p);
   static void destruct_TA2Track(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Track*)
   {
      ::TA2Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Track", ::TA2Track::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Track.h", 20,
                  typeid(::TA2Track), DefineBehavior(ptr, ptr),
                  &::TA2Track::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Track) );
      instance.SetDelete(&delete_TA2Track);
      instance.SetDeleteArray(&deleteArray_TA2Track);
      instance.SetDestructor(&destruct_TA2Track);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Track*)
   {
      return GenerateInitInstanceLocal((::TA2Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2WireChamber_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2WireChamber(void *p);
   static void deleteArray_TA2WireChamber(void *p);
   static void destruct_TA2WireChamber(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2WireChamber*)
   {
      ::TA2WireChamber *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2WireChamber >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2WireChamber", ::TA2WireChamber::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2WireChamber.h", 28,
                  typeid(::TA2WireChamber), DefineBehavior(ptr, ptr),
                  &::TA2WireChamber::Dictionary, isa_proxy, 4,
                  sizeof(::TA2WireChamber) );
      instance.SetDelete(&delete_TA2WireChamber);
      instance.SetDeleteArray(&deleteArray_TA2WireChamber);
      instance.SetDestructor(&destruct_TA2WireChamber);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2WireChamber*)
   {
      return GenerateInitInstanceLocal((::TA2WireChamber*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2WireChamber*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2DataSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2DataSource(void *p);
   static void deleteArray_TA2DataSource(void *p);
   static void destruct_TA2DataSource(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2DataSource*)
   {
      ::TA2DataSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2DataSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2DataSource", ::TA2DataSource::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2DataSource.h", 25,
                  typeid(::TA2DataSource), DefineBehavior(ptr, ptr),
                  &::TA2DataSource::Dictionary, isa_proxy, 4,
                  sizeof(::TA2DataSource) );
      instance.SetDelete(&delete_TA2DataSource);
      instance.SetDeleteArray(&deleteArray_TA2DataSource);
      instance.SetDestructor(&destruct_TA2DataSource);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2DataSource*)
   {
      return GenerateInitInstanceLocal((::TA2DataSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2DataSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2NetSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2NetSource(void *p);
   static void deleteArray_TA2NetSource(void *p);
   static void destruct_TA2NetSource(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2NetSource*)
   {
      ::TA2NetSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2NetSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2NetSource", ::TA2NetSource::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2NetSource.h", 22,
                  typeid(::TA2NetSource), DefineBehavior(ptr, ptr),
                  &::TA2NetSource::Dictionary, isa_proxy, 4,
                  sizeof(::TA2NetSource) );
      instance.SetDelete(&delete_TA2NetSource);
      instance.SetDeleteArray(&deleteArray_TA2NetSource);
      instance.SetDestructor(&destruct_TA2NetSource);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2NetSource*)
   {
      return GenerateInitInstanceLocal((::TA2NetSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2NetSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2FileSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2FileSource(void *p);
   static void deleteArray_TA2FileSource(void *p);
   static void destruct_TA2FileSource(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2FileSource*)
   {
      ::TA2FileSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2FileSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2FileSource", ::TA2FileSource::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2FileSource.h", 22,
                  typeid(::TA2FileSource), DefineBehavior(ptr, ptr),
                  &::TA2FileSource::Dictionary, isa_proxy, 4,
                  sizeof(::TA2FileSource) );
      instance.SetDelete(&delete_TA2FileSource);
      instance.SetDeleteArray(&deleteArray_TA2FileSource);
      instance.SetDestructor(&destruct_TA2FileSource);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2FileSource*)
   {
      return GenerateInitInstanceLocal((::TA2FileSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2FileSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2LocalSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2LocalSource(void *p);
   static void deleteArray_TA2LocalSource(void *p);
   static void destruct_TA2LocalSource(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2LocalSource*)
   {
      ::TA2LocalSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2LocalSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2LocalSource", ::TA2LocalSource::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2LocalSource.h", 32,
                  typeid(::TA2LocalSource), DefineBehavior(ptr, ptr),
                  &::TA2LocalSource::Dictionary, isa_proxy, 4,
                  sizeof(::TA2LocalSource) );
      instance.SetDelete(&delete_TA2LocalSource);
      instance.SetDeleteArray(&deleteArray_TA2LocalSource);
      instance.SetDestructor(&destruct_TA2LocalSource);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2LocalSource*)
   {
      return GenerateInitInstanceLocal((::TA2LocalSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2LocalSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2Mk1Format_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2Mk1Format(void *p);
   static void deleteArray_TA2Mk1Format(void *p);
   static void destruct_TA2Mk1Format(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2Mk1Format*)
   {
      ::TA2Mk1Format *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2Mk1Format >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2Mk1Format", ::TA2Mk1Format::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2Mk1Format.h", 25,
                  typeid(::TA2Mk1Format), DefineBehavior(ptr, ptr),
                  &::TA2Mk1Format::Dictionary, isa_proxy, 4,
                  sizeof(::TA2Mk1Format) );
      instance.SetDelete(&delete_TA2Mk1Format);
      instance.SetDeleteArray(&deleteArray_TA2Mk1Format);
      instance.SetDestructor(&destruct_TA2Mk1Format);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2Mk1Format*)
   {
      return GenerateInitInstanceLocal((::TA2Mk1Format*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2Mk1Format*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPSFormat_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPSFormat(void *p);
   static void deleteArray_TA2TAPSFormat(void *p);
   static void destruct_TA2TAPSFormat(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPSFormat*)
   {
      ::TA2TAPSFormat *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPSFormat >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPSFormat", ::TA2TAPSFormat::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2TAPSFormat.h", 20,
                  typeid(::TA2TAPSFormat), DefineBehavior(ptr, ptr),
                  &::TA2TAPSFormat::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPSFormat) );
      instance.SetDelete(&delete_TA2TAPSFormat);
      instance.SetDeleteArray(&deleteArray_TA2TAPSFormat);
      instance.SetDestructor(&destruct_TA2TAPSFormat);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPSFormat*)
   {
      return GenerateInitInstanceLocal((::TA2TAPSFormat*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPSFormat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TA2TAPSMk2Format_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TA2TAPSMk2Format(void *p);
   static void deleteArray_TA2TAPSMk2Format(void *p);
   static void destruct_TA2TAPSMk2Format(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TA2TAPSMk2Format*)
   {
      ::TA2TAPSMk2Format *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TA2TAPSMk2Format >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TA2TAPSMk2Format", ::TA2TAPSMk2Format::Class_Version(), "/home/acqu/4v6/acqu/AcquRoot/src/TA2TAPSMk2Format.h", 18,
                  typeid(::TA2TAPSMk2Format), DefineBehavior(ptr, ptr),
                  &::TA2TAPSMk2Format::Dictionary, isa_proxy, 4,
                  sizeof(::TA2TAPSMk2Format) );
      instance.SetDelete(&delete_TA2TAPSMk2Format);
      instance.SetDeleteArray(&deleteArray_TA2TAPSMk2Format);
      instance.SetDestructor(&destruct_TA2TAPSMk2Format);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TA2TAPSMk2Format*)
   {
      return GenerateInitInstanceLocal((::TA2TAPSMk2Format*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TA2TAPSMk2Format*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TA2System::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2System::Class_Name()
{
   return "TA2System";
}

//______________________________________________________________________________
const char *TA2System::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2System*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2System::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2System*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2System::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2System*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2System::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2System*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2DataFormat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2DataFormat::Class_Name()
{
   return "TA2DataFormat";
}

//______________________________________________________________________________
const char *TA2DataFormat::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataFormat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2DataFormat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataFormat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2DataFormat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataFormat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2DataFormat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataFormat*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Mk2Format::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Mk2Format::Class_Name()
{
   return "TA2Mk2Format";
}

//______________________________________________________________________________
const char *TA2Mk2Format::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk2Format*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Mk2Format::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk2Format*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Mk2Format::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk2Format*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Mk2Format::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk2Format*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Analysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Analysis::Class_Name()
{
   return "TA2Analysis";
}

//______________________________________________________________________________
const char *TA2Analysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Analysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Analysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Analysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Analysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Analysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Analysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Analysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2DataServer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2DataServer::Class_Name()
{
   return "TA2DataServer";
}

//______________________________________________________________________________
const char *TA2DataServer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataServer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2DataServer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataServer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2DataServer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataServer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2DataServer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataServer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAcquRoot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAcquRoot::Class_Name()
{
   return "TAcquRoot";
}

//______________________________________________________________________________
const char *TAcquRoot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAcquRoot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAcquRoot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAcquRoot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAcquRoot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAcquRoot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAcquRoot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAcquRoot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Cut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Cut::Class_Name()
{
   return "TA2Cut";
}

//______________________________________________________________________________
const char *TA2Cut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Cut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Cut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Cut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Cut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Cut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Cut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Cut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2MultiCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2MultiCut::Class_Name()
{
   return "TA2MultiCut";
}

//______________________________________________________________________________
const char *TA2MultiCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MultiCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2MultiCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2MultiCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2MultiCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MultiCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2MultiCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2MultiCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2BitPattern::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2BitPattern::Class_Name()
{
   return "TA2BitPattern";
}

//______________________________________________________________________________
const char *TA2BitPattern::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2BitPattern*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2BitPattern::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2BitPattern*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2BitPattern::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2BitPattern*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2BitPattern::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2BitPattern*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2RateMonitor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2RateMonitor::Class_Name()
{
   return "TA2RateMonitor";
}

//______________________________________________________________________________
const char *TA2RateMonitor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2RateMonitor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2RateMonitor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2RateMonitor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2RateMonitor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2RateMonitor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2RateMonitor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2RateMonitor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2DataManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2DataManager::Class_Name()
{
   return "TA2DataManager";
}

//______________________________________________________________________________
const char *TA2DataManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2DataManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2DataManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2DataManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2H::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2H::Class_Name()
{
   return "TA2H";
}

//______________________________________________________________________________
const char *TA2H::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2H*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2H::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2H*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2H::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2H*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2H::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2H*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2HistManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2HistManager::Class_Name()
{
   return "TA2HistManager";
}

//______________________________________________________________________________
const char *TA2HistManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2HistManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2HistManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2HistManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2HistManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2HistManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2HistManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2HistManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Control::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Control::Class_Name()
{
   return "TA2Control";
}

//______________________________________________________________________________
const char *TA2Control::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Control*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Control::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Control*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Control::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Control*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Control::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Control*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Detector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Detector::Class_Name()
{
   return "TA2Detector";
}

//______________________________________________________________________________
const char *TA2Detector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Detector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Detector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Detector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Detector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Detector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Detector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Detector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2ParticleID::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2ParticleID::Class_Name()
{
   return "TA2ParticleID";
}

//______________________________________________________________________________
const char *TA2ParticleID::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ParticleID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2ParticleID::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ParticleID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2ParticleID::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ParticleID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2ParticleID::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ParticleID*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Particle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Particle::Class_Name()
{
   return "TA2Particle";
}

//______________________________________________________________________________
const char *TA2Particle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Particle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Particle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Particle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Particle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Particle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Particle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Particle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Apparatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Apparatus::Class_Name()
{
   return "TA2Apparatus";
}

//______________________________________________________________________________
const char *TA2Apparatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Apparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Apparatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Apparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Apparatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Apparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Apparatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Apparatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Physics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Physics::Class_Name()
{
   return "TA2Physics";
}

//______________________________________________________________________________
const char *TA2Physics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Physics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Physics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Physics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Physics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2GenericPhysics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2GenericPhysics::Class_Name()
{
   return "TA2GenericPhysics";
}

//______________________________________________________________________________
const char *TA2GenericPhysics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericPhysics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2GenericPhysics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericPhysics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2GenericPhysics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericPhysics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2GenericPhysics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericPhysics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2GenericApparatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2GenericApparatus::Class_Name()
{
   return "TA2GenericApparatus";
}

//______________________________________________________________________________
const char *TA2GenericApparatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2GenericApparatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2GenericApparatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2GenericApparatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericApparatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2GenericDetector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2GenericDetector::Class_Name()
{
   return "TA2GenericDetector";
}

//______________________________________________________________________________
const char *TA2GenericDetector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2GenericDetector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2GenericDetector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2GenericDetector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericDetector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2LongScint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2LongScint::Class_Name()
{
   return "TA2LongScint";
}

//______________________________________________________________________________
const char *TA2LongScint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2LongScint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2LongScint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2LongScint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2LongScint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2LongScint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2LongScint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2LongScint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2GenericCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2GenericCluster::Class_Name()
{
   return "TA2GenericCluster";
}

//______________________________________________________________________________
const char *TA2GenericCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2GenericCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2GenericCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2GenericCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2GenericCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Ladder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Ladder::Class_Name()
{
   return "TA2Ladder";
}

//______________________________________________________________________________
const char *TA2Ladder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Ladder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Ladder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Ladder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Ladder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Ladder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Ladder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Ladder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TOFApparatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TOFApparatus::Class_Name()
{
   return "TA2TOFApparatus";
}

//______________________________________________________________________________
const char *TA2TOFApparatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TOFApparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TOFApparatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TOFApparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TOFApparatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TOFApparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TOFApparatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TOFApparatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2ClusterDetector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2ClusterDetector::Class_Name()
{
   return "TA2ClusterDetector";
}

//______________________________________________________________________________
const char *TA2ClusterDetector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ClusterDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2ClusterDetector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2ClusterDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2ClusterDetector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ClusterDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2ClusterDetector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2ClusterDetector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Tagger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Tagger::Class_Name()
{
   return "TA2Tagger";
}

//______________________________________________________________________________
const char *TA2Tagger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Tagger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Tagger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Tagger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Tagger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Tagger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Tagger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Tagger*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2WCLayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2WCLayer::Class_Name()
{
   return "TA2WCLayer";
}

//______________________________________________________________________________
const char *TA2WCLayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2WCLayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2WCLayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2WCLayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2WCLayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylWire::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylWire::Class_Name()
{
   return "TA2CylWire";
}

//______________________________________________________________________________
const char *TA2CylWire::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWire*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylWire::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWire*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylWire::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWire*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylWire::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylWire*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2CylStrip::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2CylStrip::Class_Name()
{
   return "TA2CylStrip";
}

//______________________________________________________________________________
const char *TA2CylStrip::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStrip*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2CylStrip::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStrip*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2CylStrip::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStrip*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2CylStrip::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2CylStrip*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Track::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Track::Class_Name()
{
   return "TA2Track";
}

//______________________________________________________________________________
const char *TA2Track::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Track::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Track::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Track::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Track*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2WireChamber::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2WireChamber::Class_Name()
{
   return "TA2WireChamber";
}

//______________________________________________________________________________
const char *TA2WireChamber::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2WireChamber*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2WireChamber::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2WireChamber*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2WireChamber::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2WireChamber*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2WireChamber::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2WireChamber*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2DataSource::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2DataSource::Class_Name()
{
   return "TA2DataSource";
}

//______________________________________________________________________________
const char *TA2DataSource::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2DataSource::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2DataSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2DataSource::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2DataSource::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2DataSource*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2NetSource::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2NetSource::Class_Name()
{
   return "TA2NetSource";
}

//______________________________________________________________________________
const char *TA2NetSource::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2NetSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2NetSource::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2NetSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2NetSource::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2NetSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2NetSource::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2NetSource*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2FileSource::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2FileSource::Class_Name()
{
   return "TA2FileSource";
}

//______________________________________________________________________________
const char *TA2FileSource::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2FileSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2FileSource::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2FileSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2FileSource::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2FileSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2FileSource::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2FileSource*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2LocalSource::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2LocalSource::Class_Name()
{
   return "TA2LocalSource";
}

//______________________________________________________________________________
const char *TA2LocalSource::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2LocalSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2LocalSource::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2LocalSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2LocalSource::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2LocalSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2LocalSource::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2LocalSource*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2Mk1Format::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2Mk1Format::Class_Name()
{
   return "TA2Mk1Format";
}

//______________________________________________________________________________
const char *TA2Mk1Format::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk1Format*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2Mk1Format::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk1Format*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2Mk1Format::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk1Format*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2Mk1Format::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2Mk1Format*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPSFormat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPSFormat::Class_Name()
{
   return "TA2TAPSFormat";
}

//______________________________________________________________________________
const char *TA2TAPSFormat::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSFormat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPSFormat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSFormat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPSFormat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSFormat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPSFormat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSFormat*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TA2TAPSMk2Format::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TA2TAPSMk2Format::Class_Name()
{
   return "TA2TAPSMk2Format";
}

//______________________________________________________________________________
const char *TA2TAPSMk2Format::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSMk2Format*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TA2TAPSMk2Format::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSMk2Format*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TA2TAPSMk2Format::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSMk2Format*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TA2TAPSMk2Format::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TA2TAPSMk2Format*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TA2System::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2System.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2System::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2System::Class(),this);
   }
}

//______________________________________________________________________________
void TA2System::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2System.
      TClass *R__cl = ::TA2System::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCmdList[5]", &fCmdList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputFile", &fInputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogFile", &fLogFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogStream", &fLogStream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsInit", &fIsInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsError", &fIsError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsConfigPass", &fIsConfigPass);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2System(void *p) {
      delete ((::TA2System*)p);
   }
   static void deleteArray_TA2System(void *p) {
      delete [] ((::TA2System*)p);
   }
   static void destruct_TA2System(void *p) {
      typedef ::TA2System current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2System

//______________________________________________________________________________
void TA2HistManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2HistManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2HistManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2HistManager::Class(),this);
   }
}

//______________________________________________________________________________
void TA2HistManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2HistManager.
      TClass *R__cl = ::TA2HistManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistList", &fHistList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f1Dhist", &f1Dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f2Dhist", &f2Dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f3Dhist", &f3Dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN1Dhist", &fN1Dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN2Dhist", &fN2Dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN3Dhist", &fN3Dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDisplay", &fIsDisplay);
      TA2DataManager::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2HistManager(void *p) {
      delete ((::TA2HistManager*)p);
   }
   static void deleteArray_TA2HistManager(void *p) {
      delete [] ((::TA2HistManager*)p);
   }
   static void destruct_TA2HistManager(void *p) {
      typedef ::TA2HistManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2HistManager

//______________________________________________________________________________
void TA2DataManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2DataManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2DataManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2DataManager::Class(),this);
   }
}

//______________________________________________________________________________
void TA2DataManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2DataManager.
      TClass *R__cl = ::TA2DataManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandom", &fRandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRandSeed", &fRandSeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChildren", &fChildren);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVariables", &fVariables);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeFile", &fTreeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbranch", &fNbranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataCuts", &fDataCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistCuts", &fHistCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMiscCuts", &fMiscCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCompoundCut", &fCompoundCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRateMonitor", &fRateMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBitPattern", &fBitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPatternHits", &fPatternHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNPatternHits", &fNPatternHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADCdefined", &fADCdefined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMulti", &fMulti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScaler", &fScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerBuff", &fScalerBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerSum", &fScalerSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxADC", &fMaxADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxScaler", &fMaxScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerIndex", &fScalerIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerCurr", &fScalerCurr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerAcc", &fScalerAcc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPeriod", &fNPeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPeriod", &fMaxPeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPeriodCmd", &fPeriodCmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEpicsCmd", &fEpicsCmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEndOfFileCmd", &fEndOfFileCmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFinishCmd", &fFinishCmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeFileName", &fTreeFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRawDecode", &fIsRawDecode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDecode", &fIsDecode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsReconstruct", &fIsReconstruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRawDecodeOK", &fIsRawDecodeOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDecodeOK", &fIsDecodeOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsReconstructOK", &fIsReconstructOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsCut", &fIsCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsBitPattern", &fIsBitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRateMonitor", &fIsRateMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsEndOfFile", &fIsEndOfFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFinish", &fIsFinish);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSaveEvent", &fIsSaveEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kValidChild", &kValidChild);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2DataManager(void *p) {
      delete ((::TA2DataManager*)p);
   }
   static void deleteArray_TA2DataManager(void *p) {
      delete [] ((::TA2DataManager*)p);
   }
   static void destruct_TA2DataManager(void *p) {
      typedef ::TA2DataManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2DataManager

//______________________________________________________________________________
void TA2Control::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Control.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Control::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Control::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Control::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Control.
      TClass *R__cl = ::TA2Control::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBatch", &fBatch);
      TRint::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Control(void *p) {
      delete ((::TA2Control*)p);
   }
   static void deleteArray_TA2Control(void *p) {
      delete [] ((::TA2Control*)p);
   }
   static void destruct_TA2Control(void *p) {
      typedef ::TA2Control current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Control

//______________________________________________________________________________
void TAcquRoot::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAcquRoot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAcquRoot::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAcquRoot::Class(),this);
   }
}

//______________________________________________________________________________
void TAcquRoot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAcquRoot.
      TClass *R__cl = ::TAcquRoot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunThread", &fRunThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeFile", &fTreeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeFileList", &fTreeFileList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTreeFiles", &fNTreeFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeName", &fTreeName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchName", &fBranchName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeDir", &fTreeDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBatchDir", &fBatchDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalysis", &fAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalysisSetup", &fAnalysisSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalysisType", &fAnalysisType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataServer", &fDataServer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataServerSetup", &fDataServerSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLocalDAQSetup", &fLocalDAQSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEvent", &fNEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNScalerEvent", &fNScalerEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotScalerEvent", &fTotScalerEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrEvent", &fCurrEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbranch", &fNbranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecLen", &fRecLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDataBuffer", &fNDataBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventSize", &fEventSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventIndex", &fEventIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeaderBuff", &fHeaderBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSBuff", &fSBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADCList", &fADCList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerList", &fScalerList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHardwareList", &fHardwareList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHardwareError", &fHardwareError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNModule", &fNModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxADC", &fMaxADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxScaler", &fMaxScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCError", &fADCError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalerError", &fScalerError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHardError", &fHardError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMulti", &fMulti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADCdefined", &fADCdefined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScaler", &fScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerS", &fScalerS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerClr", &fScalerClr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerBuff", &fScalerBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEventScaler", &fNEventScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerHist", &fScalerHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerSum", &fScalerSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNScalerBlock", &fNScalerBlock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScBlockLength", &fScBlockLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalerBlock", &fScalerBlock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcessType", &fProcessType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOnline", &fIsOnline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsHbookFile", &fIsHbookFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSortBusy", &fIsSortBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsScalerRead", &fIsScalerRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFinished", &fIsFinished);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsBatch", &fIsBatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsLocalDAQ", &fIsLocalDAQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEpics", &fNEpics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEpicsBuff[100]", &fEpicsBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsEpicsRead", &fIsEpicsRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEpicsIndex[100]", fEpicsIndex);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TAcquRoot(void *p) {
      delete ((::TAcquRoot*)p);
   }
   static void deleteArray_TAcquRoot(void *p) {
      delete [] ((::TAcquRoot*)p);
   }
   static void destruct_TAcquRoot(void *p) {
      typedef ::TAcquRoot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAcquRoot

//______________________________________________________________________________
void TA2Analysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Analysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Analysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Analysis::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Analysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Analysis.
      TClass *R__cl = ::TA2Analysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawData", &fRawData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDAQEvent", &fNDAQEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhits", &fNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEvent", &fNEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEvAnalysed", &fNEvAnalysed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNOnlineEvent", &fNOnlineEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNHardwareError", &fNHardwareError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHardwareError", &fHardwareError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlash", &fFlash);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMulti", &fMulti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhysics", &fPhysics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPrevFileName", &fPrevFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticleID", &fParticleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPhysics", &fIsPhysics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsProcessComplete", &fIsProcessComplete);
      TA2HistManager::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Analysis(void *p) {
      delete ((::TA2Analysis*)p);
   }
   static void deleteArray_TA2Analysis(void *p) {
      delete [] ((::TA2Analysis*)p);
   }
   static void destruct_TA2Analysis(void *p) {
      typedef ::TA2Analysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Analysis

//______________________________________________________________________________
void TA2Physics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Physics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Physics::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Physics::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Physics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Physics.
      TClass *R__cl = ::TA2Physics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4miss", &fP4miss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4target", &fP4target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetPos", &fTargetPos);
      R__insp.InspectMember(fTargetPos, "fTargetPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMmiss", &fMmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmiss", &fPmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPtheta", &fPtheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPphi", &fPphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtarget", &fNtarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperm", &fNperm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNpermutation", &fNpermutation);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Physics(void *p) {
      delete ((::TA2Physics*)p);
   }
   static void deleteArray_TA2Physics(void *p) {
      delete [] ((::TA2Physics*)p);
   }
   static void destruct_TA2Physics(void *p) {
      typedef ::TA2Physics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Physics

//______________________________________________________________________________
void TA2GenericPhysics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2GenericPhysics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2GenericPhysics::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2GenericPhysics::Class(),this);
   }
}

//______________________________________________________________________________
void TA2GenericPhysics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2GenericPhysics.
      TClass *R__cl = ::TA2GenericPhysics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGG", &fTAGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAGGinfo", &fTAGGinfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCB", &fCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTAPS", &fTAPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF", &fTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGenApp", &fGenApp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGenAppInfo", &fGenAppInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4photon", &fP4photon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4proton", &fP4proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4piplus", &fP4piplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4neutron", &fP4neutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4pi0", &fP4pi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4gprime", &fP4gprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4eta", &fP4eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4rootino", &fP4rootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNGenApp", &fNGenApp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNParticle", &fNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphoton", &fNphoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNproton", &fNproton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpiplus", &fNpiplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNneutron", &fNneutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpi0", &fNpi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgprime", &fNgprime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeta", &fNeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrootino", &fNrootino);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNprompt", &fNprompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrandom", &fNrandom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaP", &fNparaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparaR", &fNparaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpP", &fNperpP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNperpR", &fNperpR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTagg", &fMaxTagg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxParticle", &fMaxParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEm", &fEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmP", &fEmP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmR", &fEmR);
      TA2Physics::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2GenericPhysics(void *p) {
      delete ((::TA2GenericPhysics*)p);
   }
   static void deleteArray_TA2GenericPhysics(void *p) {
      delete [] ((::TA2GenericPhysics*)p);
   }
   static void destruct_TA2GenericPhysics(void *p) {
      typedef ::TA2GenericPhysics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2GenericPhysics

//______________________________________________________________________________
void TA2Apparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Apparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Apparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Apparatus::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Apparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Apparatus.
      TClass *R__cl = ::TA2Apparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4", &fP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticleInfo", &fParticleInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDGtype", &fPDGtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG_ID", &fPDG_ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4tot", &fP4tot);
      R__insp.InspectMember(fP4tot, "fP4tot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticleID", &fParticleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMtot", &fMtot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinv", &fMinv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtot", &fEtot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxParticle", &fMaxParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparticle", &fNparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fROOToutput", &fROOToutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPCut", &fPCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCut", &fNCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSector", &fNSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPCutStart", &fPCutStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNSectorCut", &fNSectorCut);
      TA2HistManager::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Apparatus(void *p) {
      delete ((::TA2Apparatus*)p);
   }
   static void deleteArray_TA2Apparatus(void *p) {
      delete [] ((::TA2Apparatus*)p);
   }
   static void destruct_TA2Apparatus(void *p) {
      typedef ::TA2Apparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Apparatus

//______________________________________________________________________________
void TA2GenericApparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2GenericApparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2GenericApparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2GenericApparatus::Class(),this);
   }
}

//______________________________________________________________________________
void TA2GenericApparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2GenericApparatus.
      TClass *R__cl = ::TA2GenericApparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDet", &fDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDet", &fNDet);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2GenericApparatus(void *p) {
      delete ((::TA2GenericApparatus*)p);
   }
   static void deleteArray_TA2GenericApparatus(void *p) {
      delete [] ((::TA2GenericApparatus*)p);
   }
   static void destruct_TA2GenericApparatus(void *p) {
      typedef ::TA2GenericApparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2GenericApparatus

//______________________________________________________________________________
void TA2TOFApparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TOFApparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TOFApparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TOFApparatus::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TOFApparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TOFApparatus.
      TClass *R__cl = ::TA2TOFApparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDet", &fDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTOF", &fTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLadder", &fLadder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPolAnal", &fPolAnal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPolAsym", &fPolAsym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBeta", &fBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlightTime", &fFlightTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScatTheta", &fScatTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScatPhi", &fScatPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDiffTheta", &fDiffTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPolTdiff", &fPolTdiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPolEsum", &fPolEsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeZero", &fTimeZero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTmin", &fTmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTmax", &fTmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmin", &fEmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmax", &fEmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMin", &fThetaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMax", &fThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDet", &fNDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTOF", &fNTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTOFbar", &fNTOFbar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPolScatter", &fNPolScatter);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TOFApparatus(void *p) {
      delete ((::TA2TOFApparatus*)p);
   }
   static void deleteArray_TA2TOFApparatus(void *p) {
      delete [] ((::TA2TOFApparatus*)p);
   }
   static void destruct_TA2TOFApparatus(void *p) {
      typedef ::TA2TOFApparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TOFApparatus

//______________________________________________________________________________
void TA2Tagger::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Tagger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Tagger::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Tagger::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Tagger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Tagger.
      TClass *R__cl = ::TA2Tagger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMR", &fNMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamEnergy", &fBeamEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamPol", &fBeamPol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonEnergy", &fPhotonEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhotonTime", &fPhotonTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFP", &fFP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMicro", &fMicro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPbGlass", &fPbGlass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFPEcalib", &fFPEcalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMicroEcalib", &fMicroEcalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFP", &fIsFP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMicro", &fIsMicro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPbGlass", &fIsPbGlass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsLinPol", &fIsLinPol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsHelicityAmbiguous", &fIsHelicityAmbiguous);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFPElem", &fNFPElem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMicroElem", &fNMicroElem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHelicityADC", &fHelicityADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitLevel", &fInitLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseADC", &fBaseADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGoniADC", &fGoniADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScanFlagADC", &fScanFlagADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepADC", &fStepADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormChannel", &fNormChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormEnergy", &fNormEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergyCalib", &fEnergyCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerCurr", &fScalerCurr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefFileName", &fRefFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIncSpectrum", &fIncSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCohSpectrum", &fCohSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnhSpectrum", &fEnhSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadScalerChan", &fBadScalerChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHaveIncScaler", &fHaveIncScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoingScalers", &fDoingScalers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoingTDCs", &fDoingTDCs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTDCRefFileName", &fTDCRefFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadTDCChan", &fBadTDCChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillFreq", &fFillFreq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillCounter", &fFillCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPrompt", &fPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRand", &fRand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTDCIncSpectrum", &fTDCIncSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTDCCohSpectrum", &fTDCCohSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTDCEnhSpectrum", &fTDCEnhSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHaveIncTDC", &fHaveIncTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPromptRandRatio", &fPromptRandRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdge", &fEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdgeEnergy", &fEdgeEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoniAOff", &fGoniAOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoniVOff", &fGoniVOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoniHOff", &fGoniHOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoniPlane", &fGoniPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoniRadius", &fGoniRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoniMode", &fGoniMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDInc", &fDInc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDCoh", &fDCoh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDEnh", &fDEnh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDCohPara", &fDCohPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDEnhPara", &fDEnhPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDCohPerp", &fDCohPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDEnhPerp", &fDEnhPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCInc", &fDTDCInc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCCoh", &fDTDCCoh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCEnh", &fDTDCEnh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCCohPara", &fDTDCCohPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCEnhPara", &fDTDCEnhPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCCohPerp", &fDTDCCohPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTDCEnhPerp", &fDTDCEnhPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDEdge", &fDEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDEdgeEnergy", &fDEdgeEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDScanStep", &fDScanStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalerCount", &fScalerCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLadderTime", &fLadderTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLadderHits", &fLadderHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLadderWindows", &fLadderWindows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEdgeFitName", &fEdgeFitName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdgeChMin", &fEdgeChMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdgeChMax", &fEdgeChMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHInc", &fHInc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCoh", &fHCoh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEnh", &fHEnh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCohPara", &fHCohPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEnhPara", &fHEnhPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHCohPerp", &fHCohPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEnhPerp", &fHEnhPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCInc", &fHTDCInc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCCoh", &fHTDCCoh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCEnh", &fHTDCEnh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCCohPara", &fHTDCCohPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCEnhPara", &fHTDCEnhPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCCohPerp", &fHTDCCohPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHTDCEnhPerp", &fHTDCEnhPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHScan", &fHScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEdge", &fHEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHEdgeEnergy", &fHEdgeEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEdgeFit", &fEdgeFit);
      TA2Apparatus::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Tagger(void *p) {
      delete ((::TA2Tagger*)p);
   }
   static void deleteArray_TA2Tagger(void *p) {
      delete [] ((::TA2Tagger*)p);
   }
   static void destruct_TA2Tagger(void *p) {
      typedef ::TA2Tagger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Tagger

//______________________________________________________________________________
void TA2Detector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Detector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Detector::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Detector::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Detector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Detector.
      TClass *R__cl = ::TA2Detector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fElement", &fElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergyOR", &fEnergyOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeM", &fTimeM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeOR", &fTimeOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeORM", &fTimeORM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPosition", &fPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanPos", &fMeanPos);
      R__insp.InspectMember(fMeanPos, "fMeanPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShiftOp", &fShiftOp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShiftValue", &fShiftValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNShiftOp", &fNShiftOp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitsM", &fHitsM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawTimeHits", &fRawTimeHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEnergyHits", &fRawEnergyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetectorComm", &fDetectorComm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetectorHist", &fDetectorHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalEnergy", &fTotalEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyScale", &fEnergyScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffset", &fTimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhits", &fNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNhitsM", &fNhitsM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNADChits", &fNADChits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTDChits", &fNTDChits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMultihit", &fNMultihit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelement", &fNelement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelem", &fNelem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxHits", &fMaxHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsECalib", &fIsECalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsScaler", &fIsScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsEnergy", &fIsEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTime", &fIsTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPos", &fIsPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRawHits", &fIsRawHits);
      TA2HistManager::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Detector(void *p) {
      delete ((::TA2Detector*)p);
   }
   static void deleteArray_TA2Detector(void *p) {
      delete [] ((::TA2Detector*)p);
   }
   static void destruct_TA2Detector(void *p) {
      typedef ::TA2Detector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Detector

//______________________________________________________________________________
void TA2GenericDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2GenericDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2GenericDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2GenericDetector::Class(),this);
   }
}

//______________________________________________________________________________
void TA2GenericDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2GenericDetector.
      TClass *R__cl = ::TA2GenericDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIminMC", &fIminMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImaxMC", &fImaxMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNPartMC", &fNPartMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNHitsMC", &fNHitsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitsMC", &fHitsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIndex2Element", &fIndex2Element);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergyMC", &fEnergyMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeMC", &fTimeMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fX_MC", &fX_MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fY_MC", &fY_MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZ_MC", &fZ_MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexMC", &fVertexMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitPos", &fHitPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fXMC", &fXMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fYMC", &fYMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZMC", &fZMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fXMCOR", &fXMCOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fYMCOR", &fYMCOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZMCOR", &fZMCOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertex", &fVertex);
      R__insp.InspectMember(fVertex, "fVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBeamMC", &fBeamMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirCosMC", &fDirCosMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlabMC", &fPlabMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fElabMC", &fElabMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4MC", &fP4MC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4Comb", &fP4Comb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEMC", &fEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPMC", &fPMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThMC", &fThMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiMC", &fPhiMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeOvThr", &fTimeOvThr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNComb", &fNComb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIComb", &fIComb);
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2GenericDetector(void *p) {
      delete ((::TA2GenericDetector*)p);
   }
   static void deleteArray_TA2GenericDetector(void *p) {
      delete [] ((::TA2GenericDetector*)p);
   }
   static void destruct_TA2GenericDetector(void *p) {
      typedef ::TA2GenericDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2GenericDetector

//______________________________________________________________________________
void TA2ClusterDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2ClusterDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2ClusterDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2ClusterDetector::Class(),this);
   }
}

//______________________________________________________________________________
void TA2ClusterDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2ClusterDetector.
      TClass *R__cl = ::TA2ClusterDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCluster", &fCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClustHit", &fClustHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsSplit", &fIsSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTempHits", &fTempHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCluster", &fNCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClustSizeFactor", &fClustSizeFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSplit", &fNSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSplitMerged", &fNSplitMerged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxCluster", &fMaxCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNClustHitOR", &fNClustHitOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClEnergyOR", &fClEnergyOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClTimeOR", &fClTimeOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClCentFracOR", &fClCentFracOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClRadiusOR", &fClRadiusOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClEthresh", &fClEthresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEthresh", &fEthresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEthreshSplit", &fEthreshSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxThetaSplitOff", &fMaxThetaSplitOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinPosDiff", &fMinPosDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPosDiff", &fMaxPosDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSplitAngle", &fSplitAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEWgt", &fEWgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLEWgt", &fLEWgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fISplit", &fISplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIJSplit", &fIJSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSplitPerm", &fMaxSplitPerm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsIterate", &fIsIterate);
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2ClusterDetector(void *p) {
      delete ((::TA2ClusterDetector*)p);
   }
   static void deleteArray_TA2ClusterDetector(void *p) {
      delete [] ((::TA2ClusterDetector*)p);
   }
   static void destruct_TA2ClusterDetector(void *p) {
      typedef ::TA2ClusterDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2ClusterDetector

//______________________________________________________________________________
void TA2GenericCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2GenericCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2GenericCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2GenericCluster::Class(),this);
   }
}

//______________________________________________________________________________
void TA2GenericCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2GenericCluster.
      TClass *R__cl = ::TA2GenericCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCluster", &fCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClustHit", &fClustHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsSplit", &fIsSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTempHits", &fTempHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCluster", &fNCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClustSizeFactor", &fClustSizeFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSplit", &fNSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSplitMerged", &fNSplitMerged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxCluster", &fMaxCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNClustHitOR", &fNClustHitOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClEnergyOR", &fClEnergyOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClTimeOR", &fClTimeOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClCentFracOR", &fClCentFracOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClRadiusOR", &fClRadiusOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCldTheta", &fCldTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCldPhi", &fCldPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCldX", &fCldX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCldY", &fCldY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCldZ", &fCldZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fXmc", &fXmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fYmc", &fYmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZmc", &fZmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClEthresh", &fClEthresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEthresh", &fEthresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEthreshSplit", &fEthreshSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxThetaSplitOff", &fMaxThetaSplitOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinPosDiff", &fMinPosDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPosDiff", &fMaxPosDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSplitAngle", &fSplitAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEWgt", &fEWgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLEWgt", &fLEWgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fISplit", &fISplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIJSplit", &fIJSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSplitPerm", &fMaxSplitPerm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsIterate", &fIsIterate);
      TA2GenericDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2GenericCluster(void *p) {
      delete ((::TA2GenericCluster*)p);
   }
   static void deleteArray_TA2GenericCluster(void *p) {
      delete [] ((::TA2GenericCluster*)p);
   }
   static void destruct_TA2GenericCluster(void *p) {
      typedef ::TA2GenericCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2GenericCluster

//______________________________________________________________________________
void TA2LongScint::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2LongScint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2LongScint::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2LongScint::Class(),this);
   }
}

//______________________________________________________________________________
void TA2LongScint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2LongScint.
      TClass *R__cl = ::TA2LongScint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBar", &fBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanEnergy", &fMeanEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanEnergyOR", &fMeanEnergyOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanTime", &fMeanTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanTimeOR", &fMeanTimeOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeDiff", &fTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeDiffOR", &fTimeDiffOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaOR", &fThetaOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiOR", &fPhiOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlightOR", &fFlightOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlight", &fFlight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBarPos", &fBarPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBarHits", &fBarHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBarHitCount", &fBarHitCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fElement2Bar", &fElement2Bar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSmearHits", &fSmearHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBarHits", &fNBarHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBar", &fNBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbar", &fNbar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFrontBar", &fNFrontBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSmearHits", &fNSmearHits);
      TA2GenericDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2LongScint(void *p) {
      delete ((::TA2LongScint*)p);
   }
   static void deleteArray_TA2LongScint(void *p) {
      delete [] ((::TA2LongScint*)p);
   }
   static void destruct_TA2LongScint(void *p) {
      typedef ::TA2LongScint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2LongScint

//______________________________________________________________________________
void TA2Ladder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Ladder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Ladder::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Ladder::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Ladder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Ladder.
      TClass *R__cl = ::TA2Ladder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigger", &fTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigg", &fTrigg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDoubles", &fDoubles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitsAll", &fHitsAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWindows", &fWindows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitsRand", &fHitsRand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitsPrompt", &fHitsPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMuHits", &fMuHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fECalibration", &fECalibration);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEelec", &fEelec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEelecOR", &fEelecOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanEelecOR", &fMeanEelecOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEOverlap", &fEOverlap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandMin", &fRandMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRandMax", &fRandMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanTime", &fMeanTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanTimeOR", &fMeanTimeOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanEnergy", &fMeanEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeanEnergyOR", &fMeanEnergyOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDiffTime", &fDiffTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDiffTimeOR", &fDiffTimeOR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimingRes", &fTimingRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPromptRand", &fPromptRand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPromptMin", &fPromptMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPromptMax", &fPromptMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDoubles", &fNDoubles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNThits", &fNThits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtrigger", &fNtrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtrig", &fNtrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRandWindows", &fNRandWindows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhitsPrompt", &fNhitsPrompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhitsRand", &fNhitsRand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMuHits", &fNMuHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMuElem", &fNMuElem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFence", &fFence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOverlap", &fIsOverlap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTimeWindows", &fIsTimeWindows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFence", &fIsFence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMicro", &fIsMicro);
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Ladder(void *p) {
      delete ((::TA2Ladder*)p);
   }
   static void deleteArray_TA2Ladder(void *p) {
      delete [] ((::TA2Ladder*)p);
   }
   static void destruct_TA2Ladder(void *p) {
      typedef ::TA2Ladder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Ladder

//______________________________________________________________________________
void TA2WireChamber::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2WireChamber.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2WireChamber::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2WireChamber::Class(),this);
   }
}

//______________________________________________________________________________
void TA2WireChamber::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2WireChamber.
      TClass *R__cl = ::TA2WireChamber::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNLayer", &fNLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNlayer", &fNlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNChamber", &fNChamber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNchamber", &fNchamber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxIntersect", &fMaxIntersect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTrack", &fMaxTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxVertex", &fMaxVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChamberLayers", &fChamberLayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrack", &fNTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVertex", &fNVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWCLayer", &fWCLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertex", &fVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexLimits", &fVertexLimits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackTheta", &fTrackTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackPhi", &fTrackPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi", &fPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f2Pi", &f2Pi);
      TA2Detector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2WireChamber(void *p) {
      delete ((::TA2WireChamber*)p);
   }
   static void deleteArray_TA2WireChamber(void *p) {
      delete [] ((::TA2WireChamber*)p);
   }
   static void destruct_TA2WireChamber(void *p) {
      typedef ::TA2WireChamber current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2WireChamber

//______________________________________________________________________________
void TA2H::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2H.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2H::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2H::Class(),this);
   }
}

//______________________________________________________________________________
void TA2H::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2H.
      TClass *R__cl = ::TA2H::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCut", &fCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWeight", &fWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsWeight", &fIsWeight);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2H(void *p) {
      delete ((::TA2H*)p);
   }
   static void deleteArray_TA2H(void *p) {
      delete [] ((::TA2H*)p);
   }
   static void destruct_TA2H(void *p) {
      typedef ::TA2H current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2H

//______________________________________________________________________________
void TA2Cut::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Cut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Cut::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Cut::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Cut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Cut.
      TClass *R__cl = ::TA2Cut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTrue", &fIsTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsNOT", &fIsNOT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLink", &fLink);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOpt", &fOpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNOpt", &fNOpt);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Cut(void *p) {
      delete ((::TA2Cut*)p);
   }
   static void deleteArray_TA2Cut(void *p) {
      delete [] ((::TA2Cut*)p);
   }
   static void destruct_TA2Cut(void *p) {
      typedef ::TA2Cut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Cut

//______________________________________________________________________________
void TA2MultiCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2MultiCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2MultiCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2MultiCut::Class(),this);
   }
}

//______________________________________________________________________________
void TA2MultiCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2MultiCut.
      TClass *R__cl = ::TA2MultiCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutList", &fCutList);
      TA2Cut::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2MultiCut(void *p) {
      delete ((::TA2MultiCut*)p);
   }
   static void deleteArray_TA2MultiCut(void *p) {
      delete [] ((::TA2MultiCut*)p);
   }
   static void destruct_TA2MultiCut(void *p) {
      typedef ::TA2MultiCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2MultiCut

//______________________________________________________________________________
void TA2BitPattern::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2BitPattern.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2BitPattern::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2BitPattern::Class(),this);
   }
}

//______________________________________________________________________________
void TA2BitPattern::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2BitPattern.
      TClass *R__cl = ::TA2BitPattern::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPatternName", &fPatternName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADCList", &fADCList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPatternList", &fPatternList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPattern", &fNPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpat", &fNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNADC", &fNADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNadc", &fNadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNelement", &fNelement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNelem", &fNelem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNHits", &fNHits);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2BitPattern(void *p) {
      delete ((::TA2BitPattern*)p);
   }
   static void deleteArray_TA2BitPattern(void *p) {
      delete [] ((::TA2BitPattern*)p);
   }
   static void destruct_TA2BitPattern(void *p) {
      typedef ::TA2BitPattern current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2BitPattern

//______________________________________________________________________________
void TA2RateMonitor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2RateMonitor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2RateMonitor::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2RateMonitor::Class(),this);
   }
}

//______________________________________________________________________________
void TA2RateMonitor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2RateMonitor.
      TClass *R__cl = ::TA2RateMonitor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScaler", &fScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerSum", &fScalerSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRateName", &fRateName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRate", &fNRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrate", &fNrate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScalerIndex", &fScalerIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClockIndex", &fClockIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFrequency", &fFrequency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNorm", &fNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRate", &fRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsScalerRead", &fIsScalerRead);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2RateMonitor(void *p) {
      delete ((::TA2RateMonitor*)p);
   }
   static void deleteArray_TA2RateMonitor(void *p) {
      delete [] ((::TA2RateMonitor*)p);
   }
   static void destruct_TA2RateMonitor(void *p) {
      typedef ::TA2RateMonitor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2RateMonitor

//______________________________________________________________________________
void TA2ParticleID::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2ParticleID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2ParticleID::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2ParticleID::Class(),this);
   }
}

//______________________________________________________________________________
void TA2ParticleID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2ParticleID.
      TClass *R__cl = ::TA2ParticleID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxType", &fMaxType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDGtype", &fPDGtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMass", &fMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCharge", &fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG", &fPDG);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2ParticleID(void *p) {
      delete ((::TA2ParticleID*)p);
   }
   static void deleteArray_TA2ParticleID(void *p) {
      delete [] ((::TA2ParticleID*)p);
   }
   static void destruct_TA2ParticleID(void *p) {
      typedef ::TA2ParticleID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2ParticleID

//______________________________________________________________________________
void TA2Particle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Particle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Particle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Particle::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Particle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Particle.
      TClass *R__cl = ::TA2Particle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP4", &fP4);
      R__insp.InspectMember(fP4, "fP4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoTime", &fVetoTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoEnergy", &fVetoEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCircDegree", &fCircDegree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLinDegree", &fLinDegree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPSAShort", &fPSAShort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaE", &fSigmaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaPhi", &fSigmaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaTheta", &fSigmaTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaTime", &fSigmaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusterSize", &fClusterSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParticleID", &fParticleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondID", &fSecondID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoIndex", &fVetoIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCentralIndex", &fCentralIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCircState", &fCircState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLinState", &fLinState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWindow", &fWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fApparati", &fApparati);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectors", &fDetectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUnclear", &fUnclear);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TA2Particle(void *p) {
      return  p ? new(p) ::TA2Particle : new ::TA2Particle;
   }
   static void *newArray_TA2Particle(Long_t nElements, void *p) {
      return p ? new(p) ::TA2Particle[nElements] : new ::TA2Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TA2Particle(void *p) {
      delete ((::TA2Particle*)p);
   }
   static void deleteArray_TA2Particle(void *p) {
      delete [] ((::TA2Particle*)p);
   }
   static void destruct_TA2Particle(void *p) {
      typedef ::TA2Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Particle

//______________________________________________________________________________
void TA2Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Track::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Track.
      TClass *R__cl = ::TA2Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOrigin", &fOrigin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirCos", &fDirCos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertex", &fVertex);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Track(void *p) {
      delete ((::TA2Track*)p);
   }
   static void deleteArray_TA2Track(void *p) {
      delete [] ((::TA2Track*)p);
   }
   static void destruct_TA2Track(void *p) {
      typedef ::TA2Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Track

//______________________________________________________________________________
void TA2WCLayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2WCLayer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2WCLayer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2WCLayer::Class(),this);
   }
}

//______________________________________________________________________________
void TA2WCLayer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2WCLayer.
      TClass *R__cl = ::TA2WCLayer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNElement", &fNElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIstart", &fIstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIend", &fIend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxClust", &fMaxClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxClustSize", &fMaxClustSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNHits", &fNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNClust", &fNClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClust", &fClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLenClust", &fLenClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCGClust", &fCGClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdist", &fIdist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLayerHits", &fLayerHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPos", &fPos);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2WCLayer(void *p) {
      delete ((::TA2WCLayer*)p);
   }
   static void deleteArray_TA2WCLayer(void *p) {
      delete [] ((::TA2WCLayer*)p);
   }
   static void destruct_TA2WCLayer(void *p) {
      typedef ::TA2WCLayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2WCLayer

//______________________________________________________________________________
void TA2CylWire::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylWire.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylWire::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylWire::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylWire::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylWire.
      TClass *R__cl = ::TA2CylWire::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiCor[3]", fPhiCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiSpace", &fPhiSpace);
      TA2WCLayer::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylWire(void *p) {
      delete ((::TA2CylWire*)p);
   }
   static void deleteArray_TA2CylWire(void *p) {
      delete [] ((::TA2CylWire*)p);
   }
   static void destruct_TA2CylWire(void *p) {
      typedef ::TA2CylWire current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylWire

//______________________________________________________________________________
void TA2CylStrip::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2CylStrip.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2CylStrip::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2CylStrip::Class(),this);
   }
}

//______________________________________________________________________________
void TA2CylStrip::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2CylStrip.
      TClass *R__cl = ::TA2CylStrip::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTgWC", &fTgWC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ0", &fZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPitch", &fPitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEffLength", &fEffLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZCor[3]", fZCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiCor[3]", fPhiCor);
      TA2WCLayer::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2CylStrip(void *p) {
      delete ((::TA2CylStrip*)p);
   }
   static void deleteArray_TA2CylStrip(void *p) {
      delete [] ((::TA2CylStrip*)p);
   }
   static void destruct_TA2CylStrip(void *p) {
      typedef ::TA2CylStrip current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2CylStrip

//______________________________________________________________________________
void TA2DataServer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2DataServer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2DataServer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2DataServer::Class(),this);
   }
}

//______________________________________________________________________________
void TA2DataServer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2DataServer.
      TClass *R__cl = ::TA2DataServer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAcquRoot", &fAcquRoot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataOutFile", &fDataOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSource", &fDataSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataFormat", &fDataFormat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSourceBuff", &fSourceBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSortBuff", &fSortBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fServerThread", &fServerThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeaderBuff", &fHeaderBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileDir", &fFileDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvStart", &fEvStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvTempStart", &fEvTempStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvLength", &fEvLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvOffset", &fEvOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEvSearch", &fNEvSearch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvMaxDiff", &fEvMaxDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvMax", &fEvMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvStatus", &fEvStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutBuff", &fOutBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEndBuff", &fEndBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvTempBuff", &fEvTempBuff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDataSource", &fNDataSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDataBuffer", &fNDataBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeventError", &fNeventError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecLen", &fRecLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsStore", &fIsStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSortLock", &fIsSortLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsHeaderInit", &fIsHeaderInit);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2DataServer(void *p) {
      delete ((::TA2DataServer*)p);
   }
   static void deleteArray_TA2DataServer(void *p) {
      delete [] ((::TA2DataServer*)p);
   }
   static void destruct_TA2DataServer(void *p) {
      typedef ::TA2DataServer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2DataServer

//______________________________________________________________________________
void TA2DataSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2DataSource.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2DataSource::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2DataSource::Class(),this);
   }
}

//______________________________________________________________________________
void TA2DataSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2DataSource.
      TClass *R__cl = ::TA2DataSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSourceThread", &fSourceThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBuffer", &fBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartList", &fStartList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStopList", &fStopList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStop", &fStop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInRecLen", &fInRecLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInPath", &fInPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutPath", &fOutPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNfile", &fNfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrecord", &fNrecord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbyte", &fNbyte);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingSize", &fRingSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsStore", &fIsStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSwap", &fIsSwap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsProcess", &fIsProcess);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2DataSource(void *p) {
      delete ((::TA2DataSource*)p);
   }
   static void deleteArray_TA2DataSource(void *p) {
      delete [] ((::TA2DataSource*)p);
   }
   static void destruct_TA2DataSource(void *p) {
      typedef ::TA2DataSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2DataSource

//______________________________________________________________________________
void TA2DataFormat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2DataFormat.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2DataFormat::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2DataFormat::Class(),this);
   }
}

//______________________________________________________________________________
void TA2DataFormat::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2DataFormat.
      TClass *R__cl = ::TA2DataFormat::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIn", &fIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeader", &fHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartEvent", &fPartEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataFileName", &fDataFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNevent", &fNevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecLen", &fRecLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOnline", &fOnline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNadc", &fNadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNscaler", &fNscaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCoffset", &fADCoffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadyServer", &fReadyServer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadySort", &fReadySort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPartEventSize", &fPartEventSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartOffset", &fStartOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNsrc", &fNsrc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsHeader", &fIsHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSwap", &fIsSwap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsBoundary", &fIsBoundary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPartEvent", &fIsPartEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsErrorSort", &fIsErrorSort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventID", &fEventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventIndex", &fEventIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      TA2System::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2DataFormat(void *p) {
      delete ((::TA2DataFormat*)p);
   }
   static void deleteArray_TA2DataFormat(void *p) {
      delete [] ((::TA2DataFormat*)p);
   }
   static void destruct_TA2DataFormat(void *p) {
      typedef ::TA2DataFormat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2DataFormat

//______________________________________________________________________________
void TA2NetSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2NetSource.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2NetSource::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2NetSource::Class(),this);
   }
}

//______________________________________________________________________________
void TA2NetSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2NetSource.
      TClass *R__cl = ::TA2NetSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPacketLen", &fPacketLen);
      TA2DataSource::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2NetSource(void *p) {
      delete ((::TA2NetSource*)p);
   }
   static void deleteArray_TA2NetSource(void *p) {
      delete [] ((::TA2NetSource*)p);
   }
   static void destruct_TA2NetSource(void *p) {
      typedef ::TA2NetSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2NetSource

//______________________________________________________________________________
void TA2FileSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2FileSource.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2FileSource::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2FileSource::Class(),this);
   }
}

//______________________________________________________________________________
void TA2FileSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2FileSource.
      TClass *R__cl = ::TA2FileSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilename", &fFilename);
      TA2DataSource::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2FileSource(void *p) {
      delete ((::TA2FileSource*)p);
   }
   static void deleteArray_TA2FileSource(void *p) {
      delete [] ((::TA2FileSource*)p);
   }
   static void destruct_TA2FileSource(void *p) {
      typedef ::TA2FileSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2FileSource

//______________________________________________________________________________
void TA2LocalSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2LocalSource.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2LocalSource::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2LocalSource::Class(),this);
   }
}

//______________________________________________________________________________
void TA2LocalSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2LocalSource.
      TClass *R__cl = ::TA2LocalSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilename", &fFilename);
      TA2DataSource::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2LocalSource(void *p) {
      delete ((::TA2LocalSource*)p);
   }
   static void deleteArray_TA2LocalSource(void *p) {
      delete [] ((::TA2LocalSource*)p);
   }
   static void destruct_TA2LocalSource(void *p) {
      typedef ::TA2LocalSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2LocalSource

//______________________________________________________________________________
void TA2Mk1Format::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Mk1Format.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Mk1Format::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Mk1Format::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Mk1Format::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Mk1Format.
      TClass *R__cl = ::TA2Mk1Format::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExpInfo", &fExpInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fModInfo", &fModInfo);
      TA2DataFormat::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Mk1Format(void *p) {
      delete ((::TA2Mk1Format*)p);
   }
   static void deleteArray_TA2Mk1Format(void *p) {
      delete [] ((::TA2Mk1Format*)p);
   }
   static void destruct_TA2Mk1Format(void *p) {
      typedef ::TA2Mk1Format current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Mk1Format

//______________________________________________________________________________
void TA2Mk2Format::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2Mk2Format.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2Mk2Format::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2Mk2Format::Class(),this);
   }
}

//______________________________________________________________________________
void TA2Mk2Format::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2Mk2Format.
      TClass *R__cl = ::TA2Mk2Format::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExpInfo", &fExpInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fModInfo", &fModInfo);
      TA2DataFormat::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2Mk2Format(void *p) {
      delete ((::TA2Mk2Format*)p);
   }
   static void deleteArray_TA2Mk2Format(void *p) {
      delete [] ((::TA2Mk2Format*)p);
   }
   static void destruct_TA2Mk2Format(void *p) {
      typedef ::TA2Mk2Format current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2Mk2Format

//______________________________________________________________________________
void TA2TAPSFormat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPSFormat.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPSFormat::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPSFormat::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPSFormat::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPSFormat.
      TClass *R__cl = ::TA2TAPSFormat::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPartEvent", &fIsPartEvent);
      TA2DataFormat::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPSFormat(void *p) {
      delete ((::TA2TAPSFormat*)p);
   }
   static void deleteArray_TA2TAPSFormat(void *p) {
      delete [] ((::TA2TAPSFormat*)p);
   }
   static void destruct_TA2TAPSFormat(void *p) {
      typedef ::TA2TAPSFormat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPSFormat

//______________________________________________________________________________
void TA2TAPSMk2Format::Streamer(TBuffer &R__b)
{
   // Stream an object of class TA2TAPSMk2Format.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TA2TAPSMk2Format::Class(),this);
   } else {
      R__b.WriteClassBuffer(TA2TAPSMk2Format::Class(),this);
   }
}

//______________________________________________________________________________
void TA2TAPSMk2Format::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TA2TAPSMk2Format.
      TClass *R__cl = ::TA2TAPSMk2Format::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPartEvent", &fIsPartEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExpInfo", &fExpInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fModInfo", &fModInfo);
      TA2DataFormat::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TA2TAPSMk2Format(void *p) {
      delete ((::TA2TAPSMk2Format*)p);
   }
   static void deleteArray_TA2TAPSMk2Format(void *p) {
      delete [] ((::TA2TAPSMk2Format*)p);
   }
   static void destruct_TA2TAPSMk2Format(void *p) {
      typedef ::TA2TAPSMk2Format current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TA2TAPSMk2Format

/********************************************************
* /home/acqu/4v6/acqu/AcquRoot/src/AcquRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAcquRootDict();

extern "C" void G__set_cpp_environmentAcquRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2System.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2HistManager.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2DataManager.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Control.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TAcquRoot.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Analysis.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Physics.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericPhysics.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Apparatus.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericApparatus.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2TOFApparatus.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Tagger.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Detector.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericDetector.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2ClusterDetector.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2LongScint.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Ladder.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2GenericCluster.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2WireChamber.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2H.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Cut.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2MultiCut.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Track.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2WCLayer.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2CylWire.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2CylStrip.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2BitPattern.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2RateMonitor.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2ParticleID.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Particle.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2RingBuffer.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2DataServer.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2DataSource.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2NetSource.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2FileSource.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2LocalSource.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2DataFormat.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Mk1Format.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2Mk2Format.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2TAPSFormat.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/TA2TAPSMk2Format.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/HitD2A_t.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/LongBar_t.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/HitCluster_t.h");
  G__add_compiledheader("/home/acqu/4v6/acqu/AcquRoot/src/GenHitCluster_t.h");
  G__cpp_reset_tagtableAcquRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevAcquRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TA2System */
static int G__AcquRootDict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TA2System*) G__getstructoffset())->Map2Key((Char_t*) G__int(libp->para[0]), (Map_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TA2System*) G__getstructoffset())->Map2Key((Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2System*) G__getstructoffset())->Map2Key((Char_t*) G__int(libp->para[0]), (const Map_t**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->Map2String((Int_t) G__int(libp->para[0]), (Map_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->Map2String((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TA2System*) G__getstructoffset())->GetMapKey((Int_t) G__int(libp->para[0]), (Map_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TA2System*) G__getstructoffset())->GetMapKey((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->GetMapString((Int_t) G__int(libp->para[0]), (Map_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->GetMapString((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2System*) G__getstructoffset())->AddCmdList((Map_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TA2System*) G__getstructoffset())->FileConfig((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TA2System*) G__getstructoffset())->FileConfig();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TA2System*) G__getstructoffset())->CommandConfig((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TA2System*) G__getstructoffset())->CommandConfig();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2System*) G__getstructoffset())->ParseMisc((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2System*) G__getstructoffset())->SetConfig((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2System*) G__getstructoffset())->PostInit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6]), (const Char_t*) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->BuildName((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2System*) G__getstructoffset())->CheckName((Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2System*) G__getstructoffset())->GetInputFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2System*) G__getstructoffset())->GetLogFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 69, (long) ((TA2System*) G__getstructoffset())->GetLogStream());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2System*) G__getstructoffset())->SetLogStream((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TA2System*) G__getstructoffset())->SetLogFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TA2System*) G__getstructoffset())->SetLogFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2System*) G__getstructoffset())->IsInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2System*) G__getstructoffset())->IsError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2System::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2System::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2System::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2System::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2System*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2System::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2System::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2System::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_220_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2System::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2System G__TTA2System;
static int G__AcquRootDict_220_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2System*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2System*) (soff+(sizeof(TA2System)*i)))->~G__TTA2System();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2System*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2System*) (soff))->~G__TTA2System();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2DataFormat */
static int G__AcquRootDict_627_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->Initialise((void*) G__int(libp->para[0]), (TA2RingBuffer*) G__int(libp->para[1])
, (TA2RingBuffer*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->CheckHeader();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->InitForeign();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TA2DataFormat*) G__getstructoffset())->ConstructHeader((void*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TA2DataFormat*) G__getstructoffset())->ConstructHeader();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->MergeHeader((void*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->UpdateHeader((void*) G__int(libp->para[0]), (void*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->UpdateInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SwapHeader((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SendData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SendEOF();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SendTerminate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TA2DataFormat*) G__getstructoffset())->SetFileName((AcquExptInfo_t*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TA2DataFormat*) G__getstructoffset())->SetFileName((AcquExptInfo_t*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TA2DataFormat*) G__getstructoffset())->SetFileName((AcquExptInfo_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataFormat*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->HeaderSize((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetEventLength((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsHeadBuff((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsDataBuff((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsEndBuff((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsTermBuff((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SetHeader((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SetData((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SetTrailer((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SetTerminate((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2DataFormat*) G__getstructoffset())->GetBufferType((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetReadyServer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetReadySort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetADCoffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataFormat*) G__getstructoffset())->GetHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((TA2DataFormat*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((TA2DataFormat*) G__getstructoffset())->GetEventIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->SetEventIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2DataFormat*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2DataFormat*) G__getstructoffset())->GetStartOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetNsrc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetNScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetNADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetNEPICS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetNModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetModID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetModIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetModType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetModAmin((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetModNChan((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetModBits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataFormat*) G__getstructoffset())->GetErrorSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2DataFormat*) G__getstructoffset())->GetDataBuffHead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsSwap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsBoundary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsPartEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataFormat*) G__getstructoffset())->IsErrorSort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2DataFormat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataFormat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2DataFormat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2DataFormat::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataFormat*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataFormat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataFormat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataFormat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_627_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataFormat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2DataFormat G__TTA2DataFormat;
static int G__AcquRootDict_627_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2DataFormat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2DataFormat*) (soff+(sizeof(TA2DataFormat)*i)))->~G__TTA2DataFormat();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2DataFormat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2DataFormat*) (soff))->~G__TTA2DataFormat();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Mk2Format */
static int G__AcquRootDict_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Mk2Format* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Mk2Format(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2Mk2Format(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Mk2Format((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2Mk2Format((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Mk2Format::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Mk2Format::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Mk2Format::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Mk2Format::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Mk2Format*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Mk2Format::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Mk2Format::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Mk2Format::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_633_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Mk2Format::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_633_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Mk2Format* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Mk2Format(*(TA2Mk2Format*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Mk2Format G__TTA2Mk2Format;
static int G__AcquRootDict_633_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Mk2Format*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Mk2Format*) (soff+(sizeof(TA2Mk2Format)*i)))->~G__TTA2Mk2Format();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Mk2Format*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Mk2Format*) (soff))->~G__TTA2Mk2Format();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Analysis */
static int G__AcquRootDict_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Analysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Analysis((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TA2Analysis((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->MProcess();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->ParseADC((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TA2Analysis*) G__getstructoffset())->Scalers((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TA2Analysis*) G__getstructoffset())->Scalers();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->ZeroSumScalers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->RawDecode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->InitSaveTree((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->ChangeTreeFile((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->InitTreeFileName((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Analysis*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Analysis*) G__getstructoffset())->GetFlash((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Analysis*) G__getstructoffset())->GetMulti());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Analysis*) G__getstructoffset())->GetMulti((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Analysis*) G__getstructoffset())->GetPhysics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Analysis*) G__getstructoffset())->IsPhysics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Analysis*) G__getstructoffset())->GetNEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Analysis*) G__getstructoffset())->GetNEvAnalysed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Analysis*) G__getstructoffset())->GetNOnlineEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Analysis*) G__getstructoffset())->GetNDAQEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Analysis*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->SetParticleID((TA2ParticleID*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Analysis*) G__getstructoffset())->IsProcessComplete());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Analysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Analysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Analysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Analysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Analysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Analysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Analysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Analysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_635_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Analysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_635_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Analysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Analysis(*(TA2Analysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Analysis G__TTA2Analysis;
static int G__AcquRootDict_635_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Analysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Analysis*) (soff+(sizeof(TA2Analysis)*i)))->~G__TTA2Analysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Analysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Analysis*) (soff))->~G__TTA2Analysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2DataServer */
static int G__AcquRootDict_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2DataServer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2DataServer((const Char_t*) G__int(libp->para[0]), (TAcquRoot*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2DataServer((const Char_t*) G__int(libp->para[0]), (TAcquRoot*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->Start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->StartSources();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->MultiProcess();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataServer*) G__getstructoffset())->ProcessHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->GetEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->CompareEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TA2DataServer*) G__getstructoffset())->MergeBuffers((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TA2DataServer*) G__getstructoffset())->MergeBuffers();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->FlushBuffers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetDataSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetDataSource((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetDataFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetDataFormat((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetSourceBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetSourceBuff((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataServer*) G__getstructoffset())->GetSortBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataServer*) G__getstructoffset())->GetHeaderBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataServer*) G__getstructoffset())->GetFileDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataServer*) G__getstructoffset())->GetEvStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataServer*) G__getstructoffset())->GetEvTempStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2DataServer*) G__getstructoffset())->GetEvLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2DataServer*) G__getstructoffset())->GetEvOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2DataServer*) G__getstructoffset())->GetNEvSearch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2DataServer*) G__getstructoffset())->GetEvStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2DataServer*) G__getstructoffset())->GetOutBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataServer*) G__getstructoffset())->GetEndBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataServer*) G__getstructoffset())->GetEvTempBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataServer*) G__getstructoffset())->GetNDataSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataServer*) G__getstructoffset())->GetNDataBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataServer*) G__getstructoffset())->GetNeventError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataServer*) G__getstructoffset())->GetRecLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->SetIsStore((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataServer*) G__getstructoffset())->IsStore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataServer*) G__getstructoffset())->IsSortLock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataServer*) G__getstructoffset())->IsHeaderInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2DataServer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataServer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2DataServer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2DataServer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataServer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataServer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataServer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataServer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_636_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataServer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_636_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2DataServer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2DataServer(*(TA2DataServer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2DataServer G__TTA2DataServer;
static int G__AcquRootDict_636_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2DataServer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2DataServer*) (soff+(sizeof(TA2DataServer)*i)))->~G__TTA2DataServer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2DataServer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2DataServer*) (soff))->~G__TTA2DataServer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAcquRoot */
static int G__AcquRootDict_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAcquRoot* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAcquRoot((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TAcquRoot((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAcquRoot((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TAcquRoot((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SaveTreeFile((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->LoadHbookFile((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->Start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->DataLoop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->OfflineLoop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->LinkDataServer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->LinkTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->LinkADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->UpdateTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetADC((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetScaler((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TAcquRoot*) G__getstructoffset())->SetEventSize((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetAnalysis((TA2Analysis*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetDataServer((TA2DataServer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->GetErrorModule((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetDataServer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetAnalysisType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetAnalysisSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetDataServerSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetLocalDAQSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TAcquRoot*) G__getstructoffset())->GetEventSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNbranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TAcquRoot*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TAcquRoot*) G__getstructoffset())->GetHardwareList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetHardwareError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetMaxADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetMaxScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetADCError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetHardError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetCurrEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TAcquRoot*) G__getstructoffset())->GetADCdefined());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((TAcquRoot*) G__getstructoffset())->GetADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TAcquRoot*) G__getstructoffset())->GetScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerClr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNScalerBlock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TAcquRoot*) G__getstructoffset())->GetScBlockLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerBlock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerHist((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerHist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNScalerEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetTotScalerEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TAcquRoot*) G__getstructoffset())->GetNEventScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetMulti());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetMulti((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TAcquRoot*) G__getstructoffset())->GetHeaderBuff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetTreeFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetTreeFileList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetTreeFileList((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNTreeFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetTreeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetTreeDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetBatchDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAcquRoot*) G__getstructoffset())->GetBranch((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetBranchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetBranchName((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetRecLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNDataBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetProcessType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TAcquRoot*) G__getstructoffset())->GetEpicsBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TAcquRoot*) G__getstructoffset())->GetEpicsIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TAcquRoot*) G__getstructoffset())->GetNEpics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetIsOnline();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetRecLen((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->SetMulti((MultiADC_t**) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsSortBusy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsScalerRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsEpicsRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsOnline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TAcquRoot*) G__getstructoffset())->GetScalerRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsFinished());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsBatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TAcquRoot*) G__getstructoffset())->IsLocalDAQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->PrintTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAcquRoot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAcquRoot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAcquRoot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAcquRoot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAcquRoot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAcquRoot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAcquRoot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAcquRoot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_637_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAcquRoot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_637_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAcquRoot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAcquRoot(*(TAcquRoot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAcquRoot G__TTAcquRoot;
static int G__AcquRootDict_637_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAcquRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAcquRoot*) (soff+(sizeof(TAcquRoot)*i)))->~G__TTAcquRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAcquRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAcquRoot*) (soff))->~G__TTAcquRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Cut */
static int G__AcquRootDict_639_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Cut*) G__getstructoffset())->Test());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Cut*) G__getstructoffset())->Cleanup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Cut*) G__getstructoffset())->NOT((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Cut*) G__getstructoffset())->IsTrue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Cut*) G__getstructoffset())->GetLink());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Cut*) G__getstructoffset())->GetOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Cut*) G__getstructoffset())->GetOpt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Cut*) G__getstructoffset())->GetNOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Cut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Cut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Cut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Cut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Cut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Cut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Cut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Cut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_639_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Cut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Cut G__TTA2Cut;
static int G__AcquRootDict_639_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Cut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Cut*) (soff+(sizeof(TA2Cut)*i)))->~G__TTA2Cut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Cut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Cut*) (soff))->~G__TTA2Cut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AcquRootDict_639_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Cut* dest = (TA2Cut*) G__getstructoffset();
   *dest = *(TA2Cut*) libp->para[0].ref;
   const TA2Cut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2MultiCut */
static int G__AcquRootDict_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MultiCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2MultiCut((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2MultiCut((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2MultiCut((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TA2MultiCut((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MultiCut*) G__getstructoffset())->AddCut((TA2Cut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2MultiCut*) G__getstructoffset())->FindCut((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MultiCut*) G__getstructoffset())->Evaluate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2MultiCut*) G__getstructoffset())->GetCutList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2MultiCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MultiCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2MultiCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2MultiCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2MultiCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MultiCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MultiCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2MultiCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_652_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2MultiCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_652_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2MultiCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2MultiCut(*(TA2MultiCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2MultiCut G__TTA2MultiCut;
static int G__AcquRootDict_652_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2MultiCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2MultiCut*) (soff+(sizeof(TA2MultiCut)*i)))->~G__TTA2MultiCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2MultiCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2MultiCut*) (soff))->~G__TTA2MultiCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AcquRootDict_652_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2MultiCut* dest = (TA2MultiCut*) G__getstructoffset();
   *dest = *(TA2MultiCut*) libp->para[0].ref;
   const TA2MultiCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2BitPattern */
static int G__AcquRootDict_653_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2BitPattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2BitPattern((char*) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2BitPattern((char*) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2BitPattern*) G__getstructoffset())->Decode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2BitPattern*) G__getstructoffset())->GetPatternName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2BitPattern*) G__getstructoffset())->GetPatternName((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2BitPattern*) G__getstructoffset())->GetNPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetADCList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetADCList((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetPatternList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetPatternList((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetHits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2BitPattern*) G__getstructoffset())->GetHits((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetNADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2BitPattern*) G__getstructoffset())->GetNADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2BitPattern*) G__getstructoffset())->GetNelement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2BitPattern*) G__getstructoffset())->GetNelement((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2BitPattern*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2BitPattern*) G__getstructoffset())->GetNHits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2BitPattern::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2BitPattern::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2BitPattern::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2BitPattern::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2BitPattern*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2BitPattern::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2BitPattern::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2BitPattern::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_653_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2BitPattern::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_653_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2BitPattern* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2BitPattern(*(TA2BitPattern*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2BitPattern G__TTA2BitPattern;
static int G__AcquRootDict_653_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2BitPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2BitPattern*) (soff+(sizeof(TA2BitPattern)*i)))->~G__TTA2BitPattern();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2BitPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2BitPattern*) (soff))->~G__TTA2BitPattern();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2RateMonitor */
static int G__AcquRootDict_654_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2RateMonitor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2RateMonitor(
(char*) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1])
, (UInt_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Bool_t*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TA2RateMonitor(
(char*) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1])
, (UInt_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Bool_t*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2RateMonitor*) G__getstructoffset())->Decode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2RateMonitor*) G__getstructoffset())->GetRateName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2RateMonitor*) G__getstructoffset())->GetRateName((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2RateMonitor*) G__getstructoffset())->GetNRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2RateMonitor*) G__getstructoffset())->GetScalerIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2RateMonitor*) G__getstructoffset())->GetScalerIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2RateMonitor*) G__getstructoffset())->GetClockIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2RateMonitor*) G__getstructoffset())->GetClockIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2RateMonitor*) G__getstructoffset())->GetFrequency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2RateMonitor*) G__getstructoffset())->GetFrequency((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2RateMonitor*) G__getstructoffset())->GetNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2RateMonitor*) G__getstructoffset())->GetNorm((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2RateMonitor*) G__getstructoffset())->GetRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2RateMonitor*) G__getstructoffset())->GetRate((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2RateMonitor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2RateMonitor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2RateMonitor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2RateMonitor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2RateMonitor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2RateMonitor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2RateMonitor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2RateMonitor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_654_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2RateMonitor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_654_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2RateMonitor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2RateMonitor(*(TA2RateMonitor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2RateMonitor G__TTA2RateMonitor;
static int G__AcquRootDict_654_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2RateMonitor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2RateMonitor*) (soff+(sizeof(TA2RateMonitor)*i)))->~G__TTA2RateMonitor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2RateMonitor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2RateMonitor*) (soff))->~G__TTA2RateMonitor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2DataManager */
static int G__AcquRootDict_656_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->CreateChild((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->LoadVariable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->ParseCut((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->ResetCut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->PostInitialise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TA2DataManager*) G__getstructoffset())->AddChild((TA2DataManager*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TA2DataManager*) G__getstructoffset())->AddChild((TA2DataManager*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TA2DataManager*) G__getstructoffset())->AddChild((char*) G__int(libp->para[0]), (TA2DataManager**) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TA2DataManager*) G__getstructoffset())->AddChild((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->Decode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->DecodeSaved();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->Reconstruct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->Cleanup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->UpdatePeriod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->Periodic();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->Epicsodic();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->ParsePeriod((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->ParseEpics((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->ParseEndOfFile((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->ParseFinish((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->SetEndOfFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->SetFinish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->EndFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->MacroExe((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->SetSaveEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TA2DataManager*) G__getstructoffset())->InitSaveTree((Char_t**) G__int(libp->para[0]), (void**) G__int(libp->para[1])
, (Char_t*) G__int(libp->para[2]), (Char_t**) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TA2DataManager*) G__getstructoffset())->InitSaveTree((Char_t**) G__int(libp->para[0]), (void**) G__int(libp->para[1])
, (Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TA2DataManager*) G__getstructoffset())->InitSaveTree((Char_t**) G__int(libp->para[0]), (void**) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->InitSaveTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->SaveEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->SaveEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->CloseEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetChildType((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetChildType((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetChild((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetChild((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetGrandChild((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetGrandChild((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetChildren());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetDataCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetHistCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetMiscCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((TA2DataManager*) G__getstructoffset())->GetADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2DataManager*) G__getstructoffset())->GetADCdefined());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2DataManager*) G__getstructoffset())->GetScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2DataManager*) G__getstructoffset())->GetScalerSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataManager*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TA2DataManager*) G__getstructoffset())->GetEvent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataManager*) G__getstructoffset())->GetMaxADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataManager*) G__getstructoffset())->GetMaxScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2DataManager*) G__getstructoffset())->GetScalerIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2DataManager*) G__getstructoffset())->GetScalerCurr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2DataManager*) G__getstructoffset())->GetScalerAcc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataManager*) G__getstructoffset())->GetScalerError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetMulti((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetMulti());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetRateMonitor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetBitPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2DataManager*) G__getstructoffset())->GetPatternHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2DataManager*) G__getstructoffset())->GetNPatternHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetTreeFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataManager*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2DataManager*) G__getstructoffset())->GetNPeriod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2DataManager*) G__getstructoffset())->GetMaxPeriod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataManager*) G__getstructoffset())->GetPeriodCmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataManager*) G__getstructoffset())->GetEpicsCmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataManager*) G__getstructoffset())->GetEndOfFileCmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TA2DataManager*) G__getstructoffset())->GetFinishCmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsRawDecode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsDecode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsReconstruct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsRawDecodeOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsDecodeOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsReconstructOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsBitPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsRateMonitor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsEndOfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsFinish());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataManager*) G__getstructoffset())->IsSaveEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2DataManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2DataManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2DataManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_656_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2DataManager G__TTA2DataManager;
static int G__AcquRootDict_656_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2DataManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2DataManager*) (soff+(sizeof(TA2DataManager)*i)))->~G__TTA2DataManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2DataManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2DataManager*) (soff))->~G__TTA2DataManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2H */
static int G__AcquRootDict_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->Fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->SetCut((TA2Cut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2H*) G__getstructoffset())->GetCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->SetWeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->SetWeight((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2H*) G__getstructoffset())->GetWeightVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2H*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2H*) G__getstructoffset())->IsWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2H::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2H::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2H::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2H::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TA2H*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2H*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2H::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2H::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2H::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_670_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2H::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2H G__TTA2H;
static int G__AcquRootDict_670_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2H*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2H*) (soff+(sizeof(TA2H)*i)))->~G__TTA2H();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2H*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2H*) (soff))->~G__TTA2H();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AcquRootDict_670_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2H* dest = (TA2H*) G__getstructoffset();
   *dest = *(TA2H*) libp->para[0].ref;
   const TA2H& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2HistManager */
static int G__AcquRootDict_687_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->ParseDisplay((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->ReadChanLim((Int_t) G__int(libp->para[0]), (Double_t**) G__int(libp->para[1])
, (Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->FillHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->FillAllHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TA2HistManager*) G__getstructoffset())->Hist((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]), (Axis_t) G__double(libp->para[3])
, (Axis_t) G__double(libp->para[4]), (Axis_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TA2HistManager*) G__getstructoffset())->Hist((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]), (Axis_t) G__double(libp->para[3])
, (Axis_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TA2HistManager*) G__getstructoffset())->Hist((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]), (Axis_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TA2HistManager*) G__getstructoffset())->Hist((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TA2HistManager*) G__getstructoffset())->Hist((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TA2HistManager*) G__getstructoffset())->Hist((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->ZeroHist((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->ZeroAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->SaveHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->ListHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TA2HistManager*) G__getstructoffset())->H2D((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]), (Axis_t) G__double(libp->para[3])
, (Axis_t) G__double(libp->para[4]), (Axis_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TA2HistManager*) G__getstructoffset())->H2D((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]), (Axis_t) G__double(libp->para[3])
, (Axis_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TA2HistManager*) G__getstructoffset())->H2D((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]), (Axis_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TA2HistManager*) G__getstructoffset())->H2D((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Axis_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TA2HistManager*) G__getstructoffset())->H2D((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TA2HistManager*) G__getstructoffset())->H2D((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2HistManager*) G__getstructoffset())->IsDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2HistManager*) G__getstructoffset())->GetN1Dhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2HistManager*) G__getstructoffset())->GetN2Dhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2HistManager*) G__getstructoffset())->GetN3Dhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2HistManager*) G__getstructoffset())->Get1Dhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2HistManager*) G__getstructoffset())->Get2Dhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2HistManager*) G__getstructoffset())->Get3Dhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2HistManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2HistManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2HistManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2HistManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2HistManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2HistManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2HistManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2HistManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_687_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2HistManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2HistManager G__TTA2HistManager;
static int G__AcquRootDict_687_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2HistManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2HistManager*) (soff+(sizeof(TA2HistManager)*i)))->~G__TTA2HistManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2HistManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2HistManager*) (soff))->~G__TTA2HistManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Control */
static int G__AcquRootDict_694_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Control* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (void*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2Control(
(const char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Control*) G__getstructoffset())->PrintLogo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Control*) G__getstructoffset())->GetAnalyser((Map_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Control*) G__getstructoffset())->CreateAnalyser();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Control*) G__getstructoffset())->StartAnalyser();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Control::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Control::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Control::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Control::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Control*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Control::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Control::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Control::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_694_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Control::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Control G__TTA2Control;
static int G__AcquRootDict_694_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Control*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Control*) (soff+(sizeof(TA2Control)*i)))->~G__TTA2Control();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Control*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Control*) (soff))->~G__TTA2Control();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Detector */
static int G__AcquRootDict_701_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->SaveDecoded();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->ReadDecoded();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->SetupArrays((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->DeleteArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->ParseShift((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->ApplyShift((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->ParseMultihit((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Detector*) G__getstructoffset())->GetElement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Detector*) G__getstructoffset())->GetElement((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetEnergyOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Detector*) G__getstructoffset())->GetEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetTimeM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetTimeOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetTimeORM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Detector*) G__getstructoffset())->GetTime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Detector*) G__getstructoffset())->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Detector*) G__getstructoffset())->GetPosition((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2Detector*) G__getstructoffset())->GetMeanPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Detector*) G__getstructoffset())->GetShiftOp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Detector*) G__getstructoffset())->GetShiftValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Detector*) G__getstructoffset())->GetNShiftOp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Detector*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Detector*) G__getstructoffset())->GetHits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Detector*) G__getstructoffset())->GetHitsM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Detector*) G__getstructoffset())->GetRawTimeHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Detector*) G__getstructoffset())->GetRawEnergyHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Detector*) G__getstructoffset())->GetTotalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Detector*) G__getstructoffset())->GetEnergyScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Detector*) G__getstructoffset())->GetTimeOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNhitsM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNADChits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNTDChits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNMultihit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNelement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetNelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Detector*) G__getstructoffset())->GetMaxHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Detector*) G__getstructoffset())->IsEcalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Detector*) G__getstructoffset())->IsScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Detector*) G__getstructoffset())->IsEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Detector*) G__getstructoffset())->IsTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Detector*) G__getstructoffset())->IsPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Detector*) G__getstructoffset())->IsRawHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Detector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Detector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Detector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Detector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Detector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Detector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Detector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Detector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_701_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Detector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Detector G__TTA2Detector;
static int G__AcquRootDict_701_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Detector*) (soff+(sizeof(TA2Detector)*i)))->~G__TTA2Detector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Detector*) (soff))->~G__TTA2Detector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2ParticleID */
static int G__AcquRootDict_748_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2ParticleID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2ParticleID((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TA2ParticleID((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2ParticleID*) G__getstructoffset())->GetMaxType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2ParticleID*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2ParticleID*) G__getstructoffset())->GetPDG((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ParticleID*) G__getstructoffset())->Mass((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ParticleID*) G__getstructoffset())->Charge((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2ParticleID*) G__getstructoffset())->GetPDGtype());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2ParticleID*) G__getstructoffset())->GetPDGtype((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ParticleID*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ParticleID*) G__getstructoffset())->GetMass((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ParticleID*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ParticleID*) G__getstructoffset())->GetCharge((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParticleID*) G__getstructoffset())->SetP4((TLorentzVector*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TVector3*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParticleID*) G__getstructoffset())->SetP4tof((TLorentzVector*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TVector3*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParticleID*) G__getstructoffset())->SetMassP4((TLorentzVector*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ParticleID*) G__getstructoffset())->GetMassMeV((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2ParticleID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ParticleID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2ParticleID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2ParticleID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ParticleID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ParticleID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ParticleID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ParticleID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_748_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ParticleID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_748_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2ParticleID* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2ParticleID(*(TA2ParticleID*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2ParticleID G__TTA2ParticleID;
static int G__AcquRootDict_748_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2ParticleID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2ParticleID*) (soff+(sizeof(TA2ParticleID)*i)))->~G__TTA2ParticleID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2ParticleID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2ParticleID*) (soff))->~G__TTA2ParticleID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Particle */
static int G__AcquRootDict_749_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Particle[n];
     } else {
       p = new((void*) gvp) TA2Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Particle;
     } else {
       p = new((void*) gvp) TA2Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Particle((TDatabasePDG*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TA2Particle((TDatabasePDG*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TA2Particle*) G__getstructoffset())->GetP4();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Particle*) G__getstructoffset())->GetP4A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2Particle*) G__getstructoffset())->GetP3();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2Particle*) G__getstructoffset())->GetVect();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2Particle*) G__getstructoffset())->GetDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetKinetic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPhiDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetThetaDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetLinDegree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetCircDegree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPSAShort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetPSALong());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetVetoEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetVetoTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetSigmaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetSigmaPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetSigmaTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetSigmaPhiDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetSigmaThetaDg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetSigmaTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngle(*((TA2Particle*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngle((TA2Particle*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngle(*((TLorentzVector*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngle((TLorentzVector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngle(*((TVector3*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngle((TVector3*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngleDg(*((TA2Particle*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngleDg((TA2Particle*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngleDg(*((TLorentzVector*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngleDg((TLorentzVector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngleDg(*((TVector3*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Particle*) G__getstructoffset())->GetAngleDg((TVector3*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetVetoIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetCentralIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetLinState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetCircState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetSecondID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetApparati());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Particle*) G__getstructoffset())->GetDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Particle*) G__getstructoffset())->HasApparatus((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Particle*) G__getstructoffset())->HasApparatusA((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Particle*) G__getstructoffset())->HasDetector((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Particle*) G__getstructoffset())->HasDetectorA((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Particle*) G__getstructoffset())->IsUnclear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetVetoIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetCentralIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetClusterSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetLinState((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetCircState((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetLinDegree((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetCircDegree((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPSAShort((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetVetoEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetVetoTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSigmaE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSigmaPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSigmaTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSigmaPhiDg((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSigmaThetaDg((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSigmaTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetWindow((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetApparatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetApparatusA((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetDetector((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetDetectorA((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetUnclear((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP4(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP4((TLorentzVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP4((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP4((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TVector3*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetParticleID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetParticleIDA((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetSecondID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetKinetic((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetTotal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetMomentum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetDirection(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetDirection((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP3(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP3((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetM((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetT((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetP((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPhiDg((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetThetaDg((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->SetPDG((TDatabasePDG*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add(*((TA2Particle*) G__int(libp->para[0])));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add((TA2Particle*) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add(*((TA2Particle*) G__int(libp->para[0])), *((TA2Particle*) G__int(libp->para[1])));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add((TA2Particle*) G__int(libp->para[0]), (TA2Particle*) G__int(libp->para[1]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add(*((TA2Particle*) G__int(libp->para[0])), (TA2Particle*) G__int(libp->para[1]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add((TA2Particle*) G__int(libp->para[0]), *((TA2Particle*) G__int(libp->para[1])));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Particle*) G__getstructoffset())->Add((TA2Particle*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Particle*) G__getstructoffset())->FindCluster((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Particle*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Particle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Particle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Particle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Particle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Particle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Particle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Particle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Particle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_749_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Particle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_749_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Particle(*(TA2Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Particle G__TTA2Particle;
static int G__AcquRootDict_749_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Particle*) (soff+(sizeof(TA2Particle)*i)))->~G__TTA2Particle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Particle*) (soff))->~G__TTA2Particle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AcquRootDict_749_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Particle* dest = (TA2Particle*) G__getstructoffset();
   *dest = *(TA2Particle*) libp->para[0].ref;
   const TA2Particle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Apparatus */
static int G__AcquRootDict_750_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Apparatus*) G__getstructoffset())->DeleteArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Apparatus*) G__getstructoffset())->SortParticleIDCuts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Apparatus*) G__getstructoffset())->GetP4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Apparatus*) G__getstructoffset())->GetParticleInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TA2Apparatus*) G__getstructoffset())->GetP4tot();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Apparatus*) G__getstructoffset())->GetPGDtype());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Apparatus*) G__getstructoffset())->GetPDG_ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Apparatus*) G__getstructoffset())->GetMtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Apparatus*) G__getstructoffset())->GetMinv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Apparatus*) G__getstructoffset())->GetEtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetMaxParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetNparticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Apparatus*) G__getstructoffset())->GetPCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Apparatus*) G__getstructoffset())->GetPCut((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetNCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetNSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Apparatus*) G__getstructoffset())->GetPCutStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetPCutStart((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Apparatus*) G__getstructoffset())->GetNSectorCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetNSectorCut((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Apparatus*) G__getstructoffset())->GetCutOpt((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetCutSectorIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Apparatus*) G__getstructoffset())->GetCutPDGIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Apparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Apparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Apparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Apparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Apparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Apparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Apparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Apparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_750_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Apparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Apparatus G__TTA2Apparatus;
static int G__AcquRootDict_750_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Apparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Apparatus*) (soff+(sizeof(TA2Apparatus)*i)))->~G__TTA2Apparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Apparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Apparatus*) (soff))->~G__TTA2Apparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Physics */
static int G__AcquRootDict_751_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Physics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Physics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Physics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Physics*) G__getstructoffset())->GetP4miss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Physics*) G__getstructoffset())->GetP4target());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2Physics*) G__getstructoffset())->GetTargetPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetMmiss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetPmiss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetPtheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Physics*) G__getstructoffset())->GetPphi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Physics*) G__getstructoffset())->GetNtarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Physics*) G__getstructoffset())->GetNperm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Physics*) G__getstructoffset())->GetNpermutation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Physics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Physics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Physics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Physics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Physics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Physics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Physics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Physics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_751_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Physics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_751_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Physics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Physics(*(TA2Physics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Physics G__TTA2Physics;
static int G__AcquRootDict_751_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Physics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Physics*) (soff+(sizeof(TA2Physics)*i)))->~G__TTA2Physics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Physics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Physics*) (soff))->~G__TTA2Physics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2GenericPhysics */
static int G__AcquRootDict_752_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2GenericPhysics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2GenericPhysics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2GenericPhysics((const char*) G__int(libp->para[0]), (TA2Analysis*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericPhysics*) G__getstructoffset())->MarkUndefined((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericPhysics*) G__getstructoffset())->MarkEndBuffer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2GenericPhysics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericPhysics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2GenericPhysics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2GenericPhysics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericPhysics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericPhysics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericPhysics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericPhysics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_752_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericPhysics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_752_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2GenericPhysics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2GenericPhysics(*(TA2GenericPhysics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2GenericPhysics G__TTA2GenericPhysics;
static int G__AcquRootDict_752_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2GenericPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2GenericPhysics*) (soff+(sizeof(TA2GenericPhysics)*i)))->~G__TTA2GenericPhysics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2GenericPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2GenericPhysics*) (soff))->~G__TTA2GenericPhysics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2GenericApparatus */
static int G__AcquRootDict_753_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2GenericApparatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2GenericApparatus((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2GenericApparatus((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2GenericApparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2GenericApparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2GenericApparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericApparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericApparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericApparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_753_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericApparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_753_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2GenericApparatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2GenericApparatus(*(TA2GenericApparatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2GenericApparatus G__TTA2GenericApparatus;
static int G__AcquRootDict_753_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2GenericApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2GenericApparatus*) (soff+(sizeof(TA2GenericApparatus)*i)))->~G__TTA2GenericApparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2GenericApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2GenericApparatus*) (soff))->~G__TTA2GenericApparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2GenericDetector */
static int G__AcquRootDict_754_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2GenericDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2GenericDetector((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2GenericDetector((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2GenericDetector*) G__getstructoffset())->GetBranchIndex((Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2GenericDetector*) G__getstructoffset())->GetVertex();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2GenericDetector*) G__getstructoffset())->GetHitPos((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericDetector*) G__getstructoffset())->GetXMC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericDetector*) G__getstructoffset())->GetYMC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericDetector*) G__getstructoffset())->GetZMC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2GenericDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2GenericDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2GenericDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_754_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_754_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2GenericDetector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2GenericDetector(*(TA2GenericDetector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2GenericDetector G__TTA2GenericDetector;
static int G__AcquRootDict_754_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2GenericDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2GenericDetector*) (soff+(sizeof(TA2GenericDetector)*i)))->~G__TTA2GenericDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2GenericDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2GenericDetector*) (soff))->~G__TTA2GenericDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2LongScint */
static int G__AcquRootDict_755_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2LongScint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2LongScint((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2LongScint((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2LongScint*) G__getstructoffset())->DecodeBar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2LongScint*) G__getstructoffset())->TimeCorrect((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2LongScint*) G__getstructoffset())->SmearMCHit((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2LongScint*) G__getstructoffset())->GetBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2LongScint*) G__getstructoffset())->GetBar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetMeanEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2LongScint*) G__getstructoffset())->GetMeanEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetMeanEnergyOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetMeanTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2LongScint*) G__getstructoffset())->GetMeanTime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetMeanTimeOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetTimeDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2LongScint*) G__getstructoffset())->GetTimeDiff((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetTimeDiffOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetThetaOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetPhiOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetFlightOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2LongScint*) G__getstructoffset())->GetFlight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2LongScint*) G__getstructoffset())->GetTheta((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2LongScint*) G__getstructoffset())->GetPhi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2LongScint*) G__getstructoffset())->GetFlight((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2LongScint*) G__getstructoffset())->GetBarPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TA2LongScint*) G__getstructoffset())->GetBarPos((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2LongScint*) G__getstructoffset())->GetBarHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2LongScint*) G__getstructoffset())->GetNBarHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2LongScint*) G__getstructoffset())->GetNBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2LongScint*) G__getstructoffset())->GetNbar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2LongScint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2LongScint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2LongScint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2LongScint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2LongScint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2LongScint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2LongScint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2LongScint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_755_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2LongScint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_755_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2LongScint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2LongScint(*(TA2LongScint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2LongScint G__TTA2LongScint;
static int G__AcquRootDict_755_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2LongScint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2LongScint*) (soff+(sizeof(TA2LongScint)*i)))->~G__TTA2LongScint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2LongScint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2LongScint*) (soff))->~G__TTA2LongScint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2GenericCluster */
static int G__AcquRootDict_757_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2GenericCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2GenericCluster((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2GenericCluster((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericCluster*) G__getstructoffset())->DecodeCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericCluster*) G__getstructoffset())->DeleteClusterArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericCluster*) G__getstructoffset())->SplitSearch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCluster((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClustHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClustHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TA2GenericCluster*) G__getstructoffset())->GetIsSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TA2GenericCluster*) G__getstructoffset())->GetIsSplit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2GenericCluster*) G__getstructoffset())->GetTempHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2GenericCluster*) G__getstructoffset())->GetNCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClustSizeFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2GenericCluster*) G__getstructoffset())->GetNSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2GenericCluster*) G__getstructoffset())->GetNSplitMerged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2GenericCluster*) G__getstructoffset())->GetMaxCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2GenericCluster*) G__getstructoffset())->GetNClustHitOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClEnergyOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClTimeOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClCentFracOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetClRadiusOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCldTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCldPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCldX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCldY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetCldZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetXmc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetYmc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetZmc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetClEthresh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetEthresh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetEthreshSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetMaxThetaSplitOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetMinPosDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetMaxPosDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2GenericCluster*) G__getstructoffset())->GetSplitAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2GenericCluster*) G__getstructoffset())->GetEWgt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2GenericCluster*) G__getstructoffset())->GetLEWgt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2GenericCluster*) G__getstructoffset())->GetISplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2GenericCluster*) G__getstructoffset())->GetIJSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2GenericCluster*) G__getstructoffset())->GetMaxSplitPerm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2GenericCluster*) G__getstructoffset())->IsIterate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2GenericCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2GenericCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2GenericCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2GenericCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2GenericCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_757_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2GenericCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_757_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2GenericCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2GenericCluster(*(TA2GenericCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2GenericCluster G__TTA2GenericCluster;
static int G__AcquRootDict_757_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2GenericCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2GenericCluster*) (soff+(sizeof(TA2GenericCluster)*i)))->~G__TTA2GenericCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2GenericCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2GenericCluster*) (soff))->~G__TTA2GenericCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Ladder */
static int G__AcquRootDict_759_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Ladder* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Ladder((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Ladder((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Ladder*) G__getstructoffset())->DecodeDoubles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Ladder*) G__getstructoffset())->DecodeMicro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Ladder*) G__getstructoffset())->DecodePrRand();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->Fence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Ladder*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2Ladder*) G__getstructoffset())->GetTrigg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2Ladder*) G__getstructoffset())->GetDoubles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2Ladder*) G__getstructoffset())->GetHitsAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2Ladder*) G__getstructoffset())->GetWindows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Ladder*) G__getstructoffset())->GetHitsRand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Ladder*) G__getstructoffset())->GetHitsPrompt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Ladder*) G__getstructoffset())->GetMuHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetECalibration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetEelec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetEelecOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetMeanEelecOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetEOverlap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetRandMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetRandMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetMeanTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetMeanTimeOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetMeanEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetMeanEnergyOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetDiffTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Ladder*) G__getstructoffset())->GetDiffTimeOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Ladder*) G__getstructoffset())->GetTimingRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Ladder*) G__getstructoffset())->GetPromptRand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Ladder*) G__getstructoffset())->GetPromptMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Ladder*) G__getstructoffset())->GetPromptMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNDoubles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNThits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNtrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNtrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNRandWindows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNhitsPrompt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNhitsRand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetFence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNMuHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2Ladder*) G__getstructoffset())->GetNMuElem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Ladder*) G__getstructoffset())->IsOverlap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Ladder*) G__getstructoffset())->IsTimeWindows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Ladder*) G__getstructoffset())->IsFence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Ladder*) G__getstructoffset())->IsMicro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Ladder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Ladder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Ladder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Ladder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Ladder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Ladder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Ladder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Ladder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_759_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Ladder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_759_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Ladder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Ladder(*(TA2Ladder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Ladder G__TTA2Ladder;
static int G__AcquRootDict_759_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Ladder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Ladder*) (soff+(sizeof(TA2Ladder)*i)))->~G__TTA2Ladder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Ladder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Ladder*) (soff))->~G__TTA2Ladder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TOFApparatus */
static int G__AcquRootDict_760_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TOFApparatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2TOFApparatus((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2TOFApparatus((const char*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TOFApparatus*) G__getstructoffset())->RecPol();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetLadder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetFlightTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2TOFApparatus*) G__getstructoffset())->GetTimeZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetNDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetNTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2TOFApparatus*) G__getstructoffset())->GetNTOFbar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TOFApparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TOFApparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TOFApparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TOFApparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TOFApparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TOFApparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TOFApparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TOFApparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_760_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TOFApparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_760_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TOFApparatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TOFApparatus(*(TA2TOFApparatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TOFApparatus G__TTA2TOFApparatus;
static int G__AcquRootDict_760_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TOFApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TOFApparatus*) (soff+(sizeof(TA2TOFApparatus)*i)))->~G__TTA2TOFApparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TOFApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TOFApparatus*) (soff))->~G__TTA2TOFApparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2ClusterDetector */
static int G__AcquRootDict_761_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ClusterDetector*) G__getstructoffset())->DecodeCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ClusterDetector*) G__getstructoffset())->DeleteClusterArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ClusterDetector*) G__getstructoffset())->SplitSearch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetCluster((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClustHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClustHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetIsSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 71, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetIsSplit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetTempHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetNCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClustSizeFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetNSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetNSplitMerged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetMaxCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetNClustHitOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClEnergyOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClTimeOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClCentFracOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetClRadiusOR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetClEthresh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetEthresh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetEthreshSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetMaxThetaSplitOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetMinPosDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetMaxPosDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetSplitAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2ClusterDetector*) G__getstructoffset())->GetEWgt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetLEWgt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetISplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetIJSplit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2ClusterDetector*) G__getstructoffset())->GetMaxSplitPerm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2ClusterDetector*) G__getstructoffset())->IsIterate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2ClusterDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ClusterDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2ClusterDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2ClusterDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2ClusterDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ClusterDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ClusterDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2ClusterDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_761_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2ClusterDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2ClusterDetector G__TTA2ClusterDetector;
static int G__AcquRootDict_761_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2ClusterDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2ClusterDetector*) (soff+(sizeof(TA2ClusterDetector)*i)))->~G__TTA2ClusterDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2ClusterDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2ClusterDetector*) (soff))->~G__TTA2ClusterDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Tagger */
static int G__AcquRootDict_779_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Tagger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Tagger((const Char_t*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TA2Tagger((const Char_t*) G__int(libp->para[0]), (TA2System*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Tagger*) G__getstructoffset())->InitLinPol();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Tagger*) G__getstructoffset())->InitLinPolHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Tagger*) G__getstructoffset())->ReconstructLinPol();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Tagger*) G__getstructoffset())->ReconstructMicro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Tagger*) G__getstructoffset())->GetFP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Tagger*) G__getstructoffset())->GetMicro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2Tagger*) G__getstructoffset())->GetLadderHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetLadderHits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2Tagger*) G__getstructoffset())->GetLadderTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Tagger*) G__getstructoffset())->GetBeamEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetWindow((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Tagger*) G__getstructoffset())->IsAny((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Tagger*) G__getstructoffset())->IsPrompt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Tagger*) G__getstructoffset())->IsRandom((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Tagger*) G__getstructoffset())->IsHelicityAmbiguous());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Tagger*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TA2Particle* pobj;
         TA2Particle xobj = ((TA2Tagger*) G__getstructoffset())->GetParticles((Int_t) G__int(libp->para[0]));
         pobj = new TA2Particle(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Tagger*) G__getstructoffset())->SetParticleInfo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2Tagger*) G__getstructoffset())->IsLinPol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetGoniAOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetGoniVOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetGoniHOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetGoniPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetGoniRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2Tagger*) G__getstructoffset())->GetGoniMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Tagger*) G__getstructoffset())->GetCohEdge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Tagger*) G__getstructoffset())->GetCohEdgeEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Tagger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Tagger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Tagger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Tagger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Tagger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Tagger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Tagger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Tagger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_779_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Tagger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_779_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Tagger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Tagger(*(TA2Tagger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Tagger G__TTA2Tagger;
static int G__AcquRootDict_779_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Tagger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Tagger*) (soff+(sizeof(TA2Tagger)*i)))->~G__TTA2Tagger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Tagger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Tagger*) (soff))->~G__TTA2Tagger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2WCLayer */
static int G__AcquRootDict_780_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2WCLayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2WCLayer(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TA2WCLayer(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WCLayer*) G__getstructoffset())->DecodeCluster(*(Int_t*) G__Intref(&libp->para[0]), (Int_t**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WCLayer*) G__getstructoffset())->CGCluster((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WCLayer*) G__getstructoffset())->CGClusters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2WCLayer*) G__getstructoffset())->IsInside((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WCLayer*) G__getstructoffset())->GetNElement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WCLayer*) G__getstructoffset())->GetLayerHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WCLayer*) G__getstructoffset())->GetClust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WCLayer*) G__getstructoffset())->GetClust((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WCLayer*) G__getstructoffset())->GetLenClust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WCLayer*) G__getstructoffset())->GetLenClust((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WCLayer*) G__getstructoffset())->GetNClust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WCLayer*) G__getstructoffset())->GetNClustPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WCLayer*) G__getstructoffset())->GetNHitsPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2WCLayer*) G__getstructoffset())->GetCGClust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2WCLayer*) G__getstructoffset())->GetCGClust((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2WCLayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WCLayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2WCLayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2WCLayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WCLayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WCLayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2WCLayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WCLayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_780_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2WCLayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_780_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2WCLayer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2WCLayer(*(TA2WCLayer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2WCLayer G__TTA2WCLayer;
static int G__AcquRootDict_780_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2WCLayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2WCLayer*) (soff+(sizeof(TA2WCLayer)*i)))->~G__TTA2WCLayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2WCLayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2WCLayer*) (soff))->~G__TTA2WCLayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylWire */
static int G__AcquRootDict_781_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylWire* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylWire(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TA2CylWire(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylWire*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylWire*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylWire*) G__getstructoffset())->GetPhiCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylWire*) G__getstructoffset())->GetPhiCor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylWire::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylWire::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylWire::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylWire::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylWire*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylWire::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylWire::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylWire::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_781_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylWire::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_781_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylWire* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylWire(*(TA2CylWire*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylWire G__TTA2CylWire;
static int G__AcquRootDict_781_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylWire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylWire*) (soff+(sizeof(TA2CylWire)*i)))->~G__TTA2CylWire();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylWire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylWire*) (soff))->~G__TTA2CylWire();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2CylStrip */
static int G__AcquRootDict_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2CylStrip* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2CylStrip(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TA2CylStrip(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (void*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetTgWC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetZ0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetPitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetEffLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylStrip*) G__getstructoffset())->GetZCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetZCor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2CylStrip*) G__getstructoffset())->GetPhiCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2CylStrip*) G__getstructoffset())->GetPhiCor((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2CylStrip::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylStrip::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2CylStrip::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2CylStrip::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2CylStrip*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylStrip::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylStrip::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2CylStrip::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_782_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2CylStrip::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_782_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2CylStrip* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2CylStrip(*(TA2CylStrip*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2CylStrip G__TTA2CylStrip;
static int G__AcquRootDict_782_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2CylStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2CylStrip*) (soff+(sizeof(TA2CylStrip)*i)))->~G__TTA2CylStrip();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2CylStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2CylStrip*) (soff))->~G__TTA2CylStrip();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Track */
static int G__AcquRootDict_783_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TA2Track((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TA2Track((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Track*) G__getstructoffset())->SetTrack((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Track*) G__getstructoffset())->SetTrack((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Track*) G__getstructoffset())->SetTrackCyl((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Track*) G__getstructoffset())->LoadVariable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Track*) G__getstructoffset())->PseudoZVertex((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Track*) G__getstructoffset())->TrackVertex((TA2Track*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Track*) G__getstructoffset())->GetOrigin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Track*) G__getstructoffset())->GetDirCos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2Track*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetOx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetOy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetOz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetDu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetDv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetDw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetVx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetVy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetVz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2Track*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_783_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_783_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Track(*(TA2Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Track G__TTA2Track;
static int G__AcquRootDict_783_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Track*) (soff+(sizeof(TA2Track)*i)))->~G__TTA2Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Track*) (soff))->~G__TTA2Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2WireChamber */
static int G__AcquRootDict_784_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WireChamber*) G__getstructoffset())->DecodeLayers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WireChamber*) G__getstructoffset())->IntersectLayers((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WireChamber*) G__getstructoffset())->SetChamberParm((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetNLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetNlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetNChamber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetNchamber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetMaxIntersect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetMaxTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TA2WireChamber*) G__getstructoffset())->GetChamberLayers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2WireChamber*) G__getstructoffset())->GetWCLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2WireChamber*) G__getstructoffset())->GetWCLayer((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2WireChamber*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2WireChamber*) G__getstructoffset())->GetVertex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2WireChamber*) G__getstructoffset())->GetTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2WireChamber*) G__getstructoffset())->GetTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2WireChamber*) G__getstructoffset())->GetNTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2WireChamber*) G__getstructoffset())->GetVertexLimits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2WireChamber*) G__getstructoffset())->GetVertexLimits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2WireChamber*) G__getstructoffset())->GetTrackTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TA2WireChamber*) G__getstructoffset())->GetTrackPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2WireChamber*) G__getstructoffset())->AbsDiffPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2WireChamber*) G__getstructoffset())->DiffPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TA2WireChamber*) G__getstructoffset())->AbsPhi((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2WireChamber::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WireChamber::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2WireChamber::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2WireChamber::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2WireChamber*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WireChamber::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2WireChamber::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2WireChamber::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_784_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2WireChamber::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2WireChamber G__TTA2WireChamber;
static int G__AcquRootDict_784_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2WireChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2WireChamber*) (soff+(sizeof(TA2WireChamber)*i)))->~G__TTA2WireChamber();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2WireChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2WireChamber*) (soff))->~G__TTA2WireChamber();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2DataSource */
static int G__AcquRootDict_785_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->Initialise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->Shutdown();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->InputList((char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->Start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataSource*) G__getstructoffset())->GetInRecLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataSource*) G__getstructoffset())->GetNfile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataSource*) G__getstructoffset())->GetNrecord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataSource*) G__getstructoffset())->GetNbyte());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TA2DataSource*) G__getstructoffset())->GetRingSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2DataSource*) G__getstructoffset())->GetBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataSource*) G__getstructoffset())->IsStore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataSource*) G__getstructoffset())->IsSwap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TA2DataSource*) G__getstructoffset())->IsProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->SetIsStore((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2DataSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2DataSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2DataSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2DataSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2DataSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_785_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2DataSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2DataSource G__TTA2DataSource;
static int G__AcquRootDict_785_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2DataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2DataSource*) (soff+(sizeof(TA2DataSource)*i)))->~G__TTA2DataSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2DataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2DataSource*) (soff))->~G__TTA2DataSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2NetSource */
static int G__AcquRootDict_786_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2NetSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2NetSource(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2NetSource*) G__getstructoffset())->ReadCheck();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2NetSource*) G__getstructoffset())->HandShakeSk((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2NetSource*) G__getstructoffset())->Setup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TA2NetSource*) G__getstructoffset())->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2NetSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2NetSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2NetSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2NetSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2NetSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2NetSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2NetSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2NetSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_786_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2NetSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_786_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2NetSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2NetSource(*(TA2NetSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2NetSource G__TTA2NetSource;
static int G__AcquRootDict_786_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2NetSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2NetSource*) (soff+(sizeof(TA2NetSource)*i)))->~G__TTA2NetSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2NetSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2NetSource*) (soff))->~G__TTA2NetSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2FileSource */
static int G__AcquRootDict_787_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2FileSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2FileSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TA2FileSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2FileSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TA2FileSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2FileSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2FileSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2FileSource((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2FileSource((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2FileSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FileSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2FileSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2FileSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2FileSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FileSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2FileSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2FileSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_787_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2FileSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_787_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2FileSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2FileSource(*(TA2FileSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2FileSource G__TTA2FileSource;
static int G__AcquRootDict_787_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2FileSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2FileSource*) (soff+(sizeof(TA2FileSource)*i)))->~G__TTA2FileSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2FileSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2FileSource*) (soff))->~G__TTA2FileSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2LocalSource */
static int G__AcquRootDict_788_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2LocalSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2LocalSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TA2LocalSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2LocalSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TA2LocalSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2LocalSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2LocalSource(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2LocalSource((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2LocalSource((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2LocalSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2LocalSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2LocalSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2LocalSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2LocalSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2LocalSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2LocalSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2LocalSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2LocalSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2LocalSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2LocalSource(*(TA2LocalSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2LocalSource G__TTA2LocalSource;
static int G__AcquRootDict_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2LocalSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2LocalSource*) (soff+(sizeof(TA2LocalSource)*i)))->~G__TTA2LocalSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2LocalSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2LocalSource*) (soff))->~G__TTA2LocalSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2Mk1Format */
static int G__AcquRootDict_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2Mk1Format* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Mk1Format(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2Mk1Format(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2Mk1Format((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2Mk1Format((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Mk1Format*) G__getstructoffset())->ResetOut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2Mk1Format::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Mk1Format::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2Mk1Format::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2Mk1Format::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2Mk1Format*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Mk1Format::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Mk1Format::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2Mk1Format::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_789_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2Mk1Format::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_789_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2Mk1Format* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2Mk1Format(*(TA2Mk1Format*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2Mk1Format G__TTA2Mk1Format;
static int G__AcquRootDict_789_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2Mk1Format*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2Mk1Format*) (soff+(sizeof(TA2Mk1Format)*i)))->~G__TTA2Mk1Format();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2Mk1Format*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2Mk1Format*) (soff))->~G__TTA2Mk1Format();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPSFormat */
static int G__AcquRootDict_790_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPSFormat* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2TAPSFormat(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2TAPSFormat(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2TAPSFormat((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2TAPSFormat((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSFormat*) G__getstructoffset())->SaveMk1Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSFormat*) G__getstructoffset())->MarkTAPSEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSFormat*) G__getstructoffset())->SavePartialEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPSFormat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPSFormat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPSFormat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPSFormat::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSFormat*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPSFormat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPSFormat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPSFormat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_790_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPSFormat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_790_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPSFormat* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPSFormat(*(TA2TAPSFormat*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPSFormat G__TTA2TAPSFormat;
static int G__AcquRootDict_790_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPSFormat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPSFormat*) (soff+(sizeof(TA2TAPSFormat)*i)))->~G__TTA2TAPSFormat();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPSFormat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPSFormat*) (soff))->~G__TTA2TAPSFormat();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TA2TAPSMk2Format */
static int G__AcquRootDict_791_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TA2TAPSMk2Format* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2TAPSMk2Format(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TA2TAPSMk2Format(
(Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TA2TAPSMk2Format((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TA2TAPSMk2Format((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSMk2Format*) G__getstructoffset())->SaveMk1Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSMk2Format*) G__getstructoffset())->MarkTAPSEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSMk2Format*) G__getstructoffset())->SavePartialEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TA2TAPSMk2Format::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPSMk2Format::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TA2TAPSMk2Format::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TA2TAPSMk2Format::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TA2TAPSMk2Format*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPSMk2Format::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPSMk2Format::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TA2TAPSMk2Format::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcquRootDict_791_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TA2TAPSMk2Format::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcquRootDict_791_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TA2TAPSMk2Format* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TA2TAPSMk2Format(*(TA2TAPSMk2Format*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TA2TAPSMk2Format G__TTA2TAPSMk2Format;
static int G__AcquRootDict_791_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TA2TAPSMk2Format*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TA2TAPSMk2Format*) (soff+(sizeof(TA2TAPSMk2Format)*i)))->~G__TTA2TAPSMk2Format();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TA2TAPSMk2Format*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TA2TAPSMk2Format*) (soff))->~G__TTA2TAPSMk2Format();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TA2System */

/* TA2DataFormat */

/* TA2Mk2Format */

/* TA2Analysis */

/* TA2DataServer */

/* TAcquRoot */

/* TA2Cut */

/* TA2MultiCut */

/* TA2BitPattern */

/* TA2RateMonitor */

/* TA2DataManager */

/* TA2H */

/* TA2HistManager */

/* TA2Control */

/* TA2Detector */

/* TA2ParticleID */

/* TA2Particle */

/* TA2Apparatus */

/* TA2Physics */

/* TA2GenericPhysics */

/* TA2GenericApparatus */

/* TA2GenericDetector */

/* TA2LongScint */

/* TA2GenericCluster */

/* TA2Ladder */

/* TA2TOFApparatus */

/* TA2ClusterDetector */

/* TA2Tagger */

/* TA2WCLayer */

/* TA2CylWire */

/* TA2CylStrip */

/* TA2Track */

/* TA2WireChamber */

/* TA2DataSource */

/* TA2NetSource */

/* TA2FileSource */

/* TA2LocalSource */

/* TA2Mk1Format */

/* TA2TAPSFormat */

/* TA2TAPSMk2Format */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAcquRootDict {
 public:
  G__Sizep2memfuncAcquRootDict(): p(&G__Sizep2memfuncAcquRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAcquRootDict::*p)();
};

size_t G__get_sizep2memfuncAcquRootDict()
{
  G__Sizep2memfuncAcquRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAcquRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2System))) {
     TA2System *G__Lderived;
     G__Lderived=(TA2System*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat))) {
     TA2DataFormat *G__Lderived;
     G__Lderived=(TA2DataFormat*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format))) {
     TA2Mk2Format *G__Lderived;
     G__Lderived=(TA2Mk2Format*)0x1000;
     {
       TA2DataFormat *G__Lpbase=(TA2DataFormat*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis))) {
     TA2Analysis *G__Lderived;
     G__Lderived=(TA2Analysis*)0x1000;
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer))) {
     TA2DataServer *G__Lderived;
     G__Lderived=(TA2DataServer*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot))) {
     TAcquRoot *G__Lderived;
     G__Lderived=(TAcquRoot*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut))) {
     TA2Cut *G__Lderived;
     G__Lderived=(TA2Cut*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut))) {
     TA2MultiCut *G__Lderived;
     G__Lderived=(TA2MultiCut*)0x1000;
     {
       TA2Cut *G__Lpbase=(TA2Cut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern))) {
     TA2BitPattern *G__Lderived;
     G__Lderived=(TA2BitPattern*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor))) {
     TA2RateMonitor *G__Lderived;
     G__Lderived=(TA2RateMonitor*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager))) {
     TA2DataManager *G__Lderived;
     G__Lderived=(TA2DataManager*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager))) {
     TA2HistManager *G__Lderived;
     G__Lderived=(TA2HistManager*)0x1000;
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control))) {
     TA2Control *G__Lderived;
     G__Lderived=(TA2Control*)0x1000;
     {
       TRint *G__Lpbase=(TRint*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control),G__get_linked_tagnum(&G__AcquRootDictLN_TRint),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control),G__get_linked_tagnum(&G__AcquRootDictLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control),G__get_linked_tagnum(&G__AcquRootDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector))) {
     TA2Detector *G__Lderived;
     G__Lderived=(TA2Detector*)0x1000;
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID))) {
     TA2ParticleID *G__Lderived;
     G__Lderived=(TA2ParticleID*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle))) {
     TA2Particle *G__Lderived;
     G__Lderived=(TA2Particle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus))) {
     TA2Apparatus *G__Lderived;
     G__Lderived=(TA2Apparatus*)0x1000;
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics))) {
     TA2Physics *G__Lderived;
     G__Lderived=(TA2Physics*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics))) {
     TA2GenericPhysics *G__Lderived;
     G__Lderived=(TA2GenericPhysics*)0x1000;
     {
       TA2Physics *G__Lpbase=(TA2Physics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus))) {
     TA2GenericApparatus *G__Lderived;
     G__Lderived=(TA2GenericApparatus*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector))) {
     TA2GenericDetector *G__Lderived;
     G__Lderived=(TA2GenericDetector*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint))) {
     TA2LongScint *G__Lderived;
     G__Lderived=(TA2LongScint*)0x1000;
     {
       TA2GenericDetector *G__Lpbase=(TA2GenericDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster))) {
     TA2GenericCluster *G__Lderived;
     G__Lderived=(TA2GenericCluster*)0x1000;
     {
       TA2GenericDetector *G__Lpbase=(TA2GenericDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder))) {
     TA2Ladder *G__Lderived;
     G__Lderived=(TA2Ladder*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus))) {
     TA2TOFApparatus *G__Lderived;
     G__Lderived=(TA2TOFApparatus*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector))) {
     TA2ClusterDetector *G__Lderived;
     G__Lderived=(TA2ClusterDetector*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger))) {
     TA2Tagger *G__Lderived;
     G__Lderived=(TA2Tagger*)0x1000;
     {
       TA2Apparatus *G__Lpbase=(TA2Apparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer))) {
     TA2WCLayer *G__Lderived;
     G__Lderived=(TA2WCLayer*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire))) {
     TA2CylWire *G__Lderived;
     G__Lderived=(TA2CylWire*)0x1000;
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire),G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip))) {
     TA2CylStrip *G__Lderived;
     G__Lderived=(TA2CylStrip*)0x1000;
     {
       TA2WCLayer *G__Lpbase=(TA2WCLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip),G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track))) {
     TA2Track *G__Lderived;
     G__Lderived=(TA2Track*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber))) {
     TA2WireChamber *G__Lderived;
     G__Lderived=(TA2WireChamber*)0x1000;
     {
       TA2Detector *G__Lpbase=(TA2Detector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber),G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2HistManager *G__Lpbase=(TA2HistManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber),G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2DataManager *G__Lpbase=(TA2DataManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource))) {
     TA2DataSource *G__Lderived;
     G__Lderived=(TA2DataSource*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource))) {
     TA2NetSource *G__Lderived;
     G__Lderived=(TA2NetSource*)0x1000;
     {
       TA2DataSource *G__Lpbase=(TA2DataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource))) {
     TA2FileSource *G__Lderived;
     G__Lderived=(TA2FileSource*)0x1000;
     {
       TA2DataSource *G__Lpbase=(TA2DataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource))) {
     TA2LocalSource *G__Lderived;
     G__Lderived=(TA2LocalSource*)0x1000;
     {
       TA2DataSource *G__Lpbase=(TA2DataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format))) {
     TA2Mk1Format *G__Lderived;
     G__Lderived=(TA2Mk1Format*)0x1000;
     {
       TA2DataFormat *G__Lpbase=(TA2DataFormat*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat))) {
     TA2TAPSFormat *G__Lderived;
     G__Lderived=(TA2TAPSFormat*)0x1000;
     {
       TA2DataFormat *G__Lpbase=(TA2DataFormat*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format))) {
     TA2TAPSMk2Format *G__Lderived;
     G__Lderived=(TA2TAPSMk2Format*)0x1000;
     {
       TA2DataFormat *G__Lpbase=(TA2DataFormat*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format),G__get_linked_tagnum(&G__AcquRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAcquRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Axis_t",100,-1,0,-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("Stat_t",100,-1,0,-1);
   G__setnewtype(-1,"Statistics type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AcquRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AcquRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AcquRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AcquRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AcquRootDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AcquRootDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AcquRootDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AcquRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TA2System */
static void G__setup_memvarTA2System(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2System));
   { TA2System *p; p=(TA2System*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__AcquRootDictLN_Map_t),-1,-1,4,"fCmdList[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ARFile_t),-1,-1,2,"fInputFile=",0,"config input file if any");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ARFile_t),-1,-1,2,"fLogFile=",0,"diagnostic log file");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,2,"fLogStream=",0,"file ptr for logging output");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsInit=",0,"initialisation complete?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsError=",0,"any setup errors?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsConfigPass=",0,"depreciated config handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2DataFormat */
static void G__setup_memvarTA2DataFormat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat));
   { TA2DataFormat *p; p=(TA2DataFormat*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer),-1,-1,2,"fIn=",0,"-> buffer where data is read in");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer),-1,-1,2,"fOut=",0,"-> buffer where data is transferred");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fHeader=",0,"-> ACQU-style header buffer");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fPartEvent=",0,"partial event holder ");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fDataFileName=",0,"name of data file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNevent=",0,"event counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecLen=",0,"Input record length");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOnline=",0,"online/offline data taking");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNadc=",0,"no. of adc's (foreign formats)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNscaler=",0,"no, of scalers (foreign formats)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fADCoffset=",0,"ADC offset (foreign formats)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fReadyServer=",0,"DataServer ready semaphore");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fReadySort=",0,"Sort ready semaphore");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPartEventSize=",0,"length (bytes) of any partial event");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fStartOffset=",0,"allows for any header info at start of event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNsrc=",0,"data source # (multi source running)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsHeader=",0,"is there a header record?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSwap=",0,"Flag to determine byte order");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsBoundary=",0,"formats that don't respect buff boundaries ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPartEvent=",0,"event buffer overflow flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsErrorSort=",0,"support for analysis of error blocks");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fEventID=",0,"Event ID stamp");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fEventIndex=",0,"\"adc\" index of marker channel");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fEventNumber=",0,"Event Number  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Mk2Format */
static void G__setup_memvarTA2Mk2Format(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format));
   { TA2Mk2Format *p; p=(TA2Mk2Format*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_AcquMk2Info_t),-1,-1,2,"fExpInfo=",0,"experimental info from header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ModuleInfoMk2_t),-1,-1,2,"fModInfo=",0,"experimental hardware modules");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Analysis */
static void G__setup_memvarTA2Analysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis));
   { TA2Analysis *p; p=(TA2Analysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_AcquBlock_t),-1,-1,2,"fRawData=",0,"start of raw event data");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNDAQEvent=",0,"event # written to data stream");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhits=",0,"# Raw ADC hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEvent=",0,"events processed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEvAnalysed=",0,"accepted events");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNOnlineEvent=",0,"event # from orig. onlineanalysis");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNHardwareError=",0,"# detected hardware errors");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHardwareError=",0,"module indices");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_FlashADC_t),-1,-1,2,"fFlash=",0,"list of any flash ADC's");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t),-1,-1,2,"fMulti=",0,"list of any multi-hit ADC's");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics),-1,-1,2,"fPhysics=",0,"physics level processing");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fPrevFileName=",0,"previous input data file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID),-1,-1,2,"fParticleID=",0,"-> PDG info");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPhysics=",0,"switch on physics processing");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsProcessComplete=",0,"event processor status");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2DataServer */
static void G__setup_memvarTA2DataServer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer));
   { TA2DataServer *p; p=(TA2DataServer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot),-1,-1,2,"fAcquRoot=",0,"ptr to main Acqu - Root class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ARFile_t),-1,-1,2,"fDataOutFile=",0,"file to write output");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource),-1,-1,2,"fDataSource=",0,"ptrs to data source classes");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat),-1,-1,2,"fDataFormat=",0,"ptrs to data format classes");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer),-1,-1,2,"fSourceBuff=",0,"data buffers for each source");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer),-1,-1,2,"fSortBuff=",0,"data passed to sort process");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TThread),-1,-1,2,"fServerThread=",0,"To run data server as separate thread");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fHeaderBuff=",0,"Header information (e.g. in ACQU format)");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fFileDir=",0,"directory info");
   G__memvar_setup((void*)0,89,2,0,-1,-1,-1,2,"fEvStart=",0,"pointers to starts of subevents");
   G__memvar_setup((void*)0,89,2,0,-1,-1,-1,2,"fEvTempStart=",0,"for sorting ID mismatch");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fEvLength=",0,"array of subevent lengths");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvOffset=",0,"subevent # offsets");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEvSearch=",0,"# subevents to search to find event-ID match");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvMaxDiff=",0,"ignore subevent differences > fEvMaxDiff");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvMax=",0,"ignore subevent diff if ev-ID > fEvMax");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvStatus=",0,"status of subevents");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fOutBuff=",0,"output data buffer");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fEndBuff=",0,"end of buffer pointer");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fEvTempBuff=",0,"temporary event store sorting mismatch");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDataSource=",0,"# of input data streams");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDataBuffer=",0,"# data buffers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNeventError=",0,"merge error counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecLen=",0,"record length of any output file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsStore=",0,"flag data storage");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSortLock=",0,"true if sort analyses all data");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsHeaderInit=",0,"1st header read?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAcquRoot */
static void G__setup_memvarTAcquRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot));
   { TAcquRoot *p; p=(TAcquRoot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TTree),-1,-1,4,"fTree=",0,"Tree for input data");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TBranch),-1,-1,4,"fBranch=",0,"separate branches of tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TThread),-1,-1,4,"fRunThread=",0,"To run analyser as separate thread");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TFile),-1,-1,4,"fTreeFile=",0,"ROOT file holding tree");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,4,"fTreeFileList=",0,"list of names of tree files");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNTreeFiles=",0,"Number Tree files to analyse (offline)");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fTreeName=",0,"string- name of TTree");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,4,"fBranchName=",0,"branch(s) of TTree to analyse");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fTreeDir=",0,"Output root data directory");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fBatchDir=",0,"batch mode log-file directory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),-1,-1,4,"fAnalysis=",0,"data sorting basis class");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fAnalysisSetup=",0,"setup file for analysis class");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fAnalysisType=",0,"type of analysis to run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer),-1,-1,4,"fDataServer=",0,"data input class");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fDataServerSetup=",0,"setup file for data server class");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fLocalDAQSetup=",0,"setup file for TDAQexperiment");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNEvent=",0,"number of events in Tree (offline)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNScalerEvent=",0,"number scaler events in Tree (offline)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTotScalerEvent=",0,"total number offline scaler events");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrEvent=",0,"current event number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNbranch=",0,"# branches to analyse");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRecLen=",0,"expected record length");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDataBuffer=",0,"# data buffers analysed");
   G__memvar_setup((void*)0,89,2,0,-1,-1,-1,4,"fEvent=",0,"-> analysed event buffer(s)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventSize=",0,"length of event buffer");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventIndex=",0,"ADC index of event marker");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fHeaderBuff=",0,"Header information (ACQU format)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer),-1,-1,4,"fSBuff=",0,"Data buffer for analysis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ADCInfo_t),-1,-1,4,"fADCList=",0,"list of defined ADC's");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ADCInfo_t),-1,-1,4,"fScalerList=",0,"list of defined scalers");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fHardwareList=",0,"list of hardware modules");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ReadErrorMk2_t),-1,-1,4,"fHardwareError=",0,"list of hardware error (per event)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNModule=",0,"no. hardware modules");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxADC=",0,"no. ADC's defined in data base");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxScaler=",0,"no. scalers defined in data base");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fADCError=",0,"ADC Error counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fScalerError=",0,"Scaler Error counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHardError=",0,"Hardware Error counter");
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fADC=",0,"ADC array for subsequent analysis");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t),-1,-1,4,"fMulti=",0,"multi-hit handlers");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fADCdefined=",0,"array showing if ADC[i] defined");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fScaler=",0,"Scaler buffer");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fScalerS=",0,"Scaler sum (used for non-clearing scalers)");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fScalerClr=",0,"Scaler cleared on read?");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fScalerBuff=",0,"Scaler buffer + extra");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNEventScaler=",0,"list of event # for scaler storage");
   G__memvar_setup((void*)0,72,2,0,-1,G__defined_typename("UInt_t"),-1,4,"fScalerHist=",0,"list of read values for all scalers");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScalerSum=",0,"Accumulated scaler buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNScalerBlock=",0,"fragmented scaler read...#blocks");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fScBlockLength=",0,"length of each block");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fScalerBlock=",0,"scaler block counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProcessType=",0,"type of data processing");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsOnline=",0,"Online/offline mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsHbookFile=",0,"Flag input file is HBOOK ntuple file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSortBusy=",0,"set when analysing buffer of data");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsScalerRead=",0,"set when scaler read during event");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFinished=",0,"set when all sorting done");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsBatch=",0,"running batch mode?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsLocalDAQ=",0,"local DAQ thread?");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNEpics=",0,"No of different epics event types");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fEpicsBuff[100]=",0,"Buffers for the EPICS data");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsEpicsRead=",0,"set when EPICS read during event");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEpicsIndex[100]=",0,"Flag EPICS indices read in EPICS event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Cut */
static void G__setup_memvarTA2Cut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut));
   { TA2Cut *p; p=(TA2Cut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTrue=",0,"condition met?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsNOT=",0,"logical netation?");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fLink=",0,"for logical combination");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fOpt=",0,"wild-card options");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNOpt=",0,"# option parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2MultiCut */
static void G__setup_memvarTA2MultiCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut));
   { TA2MultiCut *p; p=(TA2MultiCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TList),-1,-1,2,"fCutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2BitPattern */
static void G__setup_memvarTA2BitPattern(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern));
   { TA2BitPattern *p; p=(TA2BitPattern*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,4,"fPatternName=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,4,"fADCList=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,4,"fPatternList=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,4,"fHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpat=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNadc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelement=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNelem=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2RateMonitor */
static void G__setup_memvarTA2RateMonitor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor));
   { TA2RateMonitor *p; p=(TA2RateMonitor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScalerSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,4,"fRateName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNrate=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fScalerIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fClockIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFrequency=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNorm=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsScalerRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2DataManager */
static void G__setup_memvarTA2DataManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager));
   { TA2DataManager *p; p=(TA2DataManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TRandom),-1,-1,2,"fRandom=",0,"Random generator");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRandSeed=",0,"initial seed for random");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager),-1,-1,2,"fParent=",0,"one tier up in analysis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TList),-1,-1,2,"fChildren=",0,"one tier down in analysis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TList),-1,-1,2,"fVariables=",0,"info on cut/histgram variables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TFile),-1,-1,2,"fTreeFile=",0,"output file for trees etc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TTree),-1,-1,2,"fTree=",0,"ROOT tree for output");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TBranch),-1,-1,2,"fBranch=",0,"separate branches of tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbranch=",0,"# branches to analyse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),-1,-1,2,"fDataCuts=",0,"data filtering conditions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),-1,-1,2,"fHistCuts=",0,"histogram filtering conditions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),-1,-1,2,"fMiscCuts=",0,"miscellaneous filtering conditions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut),-1,-1,2,"fCompoundCut=",0,"for setting up compount cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor),-1,-1,2,"fRateMonitor=",0,"scaler rate monitors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern),-1,-1,2,"fBitPattern=",0,"pattern-unit handler");
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fPatternHits=",0,"hits from bit pattern units");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPatternHits=",0,"# hits from bit pattern units ");
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fADC=",0,"ADC array for subsequent analysis");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fADCdefined=",0,"Tag if ADC[i] defined");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t),-1,-1,2,"fMulti=",0,"list of any multi-hit ADC's");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fScaler=",0,"Scaler dump");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fScalerBuff=",0,"Scaler dump + other info");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScalerSum=",0,"Accumulated scaler");
   G__memvar_setup((void*)0,89,2,0,-1,-1,-1,2,"fEvent=",0,"decoded event buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxADC=",0,"no. ADC's defined in data base");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxScaler=",0,"no. scalers defined in data base");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fScalerIndex=",0,"local scaler indices");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fScalerCurr=",0,"local scalers current buffer");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScalerAcc=",0,"local scalers accumulated buffer");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPeriod=",0,"periodic task event counter");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxPeriod=",0,"# events between periodic tasks");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fPeriodCmd=",0,"period command to execute");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fEpicsCmd=",0,"epics command to execute");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fEndOfFileCmd=",0,"end-of-file command to execute");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fFinishCmd=",0,"end-of-run command to execute");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTreeFileName=",0,"reduced data tree file name");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRawDecode=",0,"perform Raw decoding?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDecode=",0,"perform decoding?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsReconstruct=",0,"perform reconstruction?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRawDecodeOK=",0,"Raw decoding passed conditions?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDecodeOK=",0,"Decoding passed conditions?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsReconstructOK=",0,"Reconstruction passed conditions?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsCut=",0,"perform data cuts?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsBitPattern=",0,"bit pattern decode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRateMonitor=",0,"scaler time dependence");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsEndOfFile=",0,"end-of-file procedures?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsFinish=",0,"end-of-run procedures?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSaveEvent=",0,"save output data?");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__AcquRootDictLN_Map_t),-1,-1,2,"kValidChild=",0,"valid child class types");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2H */
static void G__setup_memvarTA2H(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2H));
   { TA2H *p; p=(TA2H*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut),-1,-1,2,"fCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Stat_t"),-1,2,"fWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2HistManager */
static void G__setup_memvarTA2HistManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager));
   { TA2HistManager *p; p=(TA2HistManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__AcquRootDictLN_Map_t),-1,-1,4,"fHistList=",0,"list of histogram names");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TList),-1,-1,2,"f1Dhist=",0,"list of 1D histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TList),-1,-1,2,"f2Dhist=",0,"list of 2D histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TList),-1,-1,2,"f3Dhist=",0,"list of 3D histograms");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fN1Dhist=",0,"no. 1D histograms");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fN2Dhist=",0,"no. 2D histograms");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fN3Dhist=",0,"no. 2D histograms");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDisplay=",0,"histogramming on?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Control */
static void G__setup_memvarTA2Control(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control));
   { TA2Control *p; p=(TA2Control*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control),-1,-2,2,"fExists=",0,"check interface already existing?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Detector */
static void G__setup_memvarTA2Detector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector));
   { TA2Detector *p; p=(TA2Detector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_HitD2A_t),-1,-1,2,"fElement=",0,"Array of calibration info");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergy=",0,"stored hit energies if any");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergyOR=",0,"stored energy OR");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,"stored hit times");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeM=",0,"stored multihit (TDC) times");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeOR=",0,"stored hit times for OR timing");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeORM=",0,"stored hit times for OR timing");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fPosition=",0,"stored hit positions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fMeanPos=",0,"\"centre\" of detector");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShiftOp=",0,"operations global shift of coords");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fShiftValue=",0,"values global shift of coords");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNShiftOp=",0,"# global shift operations");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHits=",0,"array elements which fired in event");
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fHitsM=",0,"array elements which M-fired");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawTimeHits=",0,"array raw TDC hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawEnergyHits=",0,"array raw Energy hits");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__AcquRootDictLN_Map_t),-1,-1,2,"fDetectorComm=",0,"input commands");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__AcquRootDictLN_Map_t),-1,-1,2,"fDetectorHist=",0,"histograms");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotalEnergy=",0,"accumulated energy in element array");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergyScale=",0,"global scaling factor for energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeOffset=",0,"global time offset");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNhits=",0,"No. detector hits in event");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNhitsM=",0,"No. detector M-hits in event");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNADChits=",0,"No. ADC hits in event");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNTDChits=",0,"No. TDC hits in event");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNMultihit=",0,"Max number multihits to analyse");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNelement=",0,"# elements in array");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNelem=",0,"counter of defined elements");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxHits=",0,"max # hits to process");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsECalib=",0,"Is there an energy calibration?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsScaler=",0,"Are there scalers?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsEnergy=",0,"pulse height (energy) decoded?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTime=",0,"is TDC info decoded");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPos=",0,"position decoded?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRawHits=",0,"Raw hits info stored?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2ParticleID */
static void G__setup_memvarTA2ParticleID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID));
   { TA2ParticleID *p; p=(TA2ParticleID*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxType=",0,"# different particle species to handle");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDGtype=",0,"considered PDG ID's of particles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMass=",0,"Masses of event's particles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCharge=",0,"Charges of event's particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TDatabasePDG),-1,-1,4,"fPDG=",0,"PDG data base");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Particle */
static void G__setup_memvarTA2Particle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle));
   { TA2Particle *p; p=(TA2Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TDatabasePDG),-1,-1,2,"fPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVetoTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVetoEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCircDegree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLinDegree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPSAShort=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fClusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParticleID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSecondID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVetoIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCentralIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCircState=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLinState=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fApparati=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDetectors=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUnclear=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Apparatus */
static void G__setup_memvarTA2Apparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus));
   { TA2Apparatus *p; p=(TA2Apparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4=",0,"4 momenta of ID'ed particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle),-1,-1,2,"fParticleInfo=",0,"general particle info");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPDGtype=",0,"considered particle IDs");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPDG_ID=",0,"ID integers of particles");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4tot=",0,"Sumed 4-momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID),-1,-1,2,"fParticleID=",0,"local store particle attributed");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMtot=",0,"total invariant mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinv=",0,"individual invariant masses");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEtot=",0,"total energy");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxParticle=",0,"max # particles per event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparticle=",0,"# particles detected");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fROOToutput=",0,"buffer for root tree writing");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut),-1,-1,2,"fPCut=",0,"array particle-ID cut pointers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCut=",0,"total # p-ID cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNSector=",0,"# Sectors to apply p-ID cuts");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPCutStart=",0,"cut start index for each sector");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNSectorCut=",0,"# cuts associated with each sector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Physics */
static void G__setup_memvarTA2Physics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics));
   { TA2Physics *p; p=(TA2Physics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4miss=",0,"missing momenta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4target=",0,"target 4 vector (at rest)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fTargetPos=",0,"target position");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMmiss=",0,"missing mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPmiss=",0,"missing momentum magnitude");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPtheta=",0,"missing momentum theta");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPphi=",0,"missing momentum phi");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtarget=",0,"# target nuclei");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperm=",0,"# general purpose");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpermutation=",0,"wild card stuff");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2GenericPhysics */
static void G__setup_memvarTA2GenericPhysics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics));
   { TA2GenericPhysics *p; p=(TA2GenericPhysics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),-1,-1,2,"fTAGG=",0,"Glasgow photon tagger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle),-1,-1,2,"fTAGGinfo=",0,"Tagger info store");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),-1,-1,2,"fCB=",0,"Crystal Ball");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),-1,-1,2,"fTAPS=",0,"TAPS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),-1,-1,2,"fTOF=",0,"TOF");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus),-1,-1,2,"fGenApp=",0,"generic list of apparati");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle),-1,-1,2,"fGenAppInfo=",0,"lists of particles");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4photon=",0,"sorted list of gamma 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4proton=",0,"sorted list of proton 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4piplus=",0,"sorted list of pi+ 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4neutron=",0,"sorted list of neutron 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4pi0=",0,"sorted list of pi0 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4gprime=",0,"sorted list of gamma' 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4eta=",0,"sorted list of eta 4 momenta");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4rootino=",0,"sorted list of unknown 4 momenta");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNGenApp=",0,"# connected generic apparati");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNParticle=",0,"total # particles in event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNphoton=",0,"# photon");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNproton=",0,"# proton");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpiplus=",0,"# pi+");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNneutron=",0,"# neutron");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpi0=",0,"# pi0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNgprime=",0,"# gamma'");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNeta=",0,"# eta");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrootino=",0,"# unknowns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNprompt=",0,"tagger prompts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrandom=",0,"tagger randoms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaP=",0,"prompts lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNparaR=",0,"randoms lin-pol para");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpP=",0,"prompts lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNperpR=",0,"randoms lin-pol perp");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTagg=",0,"max # tagger particles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxParticle=",0,"max # particles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEm=",0,"overall missing mass");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmP=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2GenericApparatus */
static void G__setup_memvarTA2GenericApparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus));
   { TA2GenericApparatus *p; p=(TA2GenericApparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),-1,-1,2,"fDet=",0,"list of Pointers to the detector classes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDet=",0,"number of detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2GenericDetector */
static void G__setup_memvarTA2GenericDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector));
   { TA2GenericDetector *p; p=(TA2GenericDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIminMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fImaxMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPartMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNHitsMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHitsMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex2Element=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fEnergyMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTimeMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX_MC=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY_MC=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fZ_MC=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVertexMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fHitPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXMC=",0,"MC hit X");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYMC=",0,"MC hit Y");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZMC=",0,"MC hit Z");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXMCOR=",0,"MC hit X");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYMCOR=",0,"MC hit Y");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZMCOR=",0,"MC hit Z");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fVertex=",0,"MC production vertex");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBeamMC=",0,"MC Beam");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDirCosMC=",0,"MC particle directions");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPlabMC=",0,"MC particle total lab momenta");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fElabMC=",0,"MC particle lab energies");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4MC=",0,"MC incident particle 4-momenta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector),-1,-1,2,"fP4Comb=",0,"MC incident particle 4-momenta");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEMC=",0,"MC incident particle theta lab");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPMC=",0,"MC incident particle theta lab");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThMC=",0,"MC incident particle theta lab");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMC=",0,"MC incident particle phi lab");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeOvThr=",0,"Time over threshold");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNComb=",0,"no. MC particles to combine");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIComb=",0,"indices MC particles to combi");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2LongScint */
static void G__setup_memvarTA2LongScint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint));
   { TA2LongScint *p; p=(TA2LongScint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_LongBar_t),-1,-1,2,"fBar=",0,"Array of scintillator bar info");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanEnergy=",0,"Mean pulse heights");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanEnergyOR=",0,"Mean pulse-height OR");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanTime=",0,"Mean times");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanTimeOR=",0,"Mean-time OR");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeDiff=",0,"Time difference");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeDiffOR=",0,"Time difference OR");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaOR=",0,"theta of bar hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiOR=",0,"phi of bar hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFlightOR=",0,"flight path of bar hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"theta of bar hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"phi of bar hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFlight=",0,"flight path of bar hits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fBarPos=",0,"Hit position on Bar");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarHits=",0,"Scint-bar hits");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarHitCount=",0,"# elements fired for each bar");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fElement2Bar=",0,"element-bar correspondence");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSmearHits=",0,"MC hits after smearing effects");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBarHits=",0,"# scint-bar hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBar=",0,"# scintillator bars");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbar=",0,"# scintillator bars running counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNFrontBar=",0,"# forward scintillator bars");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNSmearHits=",0,"# MC hits after smearing effects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2GenericCluster */
static void G__setup_memvarTA2GenericCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster));
   { TA2GenericCluster *p; p=(TA2GenericCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_GenHitCluster_t),-1,-1,2,"fCluster=",0,"Clusters of hits");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fClustHit=",0,"Cluster indices");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSplit=",0,"Indices split-off clusters");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTempHits=",0,"Element-Hit store");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNCluster=",0,"# of clusters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fClustSizeFactor=",0,"enlarge factor, hit cluster buffers");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNSplit=",0,"# low energy clusters");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNSplitMerged=",0,"# split-offs merged");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxCluster=",0,"Max # of clusters");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNClustHitOR=",0,"OR of #hits in individuyal clusters");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"theta of cluster hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"phi of cluster hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClEnergyOR=",0,"OR of cluster energies");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClTimeOR=",0,"OR of cluster times");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClCentFracOR=",0,"OR of energy ratios in central elem.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClRadiusOR=",0,"OR E-weighted cluster radii");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCldTheta=",0,"error in theta");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCldPhi=",0,"error in phi");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCldX=",0,"error in X");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCldY=",0,"error in Y");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCldZ=",0,"error in Z");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXmc=",0,"actual particle X");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmc=",0,"actual particle Y");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZmc=",0,"actual particle Z");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClEthresh=",0,"threshold energy for main cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEthresh=",0,"generic threshold energy for cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEthreshSplit=",0,"threshold energy for split-off");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxThetaSplitOff=",0,"max split-off opening angle ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinPosDiff=",0,"min acceptable neighbour pos diff. ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPosDiff=",0,"max acceptable neighbour pos diff. ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSplitAngle=",0,"opening angles detween clusters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEWgt=",0,"energy weighting factor");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLEWgt=",0,"energy weighting factor switch");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fISplit=",0,"for sorting cluster opening angles");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIJSplit=",0,"for sorting cluster opening angles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxSplitPerm=",0,"for sorting cluster opening angles");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsIterate=",0,"cluster member find iteration ON/OFF");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Ladder */
static void G__setup_memvarTA2Ladder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder));
   { TA2Ladder *p; p=(TA2Ladder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_HitD2A_t),-1,-1,2,"fTrigger=",0,"Trigger info array (only if separate trig)");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTrigg=",0,"Trigger info for each each hit");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fDoubles=",0,"double-hit info");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fHitsAll=",0,"before sorting doubles");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fWindows=",0,"for each hit, flag prompt/rand/neither");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHitsRand=",0,"array with indices of random hit channls ");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHitsPrompt=",0,"array with indices of prompt hit channels");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMuHits=",0,"microscope hits");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fECalibration=",0,"Energy calibration");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEelec=",0,"electron energy");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEelecOR=",0,"OR of electron energy");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanEelecOR=",0,"OR of overlap electron energy");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEOverlap=",0,"Energy calibration for overlaps");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRandMin=",0,"random windows maxima");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRandMax=",0,"random windows minima");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanTime=",0,"doubles mean time");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanTimeOR=",0,"doubles mean time OR");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanEnergy=",0,"doubles mean pulse height");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanEnergyOR=",0,"doubles mean pulse height OR");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiffTime=",0,"doubles time difference");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiffTimeOR=",0,"doubles time difference OR");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimingRes=",0,"Timing resolution (window) for doubles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPromptRand=",0,"Ratio of prompt/rand windows");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPromptMin=",0,"Prompt window minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPromptMax=",0,"Prompt window maximum");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNDoubles=",0,"no of doubles");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNThits=",0,"No. triggers in event");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNtrigger=",0,"No. separate triggers defined");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNtrig=",0,"Separate triggers running counter");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNRandWindows=",0,"No of random windows defined");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNhitsPrompt=",0,"no of prompt hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNhitsRand=",0,"no of random hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNMuHits=",0,"# microscope hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNMuElem=",0,"# microscope overlap channels");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fFence=",0,"Fence plot for microscope calibration");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOverlap=",0,"Is different energy to be used for overlaps");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTimeWindows=",0,"Are prompt and rand windows defined");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsFence=",0,"Fence plot?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMicro=",0,"Microscope 1/3 overlap decode?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TOFApparatus */
static void G__setup_memvarTA2TOFApparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus));
   { TA2TOFApparatus *p; p=(TA2TOFApparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),-1,-1,2,"fDet=",0,"list of Pointers to the detector classes");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint),-1,-1,2,"fTOF=",0,"list of Pointers to the TOF detector classes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),-1,-1,2,"fLadder=",0,"ladder for retiming");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),-1,-1,2,"fPolAnal=",0,"analyser");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster),-1,-1,2,"fPolAsym=",0,"asymmetry ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeta=",0,"Velocity");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFlightTime=",0,"Inverse velocity ns/m");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScatTheta=",0,"Polarimeter scattering polar angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScatPhi=",0,"Polarimeter scattering asimuthal angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiffTheta=",0,"Polarimeter angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPolTdiff=",0,"Polarimeter time difference");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPolEsum=",0,"Polarimeter energy sum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeZero=",0,"Particle production time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTmin=",0,"limits for polarimeter time difference");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmin=",0,"limits for polarimeter energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMin=",0,"limits for polarimeter angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDet=",0,"number of detectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTOF=",0,"number of TOF arrays");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTOFbar=",0,"number of TOF bars");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPolScatter=",0,"number of double scatters in polarimeter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2ClusterDetector */
static void G__setup_memvarTA2ClusterDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector));
   { TA2ClusterDetector *p; p=(TA2ClusterDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_HitCluster_t),-1,-1,2,"fCluster=",0,"Clusters of hits");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fClustHit=",0,"Cluster indices");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSplit=",0,"Indices split-off clusters");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTempHits=",0,"Element-Hit store");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNCluster=",0,"# of clusters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fClustSizeFactor=",0,"enlarge factor, hit cluster buffers");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNSplit=",0,"# low energy clusters");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNSplitMerged=",0,"# split-offs merged");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxCluster=",0,"Max # of clusters");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNClustHitOR=",0,"OR of #hits in individuyal clusters");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"theta of cluster hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"phi of cluster hit");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClEnergyOR=",0,"OR of cluster energies");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClTimeOR=",0,"OR of cluster times");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClCentFracOR=",0,"OR of energy ratios in central elem.");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClRadiusOR=",0,"OR E-weighted cluster radii");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClEthresh=",0,"threshold energy for main cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEthresh=",0,"generic threshold energy for cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEthreshSplit=",0,"threshold energy for split-off");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxThetaSplitOff=",0,"max split-off opening angle ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinPosDiff=",0,"min acceptable neighbour pos diff. ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxPosDiff=",0,"max acceptable neighbour pos diff. ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSplitAngle=",0,"opening angles detween clusters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEWgt=",0,"energy weighting factor");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLEWgt=",0,"energy weighting factor switch");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fISplit=",0,"for sorting cluster opening angles");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIJSplit=",0,"for sorting cluster opening angles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxSplitPerm=",0,"for sorting cluster opening angles");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsIterate=",0,"cluster member find iteration ON/OFF");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Tagger */
static void G__setup_memvarTA2Tagger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger));
   { TA2Tagger *p; p=(TA2Tagger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNMR=",0,"NMR measurement of field strength");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeamEnergy=",0,"incident electron-beam energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeamPol=",0,"incident electron-beam polarisation");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonEnergy=",0,"photon energies");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhotonTime=",0,"photon times");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),-1,-1,2,"fFP=",0,"main focal-plane array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder),-1,-1,2,"fMicro=",0,"focal-plane microscope");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector),-1,-1,2,"fPbGlass=",0,"photon monitor");
   G__memvar_setup((void*)0,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fFPEcalib=",0,"FP energy calibration table	");
   G__memvar_setup((void*)0,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fMicroEcalib=",0,"Microscope energy calibration table");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsFP=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsMicro=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPbGlass=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsLinPol=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsHelicityAmbiguous=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNFPElem=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNMicroElem=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHelicityADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle),-1,-1,2,"fParticles=",0,"to store particle-information");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInitLevel=",0,"To allow multiple passes at Init");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBaseADC=",0,"Index of the 1st ADC with goni / scan data");
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniADC=",0,"Array of goni ADC vals");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fScanFlagADC=",0,"Is scanning on");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStepADC=",0,"Step no in scan");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNormChannel=",0,"Channel to use for normalisation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNormEnergy=",0,"Photon energy for norm of  \"enhancement\"");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergyCalib=",0,"Photon energy map");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fScalerCurr=",0,"ptr to ladder current scaler buffer");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fRefFileName=",0,"File name for reference tagger scaler dump");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIncSpectrum=",0,"Array to hold Inc ref. spectrum");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCohSpectrum=",0,"Array to hold Coh spectrum");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnhSpectrum=",0,"Array to hold Enhancement spectrum");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBadScalerChan=",0,"Hold map of bad channels");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHaveIncScaler=",0,"Flag to say we have ref from scalers.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDoingScalers=",0,"Flag ot say if we're handling scalers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDoingTDCs=",0,"Flag to say if we're handling TDCs");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTDCRefFileName=",0,"File name for reference tagger TDC based.");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBadTDCChan=",0,"Hold map of bad channels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFillFreq=",0,"# scaler reads between fills of TDC based spectra");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFillCounter=",0,"Count no fills of TDC based spectra");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPrompt=",0,"for spectrum from prompt peak");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRand=",0,"for background");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTDCIncSpectrum=",0,"Array to hold Inc ref. spectrum");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTDCCohSpectrum=",0,"Array to hold Coh spectrum");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTDCEnhSpectrum=",0,"Array to hold Enhancement spectrum");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHaveIncTDC=",0,"Flag to say we have ref from TDC.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPromptRandRatio=",0,"Ratio of the widths of the Prompt/rand time bins");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEdge=",0,"for position of coherent edge chans");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEdgeEnergy=",0,"for position of coherent edge MeV");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniAOff=",0,"for the varoius bits of info from the goniometer");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniVOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniHOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniPlane=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fGoniMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDInc=",0,"dummy variables to set up 1D and 2D scaler hists");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDCoh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDEnh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDCohPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDEnhPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDCohPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDEnhPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCInc=",0,"dummy variables to set up 1D and 2D tdc hists");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCCoh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCEnh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCCohPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCEnhPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCCohPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDTDCEnhPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDEdgeEnergy=",0,"for position of coherent edge MeV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDScanStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fScalerCount=",0,"running counter of scaler events");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLadderTime=",0,"from the ladder");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLadderHits=",0,"from the ladder");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fLadderWindows=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fEdgeFitName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEdgeChMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEdgeChMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHInc=",0,"ptrs to the hists if they're defined");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHCoh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHEnh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHCohPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHEnhPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHCohPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHEnhPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCInc=",0,"ptrs to the hists if they're defined");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCCoh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCEnh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCCohPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCEnhPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCCohPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHTDCEnhPerp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH2F),-1,-1,2,"fHScan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TH1F),-1,-1,2,"fHEdgeEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TF1),-1,-1,2,"fEdgeFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2WCLayer */
static void G__setup_memvarTA2WCLayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer));
   { TA2WCLayer *p; p=(TA2WCLayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNElement=",0,"# wires or strips in layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIstart=",0,"start index of layer within detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIend=",0,"end index of layer within detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxClust=",0,"max # clusters in layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxClustSize=",0,"max # clusters in layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNHits=",0,"# hits in layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNClust=",0,"# clusters in layer ");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fClust=",0,"cluster start index");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLenClust=",0,"# elements spanned by cluster");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCGClust=",0,"center of gravity of cluster");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIdist=",0,"max distance between cluster elements  ");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHits=",0,"total detector elements which fired in event");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLayerHits=",0,"layer elements which fired in event   ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergy=",0,"pulse amplitude array");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,"hit time array");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fPos=",0,"hit-element positioning array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylWire */
static void G__setup_memvarTA2CylWire(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire));
   { TA2CylWire *p; p=(TA2CylWire*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius=",0,"radius mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCor[3]=",0,"z correction coeffs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiSpace=",0,"phi spacing of wires");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2CylStrip */
static void G__setup_memvarTA2CylStrip(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip));
   { TA2CylStrip *p; p=(TA2CylStrip*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius=",0,"radius mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTgWC=",0,"tan helix angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ0=",0,"along beam axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPitch=",0,"strip pitch mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEffLength=",0,"effective 1/2 length mm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZCor[3]=",0,"z correction coeffs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCor[3]=",0,"phi correction coeffs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Track */
static void G__setup_memvarTA2Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track));
   { TA2Track *p; p=(TA2Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fOrigin=",0,"Track origin");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fDirCos=",0,"direction cosines");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fVertex=",0,"track intersection vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2WireChamber */
static void G__setup_memvarTA2WireChamber(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber));
   { TA2WireChamber *p; p=(TA2WireChamber*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNLayer=",0,"# planes (layers) of detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNlayer=",0,"ditto");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNChamber=",0,"# \"separate\" chambers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNchamber=",0,"ditto");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxIntersect=",0,"max # intersect points");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxTrack=",0,"max # tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxVertex=",0,"max # vertices");
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fChamberLayers=",0,"store layers in chambers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTrack=",0,"# tracks in event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNVertex=",0,"# vertices in event");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer),-1,-1,2,"fWCLayer=",0,"array of plane classes;");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track),-1,-1,2,"fTrack=",0,"track info for event");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__AcquRootDictLN_TVector3),-1,-1,2,"fVertex=",0,"arrays of vertices");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVertexLimits=",0,"outer limits of vertex coordinates");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackTheta=",0,"polar track angles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackPhi=",0,"asimuthal track angles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"f2Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2DataSource */
static void G__setup_memvarTA2DataSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource));
   { TA2DataSource *p; p=(TA2DataSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TThread),-1,-1,2,"fSourceThread=",0,"To run data source as separate thread");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer),-1,-1,2,"fBuffer=",0,"To run data source as separate thread");
   G__memvar_setup((void*)0,67,2,0,-1,-1,-1,2,"fFileName=",0,"File names");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fStartList=",0,"1st record to analyse");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fStopList=",0,"last record to analyse");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fStart=",0,"1st record to analyse");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fStop=",0,"last record to analyse");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInRecLen=",0,"no. of bytes in record");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOutPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNfile=",0,"counter number files processed");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNrecord=",0,"current record number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbyte=",0,"no. of bytes in current record");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRingSize=",0,"# elements in ring buffer");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsStore=",0,"store data ?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSwap=",0,"byte swapping?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsProcess=",0,"run a process?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2NetSource */
static void G__setup_memvarTA2NetSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource));
   { TA2NetSource *p; p=(TA2NetSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ARSocket_t),-1,-1,4,"fSocket=",0,"for TCP/IP communications");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPacketLen=",0,"network transfer packet length");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2FileSource */
static void G__setup_memvarTA2FileSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource));
   { TA2FileSource *p; p=(TA2FileSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"fFilename=",0,"input file name list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2LocalSource */
static void G__setup_memvarTA2LocalSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource));
   { TA2LocalSource *p; p=(TA2LocalSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"fFilename=",0,"input file name list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2Mk1Format */
static void G__setup_memvarTA2Mk1Format(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format));
   { TA2Mk1Format *p; p=(TA2Mk1Format*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_AcquExptInfo_t),-1,-1,2,"fExpInfo=",0,"experimental info from header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ModuleInfo_t),-1,-1,2,"fModInfo=",0,"experimental hardware modules");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPSFormat */
static void G__setup_memvarTA2TAPSFormat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat));
   { TA2TAPSFormat *p; p=(TA2TAPSFormat*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPartEvent=",0,"event buffer overflow flag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TA2TAPSMk2Format */
static void G__setup_memvarTA2TAPSMk2Format(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format));
   { TA2TAPSMk2Format *p; p=(TA2TAPSMk2Format*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPartEvent=",0,"event buffer overflow flag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_AcquMk2Info_t),-1,-1,2,"fExpInfo=",0,"experimental info from header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_ModuleInfoMk2_t),-1,-1,2,"fModInfo=",0,"experimental hardware modules");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAcquRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTA2System(void) {
   /* TA2System */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2System));
   G__memfunc_setup("BaseInit",783,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'Map_t' - 10 - - C - 'Char_t' 0 - -", "1st-level initialisation", (void*) NULL, 0);
   G__memfunc_setup("PrintError",1047,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 'NULL' - "
"i - 'Int_t' 0 'EErrNonFatal' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMessage",1234,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - -", "general message", (void*) NULL, 0);
   G__memfunc_setup("Map2Key",633,G__AcquRootDict_220_0_6, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - U 'Map_t' - 10 'NULL' -", "get key from string", (void*) NULL, 0);
   G__memfunc_setup("Map2Key",633,G__AcquRootDict_220_0_7, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - U 'Map_t' - 12 - -", "get key from string", (void*) NULL, 0);
   G__memfunc_setup("Map2String",967,G__AcquRootDict_220_0_8, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'Map_t' - 10 'NULL' -", "get string from key", (void*) NULL, 0);
   G__memfunc_setup("GetMapKey",871,G__AcquRootDict_220_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'Map_t' - 10 'NULL' -", "get key from index", (void*) NULL, 0);
   G__memfunc_setup("GetMapString",1205,G__AcquRootDict_220_0_10, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'Map_t' - 10 'NULL' -", "get string from index", (void*) NULL, 0);
   G__memfunc_setup("AddCmdList",953,G__AcquRootDict_220_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Map_t' - 10 - -", "add command map", (void*) NULL, 0);
   G__memfunc_setup("FileConfig",982,G__AcquRootDict_220_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 'NULL' -", "Setup class from file", (void*) NULL, 0);
   G__memfunc_setup("CommandConfig",1301,G__AcquRootDict_220_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 'NULL' -", "Setup class from tty", (void*) NULL, 0);
   G__memfunc_setup("ParseMisc",903,G__AcquRootDict_220_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "wild-card initialisation", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,G__AcquRootDict_220_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "class-dependent setup", (void*) NULL, 3);
   G__memfunc_setup("PostInit",826,G__AcquRootDict_220_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "class initialisation", (void*) NULL, 1);
   G__memfunc_setup("BuildName",881,G__AcquRootDict_220_0_17, 67, -1, G__defined_typename("Char_t"), 0, 8, 1, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 'NULL' - "
"C - 'Char_t' 10 'NULL' - C - 'Char_t' 10 'NULL' - "
"C - 'Char_t' 10 'NULL' - C - 'Char_t' 10 'NULL' - "
"C - 'Char_t' 10 'NULL' - C - 'Char_t' 10 'NULL' -", "string construction", (void*) NULL, 0);
   G__memfunc_setup("CheckName",863,G__AcquRootDict_220_0_18, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputFile",1200,G__AcquRootDict_220_0_19, 85, G__get_linked_tagnum(&G__AcquRootDictLN_ARFile_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogFile",962,G__AcquRootDict_220_0_20, 85, G__get_linked_tagnum(&G__AcquRootDictLN_ARFile_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogStream",1198,G__AcquRootDict_220_0_21, 69, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogStream",1210,G__AcquRootDict_220_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "E - - 0 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogFile",974,G__AcquRootDict_220_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 'NULL' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInit",592,G__AcquRootDict_220_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsError",710,G__AcquRootDict_220_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_220_0_26, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2System::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_220_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2System::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_220_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2System::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_220_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2System::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_220_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_220_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2System::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_220_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2System::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_220_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2System::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_220_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2System::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2System", 970, G__AcquRootDict_220_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2DataFormat(void) {
   /* TA2DataFormat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat));
   G__memfunc_setup("Initialise",1035,G__AcquRootDict_627_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - U 'TA2RingBuffer' - 0 - - "
"U 'TA2RingBuffer' - 0 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckHeader",1063,G__AcquRootDict_627_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "Is the header buffer OK?", (void*) NULL, 1);
   G__memfunc_setup("InitForeign",1118,G__AcquRootDict_627_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "for foreign formats", (void*) NULL, 1);
   G__memfunc_setup("ConstructHeader",1550,G__AcquRootDict_627_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 'NULL' -", "ACQU header construction", (void*) NULL, 1);
   G__memfunc_setup("MergeHeader",1081,G__AcquRootDict_627_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("UpdateHeader",1196,G__AcquRootDict_627_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - -", "start of new file", (void*) NULL, 1);
   G__memfunc_setup("UpdateInfo",1007,G__AcquRootDict_627_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "header info update prototype", (void*) NULL, 1);
   G__memfunc_setup("SwapHeader",996,G__AcquRootDict_627_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - -", "byte-swap header buffer", (void*) NULL, 1);
   G__memfunc_setup("SendData",772,G__AcquRootDict_627_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "process data buffer", (void*) NULL, 1);
   G__memfunc_setup("SendEOF",612,G__AcquRootDict_627_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "signal end-of-file", (void*) NULL, 1);
   G__memfunc_setup("SendTerminate",1331,G__AcquRootDict_627_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "signal end-of-analysis", (void*) NULL, 1);
   G__memfunc_setup("SetFileName",1069,G__AcquRootDict_627_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'AcquExptInfo_t' - 0 - - C - - 0 '\"/\"' - "
"i - - 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,G__AcquRootDict_627_0_14, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HeaderSize",996,G__AcquRootDict_627_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - h", "no. bytes in header", (void*) NULL, 1);
   G__memfunc_setup("GetEventLength",1412,G__AcquRootDict_627_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 - evbuff", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHeadBuff",945,G__AcquRootDict_627_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - -", "is buffer a header", (void*) NULL, 3);
   G__memfunc_setup("IsDataBuff",953,G__AcquRootDict_627_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - -", "is buffer a data buffer", (void*) NULL, 3);
   G__memfunc_setup("IsEndBuff",854,G__AcquRootDict_627_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - -", "is buffer a trailer", (void*) NULL, 3);
   G__memfunc_setup("IsTermBuff",983,G__AcquRootDict_627_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - -", "is buffer a terminator", (void*) NULL, 3);
   G__memfunc_setup("SetHeader",885,G__AcquRootDict_627_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - b", "Set header", (void*) NULL, 1);
   G__memfunc_setup("SetData",678,G__AcquRootDict_627_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrailer",1023,G__AcquRootDict_627_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTerminate",1237,G__AcquRootDict_627_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBufferType",1308,G__AcquRootDict_627_0_25, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetReadyServer",1420,G__AcquRootDict_627_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadySort",1213,G__AcquRootDict_627_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCoffset",1135,G__AcquRootDict_627_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeader",873,G__AcquRootDict_627_0_29, 89, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__AcquRootDict_627_0_30, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventIndex",1306,G__AcquRootDict_627_0_31, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventIndex",1318,G__AcquRootDict_627_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNumber",1419,G__AcquRootDict_627_0_33, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartOffset",1429,G__AcquRootDict_627_0_34, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNsrc",694,G__AcquRootDict_627_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNScaler",968,G__AcquRootDict_627_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNADC",566,G__AcquRootDict_627_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNEPICS",738,G__AcquRootDict_627_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNModule",980,G__AcquRootDict_627_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModID",717,G__AcquRootDict_627_0_40, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModIndex",1080,G__AcquRootDict_627_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModType",994,G__AcquRootDict_627_0_42, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModAmin",965,G__AcquRootDict_627_0_43, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModNChan",1032,G__AcquRootDict_627_0_44, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModBits",978,G__AcquRootDict_627_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrorSize",1221,G__AcquRootDict_627_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataBuffHead",1423,G__AcquRootDict_627_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHeader",773,G__AcquRootDict_627_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSwap",599,G__AcquRootDict_627_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBoundary",1024,G__AcquRootDict_627_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPartEvent",1109,G__AcquRootDict_627_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsErrorSort",1134,G__AcquRootDict_627_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_627_0_54, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2DataFormat::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_627_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataFormat::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_627_0_56, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2DataFormat::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_627_0_57, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2DataFormat::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_627_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_627_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataFormat::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_627_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataFormat::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_627_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataFormat::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_627_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataFormat::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2DataFormat", 1320, G__AcquRootDict_627_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Mk2Format(void) {
   /* TA2Mk2Format */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format));
   G__memfunc_setup("TA2Mk2Format",1050,G__AcquRootDict_633_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructHeader",1550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 'NULL' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeHeader",1081,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckHeader",1063,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SwapHeader",996,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - -", "byte-swap header", (void*) NULL, 1);
   G__memfunc_setup("UpdateHeader",1196,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - -", "start of new file", (void*) NULL, 1);
   G__memfunc_setup("UpdateInfo",1007,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "update module info  ", (void*) NULL, 1);
   G__memfunc_setup("GetEventLength",1412,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 - evbuff", "length of an event", (void*) NULL, 1);
   G__memfunc_setup("IsHeadBuff",945,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDataBuff",953,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEndBuff",854,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTermBuff",983,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBufferType",1308,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNScaler",968,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNADC",566,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNModule",980,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModID",717,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModIndex",1080,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModType",994,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModAmin",965,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModNChan",1032,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModBits",978,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrorSize",1221,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataBuffHead",1423,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_633_0_25, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Mk2Format::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_633_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Mk2Format::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_633_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Mk2Format::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_633_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Mk2Format::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_633_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_633_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Mk2Format::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_633_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Mk2Format::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_633_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Mk2Format::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_633_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Mk2Format::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Mk2Format", 1050, G__AcquRootDict_633_0_37, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk2Format), -1, 0, 1, 1, 1, 0, "u 'TA2Mk2Format' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Mk2Format", 1176, G__AcquRootDict_633_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Analysis(void) {
   /* TA2Analysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis));
   G__memfunc_setup("TA2Analysis",1035,G__AcquRootDict_635_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis), -1, 0, 1, 1, 1, 0, "C - - 10 - -", "normal use, pass ptr to TAcquRoot", (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", "decode and implement setup", (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__AcquRootDict_635_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "process Mk1 event", (void*) NULL, 1);
   G__memfunc_setup("MProcess",812,G__AcquRootDict_635_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "process ROOT/Mk1 event", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for standard display", (void*) NULL, 1);
   G__memfunc_setup("ParseADC",707,G__AcquRootDict_635_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", "decode ADC spec line", (void*) NULL, 1);
   G__memfunc_setup("PostInitialise",1457,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "some setup after parms read in", (void*) NULL, 1);
   G__memfunc_setup("Scalers",717,G__AcquRootDict_635_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 'NULL' -", "provide scaler info", (void*) NULL, 1);
   G__memfunc_setup("ZeroSumScalers",1442,G__AcquRootDict_635_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "zero sum scalers", (void*) NULL, 1);
   G__memfunc_setup("RawDecode",878,G__AcquRootDict_635_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "pull ADCs, Scalers from data", (void*) NULL, 1);
   G__memfunc_setup("EndFile",663,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "tasks @ end of file", (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "tasks @ end of run", (void*) NULL, 1);
   G__memfunc_setup("InitSaveTree",1203,G__AcquRootDict_635_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "init output data tree", (void*) NULL, 1);
   G__memfunc_setup("ChangeTreeFile",1366,G__AcquRootDict_635_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "new input....new output tree file", (void*) NULL, 1);
   G__memfunc_setup("InitTreeFileName",1573,G__AcquRootDict_635_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "construct name of tree file", (void*) NULL, 1);
   G__memfunc_setup("SaveHist",807,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save ROOT memory to file", (void*) NULL, 1);
   G__memfunc_setup("GetNhits",806,G__AcquRootDict_635_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "no. of hits in event", (void*) NULL, 0);
   G__memfunc_setup("GetFlash",782,G__AcquRootDict_635_0_21, 85, G__get_linked_tagnum(&G__AcquRootDictLN_FlashADC_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "Flash ADC info", (void*) NULL, 0);
   G__memfunc_setup("GetMulti",811,G__AcquRootDict_635_0_22, 85, G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t), -1, 2, 0, 1, 1, 0, "", "multi-hit ADC's", (void*) NULL, 0);
   G__memfunc_setup("GetMulti",811,G__AcquRootDict_635_0_23, 85, G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "multi-hit ADC's", (void*) NULL, 0);
   G__memfunc_setup("GetPhysics",1027,G__AcquRootDict_635_0_24, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPhysics",927,G__AcquRootDict_635_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "physics level analysis?", (void*) NULL, 0);
   G__memfunc_setup("GetNEvent",880,G__AcquRootDict_635_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEvAnalysed",1370,G__AcquRootDict_635_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNOnlineEvent",1493,G__AcquRootDict_635_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDAQEvent",1094,G__AcquRootDict_635_0_29, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__AcquRootDict_635_0_30, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__AcquRootDict_635_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TA2ParticleID' - 0 - pid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProcessComplete",1748,G__AcquRootDict_635_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_635_0_33, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Analysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_635_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Analysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_635_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Analysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_635_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Analysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_635_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_635_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Analysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_635_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Analysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_635_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Analysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_635_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Analysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Analysis", 1035, G__AcquRootDict_635_0_45, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis), -1, 0, 1, 1, 1, 0, "u 'TA2Analysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Analysis", 1161, G__AcquRootDict_635_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2DataServer(void) {
   /* TA2DataServer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer));
   G__memfunc_setup("TA2DataServer",1208,G__AcquRootDict_636_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TAcquRoot' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Start",526,G__AcquRootDict_636_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__AcquRootDict_636_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartSources",1266,G__AcquRootDict_636_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__AcquRootDict_636_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MultiProcess",1258,G__AcquRootDict_636_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessHeader",1320,G__AcquRootDict_636_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,G__AcquRootDict_636_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CompareEvent",1225,G__AcquRootDict_636_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeBuffers",1213,G__AcquRootDict_636_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 'EDataBuff' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FlushBuffers",1231,G__AcquRootDict_636_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSource",1291,G__AcquRootDict_636_0_13, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSource",1291,G__AcquRootDict_636_0_14, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataFormat",1283,G__AcquRootDict_636_0_15, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataFormat",1283,G__AcquRootDict_636_0_16, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataFormat), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceBuff",1300,G__AcquRootDict_636_0_17, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceBuff",1300,G__AcquRootDict_636_0_18, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSortBuff",1099,G__AcquRootDict_636_0_19, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeaderBuff",1260,G__AcquRootDict_636_0_20, 89, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileDir",959,G__AcquRootDict_636_0_21, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvStart",1001,G__AcquRootDict_636_0_22, 89, -1, -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvTempStart",1407,G__AcquRootDict_636_0_23, 89, -1, -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvLength",1085,G__AcquRootDict_636_0_24, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvOffset",1090,G__AcquRootDict_636_0_25, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEvSearch",1151,G__AcquRootDict_636_0_26, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvStatus",1119,G__AcquRootDict_636_0_27, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutBuff",987,G__AcquRootDict_636_0_28, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndBuff",954,G__AcquRootDict_636_0_29, 89, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvTempBuff",1268,G__AcquRootDict_636_0_30, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDataSource",1369,G__AcquRootDict_636_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDataBuffer",1346,G__AcquRootDict_636_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeventError",1434,G__AcquRootDict_636_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecLen",857,G__AcquRootDict_636_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsStore",1013,G__AcquRootDict_636_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - test", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStore",713,G__AcquRootDict_636_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortLock",1005,G__AcquRootDict_636_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHeaderInit",1177,G__AcquRootDict_636_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_636_0_39, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2DataServer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_636_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataServer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_636_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2DataServer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_636_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2DataServer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_636_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_636_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataServer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_636_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataServer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_636_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataServer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_636_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataServer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2DataServer", 1208, G__AcquRootDict_636_0_51, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer), -1, 0, 1, 1, 1, 0, "u 'TA2DataServer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2DataServer", 1334, G__AcquRootDict_636_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAcquRoot(void) {
   /* TAcquRoot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot));
   G__memfunc_setup("Mk1EventLoop",1157,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - -", "decode one Mk1 data record", (void*) NULL, 0);
   G__memfunc_setup("Mk2EventLoop",1158,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - -", "decode one Mk2 data record", (void*) NULL, 0);
   G__memfunc_setup("StoreScalers",1242,(G__InterfaceMethod) NULL, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - sc", "identify and store scalers Mk1 format", (void*) NULL, 0);
   G__memfunc_setup("StoreScalersMk2",1476,(G__InterfaceMethod) NULL, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - sc", "identify and store scalers Mk2 format", (void*) NULL, 0);
   G__memfunc_setup("StoreEpics",1025,(G__InterfaceMethod) NULL, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - ebuff", "identify and store epics ", (void*) NULL, 0);
   G__memfunc_setup("StoreOfflineScalers",1949,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - scevent", "identify and store scalers from tree", (void*) NULL, 0);
   G__memfunc_setup("StoreScalerBlock",1618,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"H - 'UInt_t' 0 - sc i - 'Int_t' 0 - start "
"i - 'Int_t' 0 - stop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mk1ErrorCheck",1233,(G__InterfaceMethod) NULL, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - datum", "identify and skip error record", (void*) NULL, 0);
   G__memfunc_setup("Mk2ErrorCheck",1234,(G__InterfaceMethod) NULL, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 4, 0, "H - 'UInt_t' 0 - datum", "Mk2 data..store error block", (void*) NULL, 0);
   G__memfunc_setup("TAcquRoot",898,G__AcquRootDict_637_0_10, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - g - 'Bool_t' 0 'EFalse' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveTreeFile",1183,G__AcquRootDict_637_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadHbookFile",1267,G__AcquRootDict_637_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__AcquRootDict_637_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Start",526,G__AcquRootDict_637_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataLoop",788,G__AcquRootDict_637_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OfflineLoop",1117,G__AcquRootDict_637_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__AcquRootDict_637_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__AcquRootDict_637_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinkDataServer",1407,G__AcquRootDict_637_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinkTree",798,G__AcquRootDict_637_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "Setup read from tree file", (void*) NULL, 0);
   G__memfunc_setup("LinkADC",598,G__AcquRootDict_637_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "Get ADC info from Tree", (void*) NULL, 0);
   G__memfunc_setup("UpdateTree",1011,G__AcquRootDict_637_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "New Tree file", (void*) NULL, 0);
   G__memfunc_setup("SetADC",500,G__AcquRootDict_637_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - -", "setup ADCs from header info", (void*) NULL, 0);
   G__memfunc_setup("SetADC",500,G__AcquRootDict_637_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", "manual setup of ADCs", (void*) NULL, 0);
   G__memfunc_setup("SetScaler",902,G__AcquRootDict_637_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "setup of scaler buffers", (void*) NULL, 0);
   G__memfunc_setup("SetEventSize",1225,G__AcquRootDict_637_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnalysis",1136,G__AcquRootDict_637_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataServer",1309,G__AcquRootDict_637_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TA2DataServer' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrorModule",1424,G__AcquRootDict_637_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - errormod", "Pull module indices from error block", (void*) NULL, 0);
   G__memfunc_setup("GetAnalysis",1124,G__AcquRootDict_637_0_31, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis), -1, 0, 0, 1, 1, 0, "", "->Analysis Class", (void*) NULL, 0);
   G__memfunc_setup("GetDataServer",1297,G__AcquRootDict_637_0_32, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer), -1, 0, 0, 1, 1, 0, "", "-> Data Server Cl", (void*) NULL, 0);
   G__memfunc_setup("GetAnalysisType",1542,G__AcquRootDict_637_0_33, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "Analysis species", (void*) NULL, 0);
   G__memfunc_setup("GetAnalysisSetup",1653,G__AcquRootDict_637_0_34, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "Analyse.param.file", (void*) NULL, 0);
   G__memfunc_setup("GetDataServerSetup",1826,G__AcquRootDict_637_0_35, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "Server param.file", (void*) NULL, 0);
   G__memfunc_setup("GetLocalDAQSetup",1522,G__AcquRootDict_637_0_36, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "DAQ param file", (void*) NULL, 0);
   G__memfunc_setup("GetEventSize",1213,G__AcquRootDict_637_0_37, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "return event-buffer size", (void*) NULL, 0);
   G__memfunc_setup("GetNEvent",880,G__AcquRootDict_637_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# events on offline files", (void*) NULL, 0);
   G__memfunc_setup("GetNbranch",988,G__AcquRootDict_637_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# branches to event", (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__AcquRootDict_637_0_40, 89, -1, -1, 2, 0, 1, 1, 0, "", "return event-buffer ptr", (void*) NULL, 0);
   G__memfunc_setup("GetHardwareList",1514,G__AcquRootDict_637_0_41, 89, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHardwareError",1624,G__AcquRootDict_637_0_42, 85, G__get_linked_tagnum(&G__AcquRootDictLN_ReadErrorMk2_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNModule",980,G__AcquRootDict_637_0_43, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxADC",782,G__AcquRootDict_637_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxScaler",1184,G__AcquRootDict_637_0_45, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCError",1010,G__AcquRootDict_637_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerError",1412,G__AcquRootDict_637_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHardError",1193,G__AcquRootDict_637_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrEvent",1214,G__AcquRootDict_637_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "current event number", (void*) NULL, 0);
   G__memfunc_setup("GetADCdefined",1207,G__AcquRootDict_637_0_50, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__AcquRootDict_637_0_51, 82, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerBuff",1277,G__AcquRootDict_637_0_52, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaler",890,G__AcquRootDict_637_0_53, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerS",973,G__AcquRootDict_637_0_54, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerClr",1179,G__AcquRootDict_637_0_55, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerSum",1199,G__AcquRootDict_637_0_56, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNScalerBlock",1459,G__AcquRootDict_637_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScBlockLength",1571,G__AcquRootDict_637_0_58, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerBlock",1381,G__AcquRootDict_637_0_59, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerHist",1298,G__AcquRootDict_637_0_60, 72, -1, G__defined_typename("UInt_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerHist",1298,G__AcquRootDict_637_0_61, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerHist",1298,G__AcquRootDict_637_0_62, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNScalerEvent",1482,G__AcquRootDict_637_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotScalerEvent",1715,G__AcquRootDict_637_0_64, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEventScaler",1482,G__AcquRootDict_637_0_65, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMulti",811,G__AcquRootDict_637_0_66, 85, G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t), -1, 2, 0, 1, 1, 0, "", "multi-hit ADC's", (void*) NULL, 0);
   G__memfunc_setup("GetMulti",811,G__AcquRootDict_637_0_67, 85, G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "multi-hit ADC's", (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__AcquRootDict_637_0_68, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeaderBuff",1260,G__AcquRootDict_637_0_69, 89, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeFile",1072,G__AcquRootDict_637_0_70, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeFileList",1484,G__AcquRootDict_637_0_71, 67, -1, G__defined_typename("Char_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeFileList",1484,G__AcquRootDict_637_0_72, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTreeFiles",1265,G__AcquRootDict_637_0_73, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__AcquRootDict_637_0_74, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeDir",975,G__AcquRootDict_637_0_75, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBatchDir",1057,G__AcquRootDict_637_0_76, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranch",878,G__AcquRootDict_637_0_77, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TBranch), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranch",878,G__AcquRootDict_637_0_78, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TBranch), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__AcquRootDict_637_0_79, 67, -1, G__defined_typename("Char_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__AcquRootDict_637_0_80, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecLen",857,G__AcquRootDict_637_0_81, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDataBuffer",1346,G__AcquRootDict_637_0_82, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessType",1441,G__AcquRootDict_637_0_83, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpicsBuffer",1390,G__AcquRootDict_637_0_84, 67, -1, G__defined_typename("Char_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEpicsIndex",1292,G__AcquRootDict_637_0_85, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEpics",866,G__AcquRootDict_637_0_86, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsOnline",1101,G__AcquRootDict_637_0_87, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecLen",869,G__AcquRootDict_637_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMulti",823,G__AcquRootDict_637_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MultiADC_t' - 2 - multi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortBusy",1031,G__AcquRootDict_637_0_90, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsScalerRead",1170,G__AcquRootDict_637_0_91, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEpicsRead",1068,G__AcquRootDict_637_0_92, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOnline",801,G__AcquRootDict_637_0_93, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerRead",1270,G__AcquRootDict_637_0_94, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFinished",998,G__AcquRootDict_637_0_95, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBatch",670,G__AcquRootDict_637_0_96, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLocalDAQ",893,G__AcquRootDict_637_0_97, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTree",925,G__AcquRootDict_637_0_98, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_637_0_99, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAcquRoot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_637_0_100, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAcquRoot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_637_0_101, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAcquRoot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_637_0_102, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAcquRoot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_637_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_637_0_107, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAcquRoot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_637_0_108, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAcquRoot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_637_0_109, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAcquRoot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_637_0_110, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAcquRoot::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAcquRoot", 898, G__AcquRootDict_637_0_111, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot), -1, 0, 1, 1, 1, 0, "u 'TAcquRoot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAcquRoot", 1024, G__AcquRootDict_637_0_112, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Cut(void) {
   /* TA2Cut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut));
   G__memfunc_setup("Test",416,G__AcquRootDict_639_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Cleanup",712,G__AcquRootDict_639_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NOT",241,G__AcquRootDict_639_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - result", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrue",604,G__AcquRootDict_639_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLink",686,G__AcquRootDict_639_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOpt",595,G__AcquRootDict_639_0_7, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOpt",595,G__AcquRootDict_639_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNOpt",673,G__AcquRootDict_639_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_639_0_10, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Cut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_639_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Cut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_639_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Cut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_639_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Cut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_639_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_639_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Cut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_639_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Cut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_639_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Cut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_639_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Cut::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2Cut", 625, G__AcquRootDict_639_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AcquRootDict_639_0_23, (int) ('u'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut), -1, 1, 1, 1, 1, 0, "u 'TA2Cut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2MultiCut(void) {
   /* TA2MultiCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut));
   G__memfunc_setup("TA2MultiCut",1022,G__AcquRootDict_652_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - h - 'UInt_t' 0 'ECutOR' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCut",565,G__AcquRootDict_652_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TA2Cut' - 0 - cut", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindCut",685,G__AcquRootDict_652_0_3, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Test",416,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Evaluate",823,G__AcquRootDict_652_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCutList",1000,G__AcquRootDict_652_0_7, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_652_0_8, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2MultiCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_652_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MultiCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_652_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2MultiCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_652_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2MultiCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_652_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_652_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MultiCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_652_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MultiCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_652_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2MultiCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_652_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2MultiCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2MultiCut", 1022, G__AcquRootDict_652_0_20, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut), -1, 0, 1, 1, 1, 0, "u 'TA2MultiCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2MultiCut", 1148, G__AcquRootDict_652_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AcquRootDict_652_0_22, (int) ('u'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut), -1, 1, 1, 1, 1, 0, "u 'TA2MultiCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2BitPattern(void) {
   /* TA2BitPattern */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern));
   G__memfunc_setup("TA2BitPattern",1220,G__AcquRootDict_653_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern), -1, 0, 2, 1, 1, 0, 
"C - - 0 - - R - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,G__AcquRootDict_653_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPatternName",1407,G__AcquRootDict_653_0_4, 67, -1, G__defined_typename("Char_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPatternName",1407,G__AcquRootDict_653_0_5, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPattern",1100,G__AcquRootDict_653_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCList",900,G__AcquRootDict_653_0_7, 73, -1, G__defined_typename("Int_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCList",900,G__AcquRootDict_653_0_8, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPatternList",1434,G__AcquRootDict_653_0_9, 73, -1, G__defined_typename("Int_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPatternList",1434,G__AcquRootDict_653_0_10, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__AcquRootDict_653_0_11, 73, -1, G__defined_typename("Int_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__AcquRootDict_653_0_12, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__AcquRootDict_653_0_13, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNADC",566,G__AcquRootDict_653_0_14, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNADC",566,G__AcquRootDict_653_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNelement",1112,G__AcquRootDict_653_0_16, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNelement",1112,G__AcquRootDict_653_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__AcquRootDict_653_0_18, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__AcquRootDict_653_0_19, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_653_0_20, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2BitPattern::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_653_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2BitPattern::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_653_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2BitPattern::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_653_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2BitPattern::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_653_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_653_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2BitPattern::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_653_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2BitPattern::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_653_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2BitPattern::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_653_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2BitPattern::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2BitPattern", 1220, G__AcquRootDict_653_0_32, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern), -1, 0, 1, 1, 1, 0, "u 'TA2BitPattern' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2BitPattern", 1346, G__AcquRootDict_653_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2RateMonitor(void) {
   /* TA2RateMonitor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor));
   G__memfunc_setup("TA2RateMonitor",1339,G__AcquRootDict_654_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor), -1, 0, 5, 1, 1, 0, 
"C - - 0 - - R - 'UShort_t' 0 - - "
"H - 'UInt_t' 0 - - D - 'Double_t' 0 - - "
"G - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,G__AcquRootDict_654_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRateName",1069,G__AcquRootDict_654_0_4, 67, -1, G__defined_typename("Char_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRateName",1069,G__AcquRootDict_654_0_5, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRate",762,G__AcquRootDict_654_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerIndex",1394,G__AcquRootDict_654_0_7, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerIndex",1394,G__AcquRootDict_654_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClockIndex",1284,G__AcquRootDict_654_0_9, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClockIndex",1284,G__AcquRootDict_654_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrequency",1234,G__AcquRootDict_654_0_11, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrequency",1234,G__AcquRootDict_654_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNorm",700,G__AcquRootDict_654_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNorm",700,G__AcquRootDict_654_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRate",684,G__AcquRootDict_654_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRate",684,G__AcquRootDict_654_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_654_0_17, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2RateMonitor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_654_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2RateMonitor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_654_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2RateMonitor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_654_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2RateMonitor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_654_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_654_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2RateMonitor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_654_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2RateMonitor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_654_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2RateMonitor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_654_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2RateMonitor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2RateMonitor", 1339, G__AcquRootDict_654_0_29, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor), -1, 0, 1, 1, 1, 0, "u 'TA2RateMonitor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2RateMonitor", 1465, G__AcquRootDict_654_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2DataManager(void) {
   /* TA2DataManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager));
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "Postinitialise without flags", (void*) NULL, 1);
   G__memfunc_setup("GetN2V",502,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TObject), -1, 0, 1, 1, 2, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarType",1003,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInt",487,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateChild",1080,G__AcquRootDict_656_0_6, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("LoadVariable",1190,G__AcquRootDict_656_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseCut",807,G__AcquRootDict_656_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetCut",815,G__AcquRootDict_656_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInitialise",1457,G__AcquRootDict_656_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddChild",749,G__AcquRootDict_656_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TA2DataManager' - 0 - - C - - 10 '\"TA2Detector\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddChild",749,G__AcquRootDict_656_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - U 'TA2DataManager' - 2 'NULL' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,G__AcquRootDict_656_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecodeSaved",1079,G__AcquRootDict_656_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,G__AcquRootDict_656_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,G__AcquRootDict_656_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "end of event tasks", (void*) NULL, 1);
   G__memfunc_setup("UpdatePeriod",1222,G__AcquRootDict_656_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "check if period due", (void*) NULL, 1);
   G__memfunc_setup("Periodic",815,G__AcquRootDict_656_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "tasks after n events", (void*) NULL, 1);
   G__memfunc_setup("Epicsodic",915,G__AcquRootDict_656_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "tasks after epics events", (void*) NULL, 1);
   G__memfunc_setup("ParsePeriod",1118,G__AcquRootDict_656_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "parse period", (void*) NULL, 1);
   G__memfunc_setup("ParseEpics",1007,G__AcquRootDict_656_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "parse EPICS", (void*) NULL, 1);
   G__memfunc_setup("ParseEndOfFile",1351,G__AcquRootDict_656_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "parse EOF macro", (void*) NULL, 1);
   G__memfunc_setup("ParseFinish",1116,G__AcquRootDict_656_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "parse end of run macro", (void*) NULL, 1);
   G__memfunc_setup("SetEndOfFile",1144,G__AcquRootDict_656_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", "enable end-of-file tasks", (void*) NULL, 1);
   G__memfunc_setup("SetFinish",909,G__AcquRootDict_656_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", "enable end-of-run tasks", (void*) NULL, 1);
   G__memfunc_setup("EndFile",663,G__AcquRootDict_656_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", "end of file tasks", (void*) NULL, 1);
   G__memfunc_setup("Finish",609,G__AcquRootDict_656_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", "end of run tasks", (void*) NULL, 1);
   G__memfunc_setup("MacroExe",788,G__AcquRootDict_656_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - macroCmd", "execute ROOT macro       ", (void*) NULL, 1);
   G__memfunc_setup("SetSaveEvent",1213,G__AcquRootDict_656_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", "enable event-mode data save", (void*) NULL, 1);
   G__memfunc_setup("InitSaveTree",1203,G__AcquRootDict_656_0_30, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 2 - - Y - - 2 - - "
"C - 'Char_t' 0 'NULL' - C - 'Char_t' 2 'NULL' -", "init output data tree", (void*) NULL, 1);
   G__memfunc_setup("InitSaveTree",1203,G__AcquRootDict_656_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", "for nested data saves", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,G__AcquRootDict_656_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", "save \"event\" to Tree file", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,G__AcquRootDict_656_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "save \"branch\" to Tree file", (void*) NULL, 1);
   G__memfunc_setup("CloseEvent",1016,G__AcquRootDict_656_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", "close tree and file", (void*) NULL, 1);
   G__memfunc_setup("GetChildType",1190,G__AcquRootDict_656_0_35, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChild",772,G__AcquRootDict_656_0_36, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 '\"TA2Apparatus\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGrandChild",1264,G__AcquRootDict_656_0_37, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 '\"TA2Detector\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__AcquRootDict_656_0_38, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 0, 1, 1, 0, "", "parent link", (void*) NULL, 0);
   G__memfunc_setup("GetChildren",1097,G__AcquRootDict_656_0_39, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TList), -1, 0, 0, 1, 1, 0, "", "child list", (void*) NULL, 0);
   G__memfunc_setup("GetDataCuts",1081,G__AcquRootDict_656_0_40, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut), -1, 0, 0, 1, 1, 0, "", "data cuts list", (void*) NULL, 0);
   G__memfunc_setup("GetHistCuts",1111,G__AcquRootDict_656_0_41, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut), -1, 0, 0, 1, 1, 0, "", "hist cuts list", (void*) NULL, 0);
   G__memfunc_setup("GetMiscCuts",1099,G__AcquRootDict_656_0_42, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2MultiCut), -1, 0, 0, 1, 1, 0, "", "misc cuts list", (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__AcquRootDict_656_0_43, 82, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", "-> ADC array", (void*) NULL, 0);
   G__memfunc_setup("GetADCdefined",1207,G__AcquRootDict_656_0_44, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "-> ADC defs", (void*) NULL, 0);
   G__memfunc_setup("GetScaler",890,G__AcquRootDict_656_0_45, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "-> Scaler array", (void*) NULL, 0);
   G__memfunc_setup("GetScalerSum",1199,G__AcquRootDict_656_0_46, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "-> Scaler sum array", (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__AcquRootDict_656_0_47, 89, -1, -1, 2, 0, 1, 1, 0, "", "-> Decoded event", (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__AcquRootDict_656_0_48, 89, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "-> Decoded subevent", (void*) NULL, 0);
   G__memfunc_setup("GetMaxADC",782,G__AcquRootDict_656_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# ADCs", (void*) NULL, 0);
   G__memfunc_setup("GetMaxScaler",1184,G__AcquRootDict_656_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# Scalers", (void*) NULL, 0);
   G__memfunc_setup("GetScalerIndex",1394,G__AcquRootDict_656_0_51, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "local scalers", (void*) NULL, 0);
   G__memfunc_setup("GetScalerCurr",1302,G__AcquRootDict_656_0_52, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "local scalers", (void*) NULL, 0);
   G__memfunc_setup("GetScalerAcc",1153,G__AcquRootDict_656_0_53, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "local scalers", (void*) NULL, 0);
   G__memfunc_setup("GetScalerError",1412,G__AcquRootDict_656_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "scaler errors", (void*) NULL, 0);
   G__memfunc_setup("GetMulti",811,G__AcquRootDict_656_0_55, 85, G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t), -1, 0, 1, 1, 1, 0, "i - - 0 - i", "multi-hit ADC info", (void*) NULL, 0);
   G__memfunc_setup("GetMulti",811,G__AcquRootDict_656_0_56, 85, G__get_linked_tagnum(&G__AcquRootDictLN_MultiADC_t), -1, 2, 0, 1, 1, 0, "", "multi-hit ADC info", (void*) NULL, 0);
   G__memfunc_setup("GetRateMonitor",1428,G__AcquRootDict_656_0_57, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2RateMonitor), -1, 0, 0, 1, 1, 0, "", "scaler rate mon", (void*) NULL, 0);
   G__memfunc_setup("GetBitPattern",1309,G__AcquRootDict_656_0_58, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2BitPattern), -1, 0, 0, 1, 1, 0, "", "pattern-unit handle", (void*) NULL, 0);
   G__memfunc_setup("GetPatternHits",1430,G__AcquRootDict_656_0_59, 73, -1, G__defined_typename("Int_t"), 2, 0, 1, 1, 0, "", "pattern-unit hits", (void*) NULL, 0);
   G__memfunc_setup("GetNPatternHits",1508,G__AcquRootDict_656_0_60, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "pattern # hits", (void*) NULL, 0);
   G__memfunc_setup("GetTreeFile",1072,G__AcquRootDict_656_0_61, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TFile), -1, 0, 0, 1, 1, 0, "", "output data file", (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__AcquRootDict_656_0_62, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TTree), -1, 0, 0, 1, 1, 0, "", "output data tree", (void*) NULL, 0);
   G__memfunc_setup("GetNPeriod",977,G__AcquRootDict_656_0_63, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "periodic task counter", (void*) NULL, 0);
   G__memfunc_setup("GetMaxPeriod",1193,G__AcquRootDict_656_0_64, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "events twixt periodic tasks", (void*) NULL, 0);
   G__memfunc_setup("GetPeriodCmd",1175,G__AcquRootDict_656_0_65, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "period command", (void*) NULL, 0);
   G__memfunc_setup("GetEpicsCmd",1064,G__AcquRootDict_656_0_66, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "Epics command", (void*) NULL, 0);
   G__memfunc_setup("GetEndOfFileCmd",1408,G__AcquRootDict_656_0_67, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "end-of-file command", (void*) NULL, 0);
   G__memfunc_setup("GetFinishCmd",1173,G__AcquRootDict_656_0_68, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", "end-of-run command", (void*) NULL, 0);
   G__memfunc_setup("IsRawDecode",1066,G__AcquRootDict_656_0_69, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "decoding?", (void*) NULL, 0);
   G__memfunc_setup("IsDecode",768,G__AcquRootDict_656_0_70, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "decoding?", (void*) NULL, 0);
   G__memfunc_setup("IsReconstruct",1368,G__AcquRootDict_656_0_71, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "reconstruction?", (void*) NULL, 0);
   G__memfunc_setup("IsRawDecodeOK",1220,G__AcquRootDict_656_0_72, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "decoding?", (void*) NULL, 0);
   G__memfunc_setup("IsDecodeOK",922,G__AcquRootDict_656_0_73, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "decoding?", (void*) NULL, 0);
   G__memfunc_setup("IsReconstructOK",1522,G__AcquRootDict_656_0_74, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "reconstruction?", (void*) NULL, 0);
   G__memfunc_setup("IsBitPattern",1209,G__AcquRootDict_656_0_75, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "pattern unit stuff?", (void*) NULL, 0);
   G__memfunc_setup("IsRateMonitor",1328,G__AcquRootDict_656_0_76, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "rate-stuff enabled?", (void*) NULL, 0);
   G__memfunc_setup("IsEndOfFile",1032,G__AcquRootDict_656_0_77, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "end-of-file task?", (void*) NULL, 0);
   G__memfunc_setup("IsFinish",797,G__AcquRootDict_656_0_78, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "end-of-run task?", (void*) NULL, 0);
   G__memfunc_setup("IsSaveEvent",1101,G__AcquRootDict_656_0_79, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "save output data?", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_656_0_80, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2DataManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_656_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_656_0_82, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2DataManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_656_0_83, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2DataManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_656_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_656_0_88, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_656_0_89, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_656_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_656_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2DataManager", 1402, G__AcquRootDict_656_0_92, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2H(void) {
   /* TA2H */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2H));
   G__memfunc_setup("Fill",391,G__AcquRootDict_670_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "define derived class", (void*) NULL, 3);
   G__memfunc_setup("SetCut",600,G__AcquRootDict_670_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TA2Cut' - 0 - cut", "specify cut", (void*) NULL, 0);
   G__memfunc_setup("GetCut",588,G__AcquRootDict_670_0_5, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut), -1, 0, 0, 1, 1, 0, "", "get cut ptr", (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,G__AcquRootDict_670_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - wgt", "set weight", (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,G__AcquRootDict_670_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - wgt", "set weight variable", (void*) NULL, 0);
   G__memfunc_setup("GetWeightVal",1195,G__AcquRootDict_670_0_8, 100, -1, G__defined_typename("Stat_t"), 0, 0, 1, 1, 0, "", "get weight ptr", (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__AcquRootDict_670_0_9, 68, -1, G__defined_typename("Stat_t"), 0, 0, 1, 1, 0, "", "get weight value", (void*) NULL, 0);
   G__memfunc_setup("IsWeight",804,G__AcquRootDict_670_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "non-unity weight?", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_670_0_11, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2H::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_670_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2H::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_670_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2H::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_670_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2H::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__AcquRootDict_670_0_15, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__AcquRootDict_670_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__AcquRootDict_670_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_670_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_670_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2H::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_670_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2H::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_670_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2H::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_670_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2H::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2H", 397, G__AcquRootDict_670_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AcquRootDict_670_0_24, (int) ('u'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2H), -1, 1, 1, 1, 1, 0, "u 'TA2H' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2HistManager(void) {
   /* TA2HistManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2HistManager));
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DecodeSaved",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - - 0 - -", "class-dependent setup", (void*) NULL, 3);
   G__memfunc_setup("ParseDisplay",1233,G__AcquRootDict_687_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "histogram setup", (void*) NULL, 1);
   G__memfunc_setup("ReadChanLim",1048,G__AcquRootDict_687_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 2 - - "
"C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHist",799,G__AcquRootDict_687_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillAllHist",1080,G__AcquRootDict_687_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hist",408,G__AcquRootDict_687_0_10, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 'EHist1D' - "
"d - 'Axis_t' 0 '0' - d - 'Axis_t' 0 '0' - "
"d - 'Axis_t' 0 '0' - d - 'Axis_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZeroHist",824,G__AcquRootDict_687_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZeroAll",697,G__AcquRootDict_687_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveHist",807,G__AcquRootDict_687_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ListHist",820,G__AcquRootDict_687_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("H2D",190,G__AcquRootDict_687_0_15, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 0 - n i - 'Int_t' 0 'EHist2D' m "
"d - 'Axis_t' 0 '0' xl d - 'Axis_t' 0 '0' xh "
"d - 'Axis_t' 0 '0' yl d - 'Axis_t' 0 '0' yh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDisplay",914,G__AcquRootDict_687_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "Is histograming turned on", (void*) NULL, 0);
   G__memfunc_setup("GetN1Dhist",923,G__AcquRootDict_687_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "# 1D histograms", (void*) NULL, 0);
   G__memfunc_setup("GetN2Dhist",924,G__AcquRootDict_687_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "# 2D histograms", (void*) NULL, 0);
   G__memfunc_setup("GetN3Dhist",925,G__AcquRootDict_687_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "# 3D histograms", (void*) NULL, 0);
   G__memfunc_setup("Get1Dhist",845,G__AcquRootDict_687_0_20, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TList), -1, 0, 0, 1, 1, 0, "", "list of 1D histograms", (void*) NULL, 0);
   G__memfunc_setup("Get2Dhist",846,G__AcquRootDict_687_0_21, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TList), -1, 0, 0, 1, 1, 0, "", "list of 2D histograms", (void*) NULL, 0);
   G__memfunc_setup("Get3Dhist",847,G__AcquRootDict_687_0_22, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TList), -1, 0, 0, 1, 1, 0, "", "list of 3D histograms", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_687_0_23, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2HistManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_687_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2HistManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_687_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2HistManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_687_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2HistManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_687_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_687_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2HistManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_687_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2HistManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_687_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2HistManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_687_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2HistManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2HistManager", 1432, G__AcquRootDict_687_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Control(void) {
   /* TA2Control */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control));
   G__memfunc_setup("TA2Control",936,G__AcquRootDict_694_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control), -1, 0, 6, 1, 1, 0, 
"C - - 10 - appClassName I - - 0 - argc "
"C - - 2 - argv Y - - 0 'NULL' options "
"i - - 0 '-1' numOptions g - 'Bool_t' 0 '0' noLogo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintLogo",926,G__AcquRootDict_694_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalyser",1119,G__AcquRootDict_694_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'Map_t' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateAnalyser",1427,G__AcquRootDict_694_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartAnalyser",1357,G__AcquRootDict_694_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_694_0_6, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Control::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_694_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Control::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_694_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Control::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_694_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Control::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_694_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_694_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Control::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_694_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Control::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_694_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Control::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_694_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Control::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2Control", 1062, G__AcquRootDict_694_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Detector(void) {
   /* TA2Detector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector));
   G__memfunc_setup("DecodeBasic",1062,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "basic decoding without Histograms", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", "read in setup parameters", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "default basic calibration/display", (void*) NULL, 1);
   G__memfunc_setup("DecodeSaved",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "decode previously written data", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "dummy reconstruct function", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "default cleaning up", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,G__AcquRootDict_701_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "inherited class must provide", (void*) NULL, 3);
   G__memfunc_setup("ReadDecoded",1060,G__AcquRootDict_701_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "inherited class must provide", (void*) NULL, 3);
   G__memfunc_setup("SetupArrays",1155,G__AcquRootDict_701_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "# elements to detector etc.", (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,G__AcquRootDict_701_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "free memory for arrays", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "name-variable association", (void*) NULL, 1);
   G__memfunc_setup("ParseShift",1017,G__AcquRootDict_701_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "coord shift variables", (void*) NULL, 0);
   G__memfunc_setup("ApplyShift",1028,G__AcquRootDict_701_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "coord shift variables", (void*) NULL, 0);
   G__memfunc_setup("ParseMultihit",1355,G__AcquRootDict_701_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "pase multi-hit command", (void*) NULL, 0);
   G__memfunc_setup("GetElement",1002,G__AcquRootDict_701_0_18, 85, G__get_linked_tagnum(&G__AcquRootDictLN_HitD2A_t), -1, 2, 0, 1, 1, 0, "", "ptr calibration array", (void*) NULL, 0);
   G__memfunc_setup("GetElement",1002,G__AcquRootDict_701_0_19, 85, G__get_linked_tagnum(&G__AcquRootDictLN_HitD2A_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__AcquRootDict_701_0_20, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "ptr to energy array", (void*) NULL, 0);
   G__memfunc_setup("GetEnergyOR",1067,G__AcquRootDict_701_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "ptr to energy OR", (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__AcquRootDict_701_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "energy value elem i", (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__AcquRootDict_701_0_23, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "ptr to time array", (void*) NULL, 0);
   G__memfunc_setup("GetTimeM",764,G__AcquRootDict_701_0_24, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", "ptr to multi-time array", (void*) NULL, 0);
   G__memfunc_setup("GetTimeOR",848,G__AcquRootDict_701_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "ptr to time OR", (void*) NULL, 0);
   G__memfunc_setup("GetTimeORM",925,G__AcquRootDict_701_0_26, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", "ptr to multi time OR", (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__AcquRootDict_701_0_27, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "time value elem i", (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__AcquRootDict_701_0_28, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 2, 0, 1, 1, 0, "", "ptr position array", (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__AcquRootDict_701_0_29, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanPos",979,G__AcquRootDict_701_0_30, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShiftOp",989,G__AcquRootDict_701_0_31, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShiftValue",1307,G__AcquRootDict_701_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNShiftOp",1067,G__AcquRootDict_701_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__AcquRootDict_701_0_34, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "elements which fired in event", (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__AcquRootDict_701_0_35, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "single element", (void*) NULL, 0);
   G__memfunc_setup("GetHitsM",773,G__AcquRootDict_701_0_36, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", "elements multiplicity m", (void*) NULL, 0);
   G__memfunc_setup("GetRawTimeHits",1393,G__AcquRootDict_701_0_37, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "TDC hits", (void*) NULL, 0);
   G__memfunc_setup("GetRawEnergyHits",1612,G__AcquRootDict_701_0_38, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "QDC hits", (void*) NULL, 0);
   G__memfunc_setup("GetTotalEnergy",1422,G__AcquRootDict_701_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "accumulated energy ", (void*) NULL, 0);
   G__memfunc_setup("GetEnergyScale",1394,G__AcquRootDict_701_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "overall energy scaling ", (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffset",1302,G__AcquRootDict_701_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "overall time offset", (void*) NULL, 0);
   G__memfunc_setup("GetNhits",806,G__AcquRootDict_701_0_42, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "No. hits in event", (void*) NULL, 0);
   G__memfunc_setup("GetNhitsM",883,G__AcquRootDict_701_0_43, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", "No. hits multiplicity m", (void*) NULL, 0);
   G__memfunc_setup("GetNADChits",1006,G__AcquRootDict_701_0_44, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "No. ADC  hits in event", (void*) NULL, 0);
   G__memfunc_setup("GetNTDChits",1025,G__AcquRootDict_701_0_45, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "No. TDC hits in event", (void*) NULL, 0);
   G__memfunc_setup("GetNMultihit",1214,G__AcquRootDict_701_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "No. multihits stored", (void*) NULL, 0);
   G__memfunc_setup("GetNelement",1112,G__AcquRootDict_701_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "max detector elements", (void*) NULL, 0);
   G__memfunc_setup("GetNelem",785,G__AcquRootDict_701_0_48, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "No. detector elements", (void*) NULL, 0);
   G__memfunc_setup("GetMaxHits",990,G__AcquRootDict_701_0_49, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "max # hits to process", (void*) NULL, 0);
   G__memfunc_setup("IsEcalib",764,G__AcquRootDict_701_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "calib loaded? ", (void*) NULL, 0);
   G__memfunc_setup("IsScaler",790,G__AcquRootDict_701_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "any scalers?", (void*) NULL, 0);
   G__memfunc_setup("IsEnergy",806,G__AcquRootDict_701_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTime",587,G__AcquRootDict_701_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPos",494,G__AcquRootDict_701_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRawHits",894,G__AcquRootDict_701_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_701_0_56, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Detector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_701_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Detector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_701_0_58, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Detector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_701_0_59, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Detector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_701_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_701_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Detector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_701_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Detector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_701_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Detector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_701_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Detector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2Detector", 1151, G__AcquRootDict_701_0_68, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2ParticleID(void) {
   /* TA2ParticleID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID));
   G__memfunc_setup("TA2ParticleID",1160,G__AcquRootDict_748_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID), -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxType",1000,G__AcquRootDict_748_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__AcquRootDict_748_0_4, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__AcquRootDict_748_0_5, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TParticlePDG), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__AcquRootDict_748_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__AcquRootDict_748_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGtype",957,G__AcquRootDict_748_0_8, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGtype",957,G__AcquRootDict_748_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__AcquRootDict_748_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__AcquRootDict_748_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__AcquRootDict_748_0_12, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__AcquRootDict_748_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__AcquRootDict_748_0_14, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLorentzVector' - 0 - p4 i - 'Int_t' 0 - ipdg "
"d - 'Double_t' 0 - T U 'TVector3' - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4tof",761,G__AcquRootDict_748_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLorentzVector' - 0 - p4 i - 'Int_t' 0 - ipdg "
"d - 'Double_t' 0 - b U 'TVector3' - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMassP4",836,G__AcquRootDict_748_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TLorentzVector' - 0 - p4 i - 'Int_t' 0 - ipdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassMeV",956,G__AcquRootDict_748_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_748_0_18, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2ParticleID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_748_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ParticleID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_748_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2ParticleID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_748_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2ParticleID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_748_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_748_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ParticleID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_748_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ParticleID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_748_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ParticleID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_748_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ParticleID::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2ParticleID", 1160, G__AcquRootDict_748_0_30, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2ParticleID), -1, 0, 1, 1, 1, 0, "u 'TA2ParticleID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2ParticleID", 1286, G__AcquRootDict_748_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Particle(void) {
   /* TA2Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle));
   G__memfunc_setup("TA2Particle",1019,G__AcquRootDict_749_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TA2Particle",1019,G__AcquRootDict_749_0_2, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "U 'TDatabasePDG' - 0 - pPDG", "Use fParticleID->GetPDG() of TA2Apparatus class", (void*) NULL, 0);
   G__memfunc_setup("GetP4",420,G__AcquRootDict_749_0_3, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4A",485,G__AcquRootDict_749_0_4, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP3",419,G__AcquRootDict_749_0_5, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVect",690,G__AcquRootDict_749_0_6, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__AcquRootDict_749_0_7, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__AcquRootDict_749_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotal",804,G__AcquRootDict_749_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKinetic",999,G__AcquRootDict_749_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__AcquRootDict_749_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__AcquRootDict_749_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__AcquRootDict_749_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__AcquRootDict_749_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM",365,G__AcquRootDict_749_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__AcquRootDict_749_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__AcquRootDict_749_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__AcquRootDict_749_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__AcquRootDict_749_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__AcquRootDict_749_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__AcquRootDict_749_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiDg",748,G__AcquRootDict_749_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaDg",961,G__AcquRootDict_749_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__AcquRootDict_749_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLinDegree",1167,G__AcquRootDict_749_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCircDegree",1261,G__AcquRootDict_749_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSAShort",1044,G__AcquRootDict_749_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSALong",916,G__AcquRootDict_749_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVetoEnergy",1320,G__AcquRootDict_749_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVetoTime",1101,G__AcquRootDict_749_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaE",854,G__AcquRootDict_749_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaPhi",1074,G__AcquRootDict_749_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTheta",1287,G__AcquRootDict_749_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaPhiDg",1245,G__AcquRootDict_749_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaThetaDg",1458,G__AcquRootDict_749_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTime",1184,G__AcquRootDict_749_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__AcquRootDict_749_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TA2Particle' - 0 - pParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__AcquRootDict_749_0_38, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TA2Particle' - 0 - pParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__AcquRootDict_749_0_39, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - pP4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__AcquRootDict_749_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - pP4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__AcquRootDict_749_0_41, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 0 - pVect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__AcquRootDict_749_0_42, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TVector3' - 0 - pVect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleDg",946,G__AcquRootDict_749_0_43, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TA2Particle' - 0 - pParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleDg",946,G__AcquRootDict_749_0_44, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TA2Particle' - 0 - pParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleDg",946,G__AcquRootDict_749_0_45, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - pP4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleDg",946,G__AcquRootDict_749_0_46, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - pP4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleDg",946,G__AcquRootDict_749_0_47, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 0 - pVect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleDg",946,G__AcquRootDict_749_0_48, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TVector3' - 0 - pVect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVetoIndex",1206,G__AcquRootDict_749_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentralIndex",1505,G__AcquRootDict_749_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLinState",1092,G__AcquRootDict_749_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCircState",1186,G__AcquRootDict_749_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterSize",1437,G__AcquRootDict_749_0_53, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__AcquRootDict_749_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondID",1033,G__AcquRootDict_749_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindow",920,G__AcquRootDict_749_0_56, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetApparati",1106,G__AcquRootDict_749_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectors",1229,G__AcquRootDict_749_0_58, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasApparatus",1229,G__AcquRootDict_749_0_59, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pApparatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasApparatusA",1294,G__AcquRootDict_749_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pApparatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasDetector",1110,G__AcquRootDict_749_0_61, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pDetector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasDetectorA",1175,G__AcquRootDict_749_0_62, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pDetector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUnclear",902,G__AcquRootDict_749_0_63, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__AcquRootDict_749_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVetoIndex",1218,G__AcquRootDict_749_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pVetoIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCentralIndex",1517,G__AcquRootDict_749_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pCentralIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusterSize",1449,G__AcquRootDict_749_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pClusterSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLinState",1104,G__AcquRootDict_749_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pLinState", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCircState",1198,G__AcquRootDict_749_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pCircState", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLinDegree",1179,G__AcquRootDict_749_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pLinDegree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCircDegree",1273,G__AcquRootDict_749_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pCircDegree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPSAShort",1056,G__AcquRootDict_749_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pPSAShort", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVetoEnergy",1332,G__AcquRootDict_749_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pVetoEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVetoTime",1113,G__AcquRootDict_749_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pVetoTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaE",866,G__AcquRootDict_749_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pSigmaE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaPhi",1086,G__AcquRootDict_749_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pSigmaPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaTheta",1299,G__AcquRootDict_749_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pSigmaTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaPhiDg",1257,G__AcquRootDict_749_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pSigmaPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaThetaDg",1470,G__AcquRootDict_749_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pSigmaTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaTime",1196,G__AcquRootDict_749_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pSigmaTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWindow",932,G__AcquRootDict_749_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pWindow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetApparatus",1245,G__AcquRootDict_749_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pApparatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetApparatusA",1310,G__AcquRootDict_749_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pApparatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__AcquRootDict_749_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pDetector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorA",1191,G__AcquRootDict_749_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pDetector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUnclear",1014,G__AcquRootDict_749_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - pUnclear", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__AcquRootDict_749_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - pP4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__AcquRootDict_749_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - pP4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__AcquRootDict_749_0_89, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - pParticleID d - 'Double_t' 0 - pT "
"u 'TVector3' - 0 - pP_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__AcquRootDict_749_0_90, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - pParticleID d - 'Double_t' 0 - pT "
"U 'TVector3' - 0 - pP_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__AcquRootDict_749_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pParticleID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleIDA",1326,G__AcquRootDict_749_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pParticleID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSecondID",1045,G__AcquRootDict_749_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pSecondID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__AcquRootDict_749_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKinetic",1011,G__AcquRootDict_749_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotal",816,G__AcquRootDict_749_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__AcquRootDict_749_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__AcquRootDict_749_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__AcquRootDict_749_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - pP_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__AcquRootDict_749_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 0 - pP_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP3",431,G__AcquRootDict_749_0_101, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - pP3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP3",431,G__AcquRootDict_749_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 0 - pP3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM",377,G__AcquRootDict_749_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT",384,G__AcquRootDict_749_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__AcquRootDict_749_0_105, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__AcquRootDict_749_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__AcquRootDict_749_0_107, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pPx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__AcquRootDict_749_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pPy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__AcquRootDict_749_0_109, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pPz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__AcquRootDict_749_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__AcquRootDict_749_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiDg",760,G__AcquRootDict_749_0_112, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaDg",973,G__AcquRootDict_749_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDG",519,G__AcquRootDict_749_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDatabasePDG' - 0 - pPDG", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__AcquRootDict_749_0_115, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_116, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "u 'TA2Particle' - 0 - pParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_117, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "U 'TA2Particle' - 0 - pParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_118, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 2, 1, 1, 0, 
"u 'TA2Particle' - 0 - pParticle1 u 'TA2Particle' - 0 - pParticle2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_119, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 2, 1, 1, 0, 
"U 'TA2Particle' - 0 - pParticle1 U 'TA2Particle' - 0 - pParticle2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_120, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 2, 1, 1, 0, 
"u 'TA2Particle' - 0 - pParticle1 U 'TA2Particle' - 0 - pParticle2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_121, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 2, 1, 1, 0, 
"U 'TA2Particle' - 0 - pParticle1 u 'TA2Particle' - 0 - pParticle2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__AcquRootDict_749_0_122, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 2, 1, 1, 0, 
"U 'TA2Particle' - 0 - pParticles i - 'Int_t' 0 - pNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCluster",1123,G__AcquRootDict_749_0_123, 85, G__get_linked_tagnum(&G__AcquRootDictLN_HitCluster_t), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__AcquRootDict_749_0_124, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_749_0_125, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Particle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_749_0_126, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Particle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_749_0_127, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Particle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_749_0_128, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Particle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_749_0_132, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_749_0_133, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Particle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_749_0_134, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Particle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_749_0_135, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Particle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_749_0_136, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Particle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Particle", 1019, G__AcquRootDict_749_0_137, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "u 'TA2Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Particle", 1145, G__AcquRootDict_749_0_138, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AcquRootDict_749_0_139, (int) ('u'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 1, 1, 1, 1, 0, "u 'TA2Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Apparatus(void) {
   /* TA2Apparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Apparatus));
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "setup data filter conditions", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 3);
   G__memfunc_setup("InitSaveTree",1203,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "setup ROOT data output", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save ROOT dats", (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,G__AcquRootDict_750_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "flush new'ed stuff", (void*) NULL, 1);
   G__memfunc_setup("SortParticleIDCuts",1800,G__AcquRootDict_750_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "particle ID from misc cuts list", (void*) NULL, 1);
   G__memfunc_setup("GetP4",420,G__AcquRootDict_750_0_11, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "4 momenta of ID'ed particles", (void*) NULL, 0);
   G__memfunc_setup("GetParticleInfo",1504,G__AcquRootDict_750_0_12, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4tot",763,G__AcquRootDict_750_0_13, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "Sumed 4-momentum", (void*) NULL, 0);
   G__memfunc_setup("GetPGDtype",957,G__AcquRootDict_750_0_14, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG_ID",743,G__AcquRootDict_750_0_15, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMtot",708,G__AcquRootDict_750_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "total invariant mass", (void*) NULL, 0);
   G__memfunc_setup("GetMinv",698,G__AcquRootDict_750_0_17, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "individual invariant masses", (void*) NULL, 0);
   G__memfunc_setup("GetEtot",700,G__AcquRootDict_750_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "total energy", (void*) NULL, 0);
   G__memfunc_setup("GetMaxParticle",1402,G__AcquRootDict_750_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "max # particles", (void*) NULL, 0);
   G__memfunc_setup("GetNparticle",1218,G__AcquRootDict_750_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# particles detected", (void*) NULL, 0);
   G__memfunc_setup("GetPCut",668,G__AcquRootDict_750_0_21, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut), -1, 2, 0, 1, 1, 0, "", "array particle-ID cut ptrs", (void*) NULL, 0);
   G__memfunc_setup("GetPCut",668,G__AcquRootDict_750_0_22, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Cut), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith particle-ID cut", (void*) NULL, 0);
   G__memfunc_setup("GetNCut",666,G__AcquRootDict_750_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "total # p-ID cuts", (void*) NULL, 0);
   G__memfunc_setup("GetNSector",990,G__AcquRootDict_750_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# Sectors to apply p-ID cuts", (void*) NULL, 0);
   G__memfunc_setup("GetPCutStart",1194,G__AcquRootDict_750_0_25, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "cut start index each sect", (void*) NULL, 0);
   G__memfunc_setup("GetPCutStart",1194,G__AcquRootDict_750_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith start index", (void*) NULL, 0);
   G__memfunc_setup("GetNSectorCut",1290,G__AcquRootDict_750_0_27, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# cuts for each sector", (void*) NULL, 0);
   G__memfunc_setup("GetNSectorCut",1290,G__AcquRootDict_750_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith # cuts", (void*) NULL, 0);
   G__memfunc_setup("GetCutOpt",895,G__AcquRootDict_750_0_29, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutSectorIndex",1716,G__AcquRootDict_750_0_30, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutPDGIndex",1311,G__AcquRootDict_750_0_31, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_750_0_32, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Apparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_750_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Apparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_750_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Apparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_750_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Apparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_750_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_750_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Apparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_750_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Apparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_750_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Apparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_750_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Apparatus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2Apparatus", 1270, G__AcquRootDict_750_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Physics(void) {
   /* TA2Physics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics));
   G__memfunc_setup("TA2Physics",938,G__AcquRootDict_751_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "setup decode in implement", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Periodic",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "periodic task", (void*) NULL, 1);
   G__memfunc_setup("GetP4miss",864,G__AcquRootDict_751_0_8, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "missing 4 momenta", (void*) NULL, 0);
   G__memfunc_setup("GetP4target",1067,G__AcquRootDict_751_0_9, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "target 4 momenta", (void*) NULL, 0);
   G__memfunc_setup("GetTargetPos",1209,G__AcquRootDict_751_0_10, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", "target position", (void*) NULL, 0);
   G__memfunc_setup("GetMmiss",809,G__AcquRootDict_751_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "missing masses", (void*) NULL, 0);
   G__memfunc_setup("GetPmiss",812,G__AcquRootDict_751_0_12, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "missing momenta", (void*) NULL, 0);
   G__memfunc_setup("GetPtheta",902,G__AcquRootDict_751_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "recoil polar angles", (void*) NULL, 0);
   G__memfunc_setup("GetPphi",689,G__AcquRootDict_751_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "recoil asim angles", (void*) NULL, 0);
   G__memfunc_setup("GetNtarget",1013,G__AcquRootDict_751_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# target nuclei", (void*) NULL, 0);
   G__memfunc_setup("GetNperm",802,G__AcquRootDict_751_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "# general purpose integers", (void*) NULL, 0);
   G__memfunc_setup("GetNpermutation",1574,G__AcquRootDict_751_0_17, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "general purpose integers", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_751_0_18, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Physics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_751_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Physics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_751_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Physics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_751_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Physics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_751_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_751_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Physics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_751_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Physics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_751_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Physics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_751_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Physics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Physics", 938, G__AcquRootDict_751_0_30, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Physics), -1, 0, 1, 1, 1, 0, "u 'TA2Physics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Physics", 1064, G__AcquRootDict_751_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2GenericPhysics(void) {
   /* TA2GenericPhysics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics));
   G__memfunc_setup("TA2GenericPhysics",1639,G__AcquRootDict_752_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2Analysis' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "variables for display/cuts", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reconstruct detector info", (void*) NULL, 1);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkUndefined",1309,G__AcquRootDict_752_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jtagg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkEndBuffer",1276,G__AcquRootDict_752_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_752_0_9, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2GenericPhysics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_752_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericPhysics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_752_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2GenericPhysics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_752_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2GenericPhysics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_752_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_752_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericPhysics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_752_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericPhysics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_752_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericPhysics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_752_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericPhysics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2GenericPhysics", 1639, G__AcquRootDict_752_0_21, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericPhysics), -1, 0, 1, 1, 1, 0, "u 'TA2GenericPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2GenericPhysics", 1765, G__AcquRootDict_752_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2GenericApparatus(void) {
   /* TA2GenericApparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus));
   G__memfunc_setup("TA2GenericApparatus",1845,G__AcquRootDict_753_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "construct called by TAcquRoot", (void*) NULL, 0);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "finish off initialisation", (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_753_0_7, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2GenericApparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_753_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_753_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2GenericApparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_753_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2GenericApparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_753_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_753_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_753_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericApparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_753_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericApparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_753_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericApparatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2GenericApparatus", 1845, G__AcquRootDict_753_0_19, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericApparatus), -1, 0, 1, 1, 1, 0, "u 'TA2GenericApparatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2GenericApparatus", 1971, G__AcquRootDict_753_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2GenericDetector(void) {
   /* TA2GenericDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector));
   G__memfunc_setup("TA2GenericDetector",1726,G__AcquRootDict_754_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", "read in setup parameters", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBranchIndex",1382,G__AcquRootDict_754_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertex",926,G__AcquRootDict_754_0_11, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPos",887,G__AcquRootDict_754_0_12, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXMC",520,G__AcquRootDict_754_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYMC",521,G__AcquRootDict_754_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZMC",522,G__AcquRootDict_754_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_754_0_16, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2GenericDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_754_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_754_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2GenericDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_754_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2GenericDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_754_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_754_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_754_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_754_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_754_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericDetector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2GenericDetector", 1726, G__AcquRootDict_754_0_28, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericDetector), -1, 0, 1, 1, 1, 0, "u 'TA2GenericDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2GenericDetector", 1852, G__AcquRootDict_754_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2LongScint(void) {
   /* TA2LongScint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint));
   G__memfunc_setup("TA2LongScint",1112,G__AcquRootDict_755_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "display setup", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("DecodeBar",857,G__AcquRootDict_755_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "combine hits to bar", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("TimeCorrect",1121,G__AcquRootDict_755_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - toff", "apply start time correction", (void*) NULL, 1);
   G__memfunc_setup("SmearMCHit",941,G__AcquRootDict_755_0_12, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - j d - 'Double_t' 0 - e "
"d - 'Double_t' 0 - t d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBar",565,G__AcquRootDict_755_0_13, 85, G__get_linked_tagnum(&G__AcquRootDictLN_LongBar_t), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBar",565,G__AcquRootDict_755_0_14, 85, G__get_linked_tagnum(&G__AcquRootDictLN_LongBar_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanEnergy",1291,G__AcquRootDict_755_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanEnergy",1291,G__AcquRootDict_755_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanEnergyOR",1452,G__AcquRootDict_755_0_17, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanTime",1072,G__AcquRootDict_755_0_18, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanTime",1072,G__AcquRootDict_755_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanTimeOR",1233,G__AcquRootDict_755_0_20, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeDiff",1064,G__AcquRootDict_755_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeDiff",1064,G__AcquRootDict_755_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeDiffOR",1225,G__AcquRootDict_755_0_23, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaOR",951,G__AcquRootDict_755_0_24, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiOR",738,G__AcquRootDict_755_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlightOR",1055,G__AcquRootDict_755_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__AcquRootDict_755_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__AcquRootDict_755_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlight",894,G__AcquRootDict_755_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__AcquRootDict_755_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__AcquRootDict_755_0_31, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlight",894,G__AcquRootDict_755_0_32, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarPos",871,G__AcquRootDict_755_0_33, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarPos",871,G__AcquRootDict_755_0_34, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarHits",973,G__AcquRootDict_755_0_35, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBarHits",1051,G__AcquRootDict_755_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBar",643,G__AcquRootDict_755_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbar",675,G__AcquRootDict_755_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_755_0_39, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2LongScint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_755_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2LongScint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_755_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2LongScint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_755_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2LongScint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_755_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_755_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2LongScint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_755_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2LongScint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_755_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2LongScint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_755_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2LongScint::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2LongScint", 1112, G__AcquRootDict_755_0_51, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint), -1, 0, 1, 1, 1, 0, "u 'TA2LongScint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2LongScint", 1238, G__AcquRootDict_755_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2GenericCluster(void) {
   /* TA2GenericCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster));
   G__memfunc_setup("TA2GenericCluster",1638,G__AcquRootDict_757_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "decode and load setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "decode histogram setup lines", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "name-variable association", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("DecodeCluster",1318,G__AcquRootDict_757_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "determine clusters", (void*) NULL, 1);
   G__memfunc_setup("DecodeSaved",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "decode previously written data", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("DeleteClusterArrays",1959,G__AcquRootDict_757_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "flush cluster-specific arrays", (void*) NULL, 1);
   G__memfunc_setup("SplitSearch",1122,G__AcquRootDict_757_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "look for split-off clusters", (void*) NULL, 1);
   G__memfunc_setup("GetCluster",1026,G__AcquRootDict_757_0_12, 85, G__get_linked_tagnum(&G__AcquRootDictLN_GenHitCluster_t), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCluster",1026,G__AcquRootDict_757_0_13, 85, G__get_linked_tagnum(&G__AcquRootDictLN_GenHitCluster_t), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustHit",1104,G__AcquRootDict_757_0_14, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustHit",1104,G__AcquRootDict_757_0_15, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsSplit",1000,G__AcquRootDict_757_0_16, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsSplit",1000,G__AcquRootDict_757_0_17, 71, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTempHits",1102,G__AcquRootDict_757_0_18, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCluster",1104,G__AcquRootDict_757_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustSizeFactor",1829,G__AcquRootDict_757_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSplit",890,G__AcquRootDict_757_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSplitMerged",1486,G__AcquRootDict_757_0_22, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxCluster",1320,G__AcquRootDict_757_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNClustHitOR",1343,G__AcquRootDict_757_0_24, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__AcquRootDict_757_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__AcquRootDict_757_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClEnergyOR",1242,G__AcquRootDict_757_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClTimeOR",1023,G__AcquRootDict_757_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClCentFracOR",1398,G__AcquRootDict_757_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClRadiusOR",1240,G__AcquRootDict_757_0_30, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCldTheta",1065,G__AcquRootDict_757_0_31, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCldPhi",852,G__AcquRootDict_757_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCldX",651,G__AcquRootDict_757_0_33, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCldY",652,G__AcquRootDict_757_0_34, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCldZ",653,G__AcquRootDict_757_0_35, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmc",584,G__AcquRootDict_757_0_36, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmc",585,G__AcquRootDict_757_0_37, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmc",586,G__AcquRootDict_757_0_38, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClEthresh",1186,G__AcquRootDict_757_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEthresh",1011,G__AcquRootDict_757_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEthreshSplit",1535,G__AcquRootDict_757_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxThetaSplitOff",1891,G__AcquRootDict_757_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinPosDiff",1263,G__AcquRootDict_757_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPosDiff",1265,G__AcquRootDict_757_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplitAngle",1299,G__AcquRootDict_757_0_45, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEWgt",663,G__AcquRootDict_757_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLEWgt",739,G__AcquRootDict_757_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetISplit",885,G__AcquRootDict_757_0_48, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIJSplit",959,G__AcquRootDict_757_0_49, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSplitPerm",1510,G__AcquRootDict_757_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIterate",906,G__AcquRootDict_757_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_757_0_52, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2GenericCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_757_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_757_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2GenericCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_757_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2GenericCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_757_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_757_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_757_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_757_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2GenericCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_757_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2GenericCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2GenericCluster", 1638, G__AcquRootDict_757_0_64, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2GenericCluster), -1, 0, 1, 1, 1, 0, "u 'TA2GenericCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2GenericCluster", 1764, G__AcquRootDict_757_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Ladder(void) {
   /* TA2Ladder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder));
   G__memfunc_setup("TA2Ladder",787,G__AcquRootDict_759_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "Standard detector-type constructer", (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "decode and load setup info", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("DecodeDoubles",1298,G__AcquRootDict_759_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "decode single/double hits", (void*) NULL, 1);
   G__memfunc_setup("DecodeMicro",1086,G__AcquRootDict_759_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "decode 1/3 overlap strips", (void*) NULL, 1);
   G__memfunc_setup("DecodePrRand",1163,G__AcquRootDict_759_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "decode prompt and random coincidences", (void*) NULL, 1);
   G__memfunc_setup("Fence",481,G__AcquRootDict_759_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "fence plot for microscope calibration", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis", (void*) NULL, 1);
   G__memfunc_setup("GetTrigger",1012,G__AcquRootDict_759_0_13, 85, G__get_linked_tagnum(&G__AcquRootDictLN_HitD2A_t), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigg",797,G__AcquRootDict_759_0_14, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDoubles",1006,G__AcquRootDict_759_0_15, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitsAll",977,G__AcquRootDict_759_0_16, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindows",1035,G__AcquRootDict_759_0_17, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitsRand",1085,G__AcquRootDict_759_0_18, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitsPrompt",1338,G__AcquRootDict_759_0_19, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuHits",890,G__AcquRootDict_759_0_20, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetECalibration",1485,G__AcquRootDict_759_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEelec",766,G__AcquRootDict_759_0_22, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEelecOR",927,G__AcquRootDict_759_0_23, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanEelecOR",1312,G__AcquRootDict_759_0_24, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEOverlap",1086,G__AcquRootDict_759_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRandMin",969,G__AcquRootDict_759_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRandMax",971,G__AcquRootDict_759_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanTime",1072,G__AcquRootDict_759_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanTimeOR",1233,G__AcquRootDict_759_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanEnergy",1291,G__AcquRootDict_759_0_30, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanEnergyOR",1452,G__AcquRootDict_759_0_31, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiffTime",1064,G__AcquRootDict_759_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiffTimeOR",1225,G__AcquRootDict_759_0_33, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimingRes",1202,G__AcquRootDict_759_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPromptRand",1319,G__AcquRootDict_759_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPromptMin",1222,G__AcquRootDict_759_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPromptMax",1224,G__AcquRootDict_759_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDoubles",1084,G__AcquRootDict_759_0_38, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNThits",890,G__AcquRootDict_759_0_39, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtrigger",1122,G__AcquRootDict_759_0_40, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtrig",804,G__AcquRootDict_759_0_41, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRandWindows",1502,G__AcquRootDict_759_0_42, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhitsPrompt",1448,G__AcquRootDict_759_0_43, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhitsRand",1195,G__AcquRootDict_759_0_44, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFence",769,G__AcquRootDict_759_0_45, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMuHits",968,G__AcquRootDict_759_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMuElem",947,G__AcquRootDict_759_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOverlap",917,G__AcquRootDict_759_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTimeWindows",1334,G__AcquRootDict_759_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFence",669,G__AcquRootDict_759_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMicro",694,G__AcquRootDict_759_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_759_0_52, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Ladder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_759_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Ladder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_759_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Ladder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_759_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Ladder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_759_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_759_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Ladder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_759_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Ladder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_759_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Ladder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_759_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Ladder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Ladder", 787, G__AcquRootDict_759_0_64, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder), -1, 0, 1, 1, 1, 0, "u 'TA2Ladder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Ladder", 913, G__AcquRootDict_759_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TOFApparatus(void) {
   /* TA2TOFApparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus));
   G__memfunc_setup("TA2TOFApparatus",1377,G__AcquRootDict_760_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - U 'TA2System' - 0 - -", "construct called by TAcquRoot", (void*) NULL, 0);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "finish off initialisation", (void*) NULL, 1);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecPol",581,G__AcquRootDict_760_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "reset at end of event", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDet",573,G__AcquRootDict_760_0_10, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF",521,G__AcquRootDict_760_0_11, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2LongScint), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLadder",876,G__AcquRootDict_760_0_12, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__AcquRootDict_760_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlightTime",1293,G__AcquRootDict_760_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeZero",1103,G__AcquRootDict_760_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDet",651,G__AcquRootDict_760_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTOF",599,G__AcquRootDict_760_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTOFbar",908,G__AcquRootDict_760_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_760_0_19, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TOFApparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_760_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TOFApparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_760_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TOFApparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_760_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TOFApparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_760_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_760_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TOFApparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_760_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TOFApparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_760_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TOFApparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_760_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TOFApparatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TOFApparatus", 1377, G__AcquRootDict_760_0_31, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2TOFApparatus), -1, 0, 1, 1, 1, 0, "u 'TA2TOFApparatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TOFApparatus", 1503, G__AcquRootDict_760_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2ClusterDetector(void) {
   /* TA2ClusterDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2ClusterDetector));
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "decode and load setup info", (void*) NULL, 1);
   G__memfunc_setup("ParseDisplay",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", "decode histogram setup lines", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "name-variable association", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "initialise using setup info", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "hits -> energy procedure", (void*) NULL, 1);
   G__memfunc_setup("DecodeCluster",1318,G__AcquRootDict_761_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "determine clusters", (void*) NULL, 1);
   G__memfunc_setup("DecodeSaved",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "decode previously written data", (void*) NULL, 1);
   G__memfunc_setup("Cleanup",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "end-of-event cleanup", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "specialist", (void*) NULL, 3);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "specialist", (void*) NULL, 3);
   G__memfunc_setup("DeleteClusterArrays",1959,G__AcquRootDict_761_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "flush cluster-specific arrays", (void*) NULL, 1);
   G__memfunc_setup("SplitSearch",1122,G__AcquRootDict_761_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "look for split-off clusters", (void*) NULL, 1);
   G__memfunc_setup("GetCluster",1026,G__AcquRootDict_761_0_14, 85, G__get_linked_tagnum(&G__AcquRootDictLN_HitCluster_t), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCluster",1026,G__AcquRootDict_761_0_15, 85, G__get_linked_tagnum(&G__AcquRootDictLN_HitCluster_t), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustHit",1104,G__AcquRootDict_761_0_16, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustHit",1104,G__AcquRootDict_761_0_17, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsSplit",1000,G__AcquRootDict_761_0_18, 71, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsSplit",1000,G__AcquRootDict_761_0_19, 71, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTempHits",1102,G__AcquRootDict_761_0_20, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCluster",1104,G__AcquRootDict_761_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClustSizeFactor",1829,G__AcquRootDict_761_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSplit",890,G__AcquRootDict_761_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSplitMerged",1486,G__AcquRootDict_761_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxCluster",1320,G__AcquRootDict_761_0_25, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNClustHitOR",1343,G__AcquRootDict_761_0_26, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__AcquRootDict_761_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__AcquRootDict_761_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClEnergyOR",1242,G__AcquRootDict_761_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClTimeOR",1023,G__AcquRootDict_761_0_30, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClCentFracOR",1398,G__AcquRootDict_761_0_31, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClRadiusOR",1240,G__AcquRootDict_761_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClEthresh",1186,G__AcquRootDict_761_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEthresh",1011,G__AcquRootDict_761_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEthreshSplit",1535,G__AcquRootDict_761_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxThetaSplitOff",1891,G__AcquRootDict_761_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinPosDiff",1263,G__AcquRootDict_761_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPosDiff",1265,G__AcquRootDict_761_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplitAngle",1299,G__AcquRootDict_761_0_39, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEWgt",663,G__AcquRootDict_761_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLEWgt",739,G__AcquRootDict_761_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetISplit",885,G__AcquRootDict_761_0_42, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIJSplit",959,G__AcquRootDict_761_0_43, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSplitPerm",1510,G__AcquRootDict_761_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIterate",906,G__AcquRootDict_761_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_761_0_46, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2ClusterDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_761_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ClusterDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_761_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2ClusterDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_761_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2ClusterDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_761_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_761_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ClusterDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_761_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ClusterDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_761_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2ClusterDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_761_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2ClusterDetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2ClusterDetector", 1889, G__AcquRootDict_761_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Tagger(void) {
   /* TA2Tagger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger));
   G__memfunc_setup("TA2Tagger",801,G__AcquRootDict_779_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TA2System' - 0 - -", "construct called by TAcquRoot", (void*) NULL, 0);
   G__memfunc_setup("CreateChild",1080,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Detector), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "display setup", (void*) NULL, 1);
   G__memfunc_setup("PostInitialise",1457,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "finish off initialisation", (void*) NULL, 1);
   G__memfunc_setup("InitLinPol",994,G__AcquRootDict_779_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitLinPolHist",1402,G__AcquRootDict_779_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructLinPol",1770,G__AcquRootDict_779_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructMicro",1686,G__AcquRootDict_779_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFP",438,G__AcquRootDict_779_0_11, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMicro",794,G__AcquRootDict_779_0_12, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Ladder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLadderHits",1284,G__AcquRootDict_779_0_13, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLadderHits",1284,G__AcquRootDict_779_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLadderTime",1275,G__AcquRootDict_779_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamEnergy",1279,G__AcquRootDict_779_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindow",920,G__AcquRootDict_779_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsAny",484,G__AcquRootDict_779_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPrompt",830,G__AcquRootDict_779_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRandom",797,G__AcquRootDict_779_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHelicityAmbiguous",1955,G__AcquRootDict_779_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticles",1223,G__AcquRootDict_779_0_22, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__AcquRootDict_779_0_23, 117, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Particle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleInfo",1516,G__AcquRootDict_779_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLinPol",778,G__AcquRootDict_779_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoniAOff",1033,G__AcquRootDict_779_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoniVOff",1054,G__AcquRootDict_779_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoniHOff",1040,G__AcquRootDict_779_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoniPlane",1181,G__AcquRootDict_779_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoniRadius",1301,G__AcquRootDict_779_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoniMode",1074,G__AcquRootDict_779_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCohEdge",943,G__AcquRootDict_779_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCohEdgeEnergy",1561,G__AcquRootDict_779_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_779_0_34, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Tagger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_779_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Tagger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_779_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Tagger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_779_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Tagger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_779_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_779_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Tagger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_779_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Tagger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_779_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Tagger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_779_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Tagger::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Tagger", 801, G__AcquRootDict_779_0_46, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Tagger), -1, 0, 1, 1, 1, 0, "u 'TA2Tagger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Tagger", 927, G__AcquRootDict_779_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2WCLayer(void) {
   /* TA2WCLayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer));
   G__memfunc_setup("TA2WCLayer",862,G__AcquRootDict_780_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer), -1, 0, 5, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", "decode and load setup info", (void*) NULL, 1);
   G__memfunc_setup("DecodeCluster",1318,G__AcquRootDict_780_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - nHit I - 'Int_t' 2 - phit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CGCluster",876,G__AcquRootDict_780_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CGClusters",991,G__AcquRootDict_780_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,G__AcquRootDict_780_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNElement",1080,G__AcquRootDict_780_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayerHits",1205,G__AcquRootDict_780_0_8, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClust",811,G__AcquRootDict_780_0_9, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClust",811,G__AcquRootDict_780_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLenClust",1098,G__AcquRootDict_780_0_11, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLenClust",1098,G__AcquRootDict_780_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNClust",889,G__AcquRootDict_780_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNClustPtr",1199,G__AcquRootDict_780_0_14, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "for display", (void*) NULL, 1);
   G__memfunc_setup("GetNHitsPtr",1084,G__AcquRootDict_780_0_15, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "for display", (void*) NULL, 1);
   G__memfunc_setup("GetCGClust",949,G__AcquRootDict_780_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCGClust",949,G__AcquRootDict_780_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_780_0_18, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2WCLayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_780_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WCLayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_780_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2WCLayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_780_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2WCLayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_780_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_780_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WCLayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_780_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2WCLayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_780_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WCLayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_780_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2WCLayer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2WCLayer", 862, G__AcquRootDict_780_0_30, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer), -1, 0, 1, 1, 1, 0, "u 'TA2WCLayer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2WCLayer", 988, G__AcquRootDict_780_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylWire(void) {
   /* TA2CylWire */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire));
   G__memfunc_setup("TA2CylWire",902,G__AcquRootDict_781_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CGCluster",876,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__AcquRootDict_781_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__AcquRootDict_781_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__AcquRootDict_781_0_5, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__AcquRootDict_781_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_781_0_7, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylWire::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_781_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylWire::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_781_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylWire::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_781_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylWire::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_781_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_781_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylWire::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_781_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylWire::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_781_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylWire::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_781_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylWire::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylWire", 902, G__AcquRootDict_781_0_19, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylWire), -1, 0, 1, 1, 1, 0, "u 'TA2CylWire' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylWire", 1028, G__AcquRootDict_781_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2CylStrip(void) {
   /* TA2CylStrip */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip));
   G__memfunc_setup("TA2CylStrip",1025,G__AcquRootDict_782_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip), -1, 0, 6, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"Y - - 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CGCluster",876,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__AcquRootDict_782_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTgWC",629,G__AcquRootDict_782_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ0",426,G__AcquRootDict_782_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPitch",792,G__AcquRootDict_782_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__AcquRootDict_782_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEffLength",1171,G__AcquRootDict_782_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZCor",670,G__AcquRootDict_782_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZCor",670,G__AcquRootDict_782_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__AcquRootDict_782_0_12, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhiCor",869,G__AcquRootDict_782_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_782_0_14, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2CylStrip::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_782_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylStrip::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_782_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2CylStrip::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_782_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2CylStrip::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_782_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_782_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylStrip::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_782_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylStrip::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_782_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2CylStrip::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_782_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2CylStrip::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2CylStrip", 1025, G__AcquRootDict_782_0_26, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2CylStrip), -1, 0, 1, 1, 1, 0, "u 'TA2CylStrip' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2CylStrip", 1151, G__AcquRootDict_782_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Track(void) {
   /* TA2Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track));
   G__memfunc_setup("TA2Track",700,G__AcquRootDict_783_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track), -1, 0, 1, 1, 1, 0, "C - - 10 - -", "Normal use", (void*) NULL, 0);
   G__memfunc_setup("SetTrack",801,G__AcquRootDict_783_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrack",801,G__AcquRootDict_783_0_3, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - z1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackCyl",1097,G__AcquRootDict_783_0_4, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - r0 d - 'Double_t' 0 - phi0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - r1 "
"d - 'Double_t' 0 - phi1 d - 'Double_t' 0 - z1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,G__AcquRootDict_783_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PseudoZVertex",1352,G__AcquRootDict_783_0_7, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackVertex",1139,G__AcquRootDict_783_0_8, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "U 'TA2Track' - 0 - tr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOrigin",904,G__AcquRootDict_783_0_9, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirCos",868,G__AcquRootDict_783_0_10, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVertex",926,G__AcquRootDict_783_0_11, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOx",487,G__AcquRootDict_783_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "origin x", (void*) NULL, 1);
   G__memfunc_setup("GetOy",488,G__AcquRootDict_783_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "origin y", (void*) NULL, 1);
   G__memfunc_setup("GetOz",489,G__AcquRootDict_783_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "origin z", (void*) NULL, 1);
   G__memfunc_setup("GetDu",473,G__AcquRootDict_783_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "dircos u", (void*) NULL, 1);
   G__memfunc_setup("GetDv",474,G__AcquRootDict_783_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "dircos v", (void*) NULL, 1);
   G__memfunc_setup("GetDw",475,G__AcquRootDict_783_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "dircos w", (void*) NULL, 1);
   G__memfunc_setup("GetVx",494,G__AcquRootDict_783_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Vertex x", (void*) NULL, 1);
   G__memfunc_setup("GetVy",495,G__AcquRootDict_783_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Vertex y", (void*) NULL, 1);
   G__memfunc_setup("GetVz",496,G__AcquRootDict_783_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Vertex z", (void*) NULL, 1);
   G__memfunc_setup("GetTheta",790,G__AcquRootDict_783_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Polar angle", (void*) NULL, 1);
   G__memfunc_setup("GetPhi",577,G__AcquRootDict_783_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "Asym angle", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_783_0_23, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_783_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_783_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_783_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_783_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_783_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_783_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_783_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_783_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Track", 700, G__AcquRootDict_783_0_35, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track), -1, 0, 1, 1, 1, 0, "u 'TA2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Track", 826, G__AcquRootDict_783_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2WireChamber(void) {
   /* TA2WireChamber */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2WireChamber));
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "flush new storage", (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "main decode method", (void*) NULL, 1);
   G__memfunc_setup("DecodeLayers",1204,G__AcquRootDict_784_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "separate layers decode", (void*) NULL, 1);
   G__memfunc_setup("IntersectLayers",1569,G__AcquRootDict_784_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "intersection coords", (void*) NULL, 3);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", "decode and load setup info", (void*) NULL, 1);
   G__memfunc_setup("LoadVariable",1190,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "load variables in list", (void*) NULL, 1);
   G__memfunc_setup("SetChamberParm",1390,G__AcquRootDict_784_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - -", "save chamber param", (void*) NULL, 1);
   G__memfunc_setup("SaveDecoded",1079,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "save local analysis", (void*) NULL, 1);
   G__memfunc_setup("ReadDecoded",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "read back previous analysis or MC", (void*) NULL, 1);
   G__memfunc_setup("GetNLayer",875,G__AcquRootDict_784_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNlayer",907,G__AcquRootDict_784_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNChamber",1056,G__AcquRootDict_784_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNchamber",1088,G__AcquRootDict_784_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxIntersect",1527,G__AcquRootDict_784_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxTrack",1083,G__AcquRootDict_784_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChamberLayers",1602,G__AcquRootDict_784_0_17, 73, -1, G__defined_typename("Int_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCLayer",951,G__AcquRootDict_784_0_18, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCLayer",951,G__AcquRootDict_784_0_19, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2WCLayer), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__AcquRootDict_784_0_20, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__AcquRootDict_784_0_21, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__AcquRootDict_784_0_22, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__AcquRootDict_784_0_23, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Track), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTrack",867,G__AcquRootDict_784_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexLimits",1552,G__AcquRootDict_784_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexLimits",1552,G__AcquRootDict_784_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackTheta",1291,G__AcquRootDict_784_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackPhi",1078,G__AcquRootDict_784_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AbsDiffPhi",944,G__AcquRootDict_784_0_29, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - phi1 d - 'Double_t' 0 - phi2", "abs +ve phi diff", (void*) NULL, 0);
   G__memfunc_setup("DiffPhi",666,G__AcquRootDict_784_0_30, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - phi1 d - 'Double_t' 0 - phi2", "phi diff", (void*) NULL, 0);
   G__memfunc_setup("AbsPhi",567,G__AcquRootDict_784_0_31, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", "phi 0 - 2*Pi", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_784_0_32, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2WireChamber::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_784_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WireChamber::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_784_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2WireChamber::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_784_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2WireChamber::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_784_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_784_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WireChamber::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_784_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2WireChamber::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_784_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2WireChamber::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_784_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2WireChamber::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2WireChamber", 1422, G__AcquRootDict_784_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2DataSource(void) {
   /* TA2DataSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataSource));
   G__memfunc_setup("Initialise",1035,G__AcquRootDict_785_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__AcquRootDict_785_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "Process and send data", (void*) NULL, 3);
   G__memfunc_setup("Shutdown",860,G__AcquRootDict_785_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "Shut down the data source", (void*) NULL, 1);
   G__memfunc_setup("InputList",940,G__AcquRootDict_785_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - - h - 'UInt_t' 0 - - "
"h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Start",526,G__AcquRootDict_785_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__AcquRootDict_785_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "contains all the work", (void*) NULL, 1);
   G__memfunc_setup("GetInRecLen",1040,G__AcquRootDict_785_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNfile",782,G__AcquRootDict_785_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrecord",1005,G__AcquRootDict_785_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbyte",802,G__AcquRootDict_785_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingSize",1099,G__AcquRootDict_785_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBuffer",890,G__AcquRootDict_785_0_14, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TA2RingBuffer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStore",713,G__AcquRootDict_785_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSwap",599,G__AcquRootDict_785_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProcess",923,G__AcquRootDict_785_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsStore",1013,G__AcquRootDict_785_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", "turn on/off storage", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_785_0_19, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2DataSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_785_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_785_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2DataSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_785_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2DataSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_785_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_785_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_785_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_785_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2DataSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_785_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2DataSource::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TA2DataSource", 1328, G__AcquRootDict_785_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2NetSource(void) {
   /* TA2NetSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource));
   G__memfunc_setup("TA2NetSource",1119,G__AcquRootDict_786_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 0 - - C - 'Char_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 'EFalse' - "
"i - 'Int_t' 0 '1' - i - 'Int_t' 0 'EFalse' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadCheck",858,G__AcquRootDict_786_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "read data buffer from remote node", (void*) NULL, 1);
   G__memfunc_setup("HandShakeSk",1061,G__AcquRootDict_786_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", "handshake buffer read", (void*) NULL, 1);
   G__memfunc_setup("Setup",529,G__AcquRootDict_786_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Shutdown",860,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InputList",940,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - - h - 'UInt_t' 0 - - "
"h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSocket",905,G__AcquRootDict_786_0_9, 85, G__get_linked_tagnum(&G__AcquRootDictLN_ARSocket_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AcquRootDict_786_0_10, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2NetSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_786_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2NetSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_786_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2NetSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_786_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2NetSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_786_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_786_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2NetSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_786_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2NetSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_786_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2NetSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_786_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2NetSource::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2NetSource", 1119, G__AcquRootDict_786_0_22, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2NetSource), -1, 0, 1, 1, 1, 0, "u 'TA2NetSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2NetSource", 1245, G__AcquRootDict_786_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2FileSource(void) {
   /* TA2FileSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource));
   G__memfunc_setup("TA2FileSource",1208,G__AcquRootDict_787_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 'EFalse' - i - 'Int_t' 0 '1' - "
"i - 'Int_t' 0 'EFalse' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "main data processor", (void*) NULL, 1);
   G__memfunc_setup("InputList",940,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - h - 'UInt_t' 0 - - "
"h - 'UInt_t' 0 - -", "get input file list", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_787_0_4, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2FileSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_787_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FileSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_787_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2FileSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_787_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2FileSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_787_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_787_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FileSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_787_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2FileSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_787_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2FileSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_787_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2FileSource::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2FileSource", 1208, G__AcquRootDict_787_0_16, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2FileSource), -1, 0, 1, 1, 1, 0, "u 'TA2FileSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2FileSource", 1334, G__AcquRootDict_787_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2LocalSource(void) {
   /* TA2LocalSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource));
   G__memfunc_setup("TA2LocalSource",1315,G__AcquRootDict_788_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 'EFalse' - i - 'Int_t' 0 '1' - "
"i - 'Int_t' 0 'EFalse' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "main data processor", (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "special for local", (void*) NULL, 1);
   G__memfunc_setup("Start",526,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "don't start anything", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_788_0_5, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2LocalSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_788_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2LocalSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_788_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2LocalSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_788_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2LocalSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_788_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_788_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2LocalSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_788_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2LocalSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_788_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2LocalSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_788_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2LocalSource::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2LocalSource", 1315, G__AcquRootDict_788_0_17, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2LocalSource), -1, 0, 1, 1, 1, 0, "u 'TA2LocalSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2LocalSource", 1441, G__AcquRootDict_788_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2Mk1Format(void) {
   /* TA2Mk1Format */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format));
   G__memfunc_setup("TA2Mk1Format",1049,G__AcquRootDict_789_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructHeader",1550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 'NULL' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeHeader",1081,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckHeader",1063,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SwapHeader",996,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - -", "byte-swap header", (void*) NULL, 1);
   G__memfunc_setup("UpdateHeader",1196,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - -", "start of new file", (void*) NULL, 1);
   G__memfunc_setup("UpdateInfo",1007,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "new fModInfo", (void*) NULL, 1);
   G__memfunc_setup("ResetOut",827,G__AcquRootDict_789_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "reset output buffer", (void*) NULL, 1);
   G__memfunc_setup("IsHeadBuff",945,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDataBuff",953,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEndBuff",854,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTermBuff",983,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBufferType",1308,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNScaler",968,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNADC",566,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNModule",980,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModType",994,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModAmin",965,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModNChan",1032,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModBits",978,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrorSize",1221,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_789_0_22, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2Mk1Format::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_789_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Mk1Format::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_789_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2Mk1Format::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_789_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2Mk1Format::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_789_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_789_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Mk1Format::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_789_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Mk1Format::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_789_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2Mk1Format::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_789_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2Mk1Format::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2Mk1Format", 1049, G__AcquRootDict_789_0_34, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2Mk1Format), -1, 0, 1, 1, 1, 0, "u 'TA2Mk1Format' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2Mk1Format", 1175, G__AcquRootDict_789_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPSFormat(void) {
   /* TA2TAPSFormat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat));
   G__memfunc_setup("TA2TAPSFormat",1128,G__AcquRootDict_790_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - U 'TA2RingBuffer' - 0 - - "
"U 'TA2RingBuffer' - 0 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveMk1Event",1146,G__AcquRootDict_790_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "construct ACQU event", (void*) NULL, 1);
   G__memfunc_setup("MarkTAPSEvent",1221,G__AcquRootDict_790_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "mark single TAPS event", (void*) NULL, 1);
   G__memfunc_setup("SavePartialEvent",1630,G__AcquRootDict_790_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "save incomplete event", (void*) NULL, 1);
   G__memfunc_setup("MergeHeader",1081,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", "ACQU header merging", (void*) NULL, 1);
   G__memfunc_setup("GetEventLength",1412,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 - evbuff", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHeadBuff",945,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDataBuff",953,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEndBuff",854,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTermBuff",983,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_790_0_12, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPSFormat::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_790_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPSFormat::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_790_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPSFormat::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_790_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPSFormat::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_790_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_790_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPSFormat::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_790_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPSFormat::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_790_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPSFormat::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_790_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPSFormat::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPSFormat", 1128, G__AcquRootDict_790_0_24, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSFormat), -1, 0, 1, 1, 1, 0, "u 'TA2TAPSFormat' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPSFormat", 1254, G__AcquRootDict_790_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTA2TAPSMk2Format(void) {
   /* TA2TAPSMk2Format */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format));
   G__memfunc_setup("TA2TAPSMk2Format",1362,G__AcquRootDict_791_0_1, 105, G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - U 'TA2RingBuffer' - 0 - - "
"U 'TA2RingBuffer' - 0 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveMk1Event",1146,G__AcquRootDict_791_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "construct ACQU event", (void*) NULL, 1);
   G__memfunc_setup("MarkTAPSEvent",1221,G__AcquRootDict_791_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "mark single TAPS event", (void*) NULL, 1);
   G__memfunc_setup("SavePartialEvent",1630,G__AcquRootDict_791_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "save incomplete event", (void*) NULL, 1);
   G__memfunc_setup("MergeHeader",1081,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - - Y - - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", "ACQU header merging", (void*) NULL, 1);
   G__memfunc_setup("GetEventLength",1412,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 - evbuff", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateInfo",1007,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHeadBuff",945,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDataBuff",953,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEndBuff",854,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTermBuff",983,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AcquRootDict_791_0_13, 85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TA2TAPSMk2Format::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AcquRootDict_791_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPSMk2Format::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AcquRootDict_791_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TA2TAPSMk2Format::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AcquRootDict_791_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TA2TAPSMk2Format::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AcquRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcquRootDict_791_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AcquRootDict_791_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPSMk2Format::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AcquRootDict_791_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPSMk2Format::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AcquRootDict_791_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TA2TAPSMk2Format::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AcquRootDict_791_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TA2TAPSMk2Format::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TA2TAPSMk2Format", 1362, G__AcquRootDict_791_0_25, (int) ('i'), G__get_linked_tagnum(&G__AcquRootDictLN_TA2TAPSMk2Format), -1, 0, 1, 1, 1, 0, "u 'TA2TAPSMk2Format' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TA2TAPSMk2Format", 1488, G__AcquRootDict_791_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAcquRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)(&gAR),85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TAcquRoot),-1,-1,1,"gAR=",0,(char*)NULL);
   G__memvar_setup((void*)(&gAN),85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Analysis),-1,-1,1,"gAN=",0,(char*)NULL);
   G__memvar_setup((void*)(&gDS),85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2DataServer),-1,-1,1,"gDS=",0,(char*)NULL);
   G__memvar_setup((void*)(&gDAQ),85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TDAQexperiment),-1,-1,1,"gDAQ=",0,(char*)NULL);
   G__memvar_setup((void*)(&gCTRL),85,0,0,G__get_linked_tagnum(&G__AcquRootDictLN_TA2Control),-1,-1,1,"gCTRL=",0,(char*)NULL);
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAcquRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAcquRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AcquRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_Map_t = { "Map_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_ARFile_t = { "ARFile_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_ARSocket_t = { "ARSocket_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2System = { "TA2System" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_AcquExptInfo_t = { "AcquExptInfo_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_ADCInfo_t = { "ADCInfo_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_ModuleInfo_t = { "ModuleInfo_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_AcquBlock_t = { "AcquBlock_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2RingBuffer = { "TA2RingBuffer" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2DataFormat = { "TA2DataFormat" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_AcquMk2Info_t = { "AcquMk2Info_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_ModuleInfoMk2_t = { "ModuleInfoMk2_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_ReadErrorMk2_t = { "ReadErrorMk2_t" , 115 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Mk2Format = { "TA2Mk2Format" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_MultiADC_t = { "MultiADC_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Analysis = { "TA2Analysis" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2DataServer = { "TA2DataServer" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TAcquRoot = { "TAcquRoot" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Cut = { "TA2Cut" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2MultiCut = { "TA2MultiCut" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2BitPattern = { "TA2BitPattern" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2RateMonitor = { "TA2RateMonitor" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2DataManager = { "TA2DataManager" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2H = { "TA2H" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2HistManager = { "TA2HistManager" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TRint = { "TRint" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TDAQexperiment = { "TDAQexperiment" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Control = { "TA2Control" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_FlashADC_t = { "FlashADC_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Detector = { "TA2Detector" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_HitD2A_t = { "HitD2A_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TParticlePDG = { "TParticlePDG" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2ParticleID = { "TA2ParticleID" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Particle = { "TA2Particle" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Apparatus = { "TA2Apparatus" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Physics = { "TA2Physics" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2GenericPhysics = { "TA2GenericPhysics" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2GenericApparatus = { "TA2GenericApparatus" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2GenericDetector = { "TA2GenericDetector" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2LongScint = { "TA2LongScint" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_LongBar_t = { "LongBar_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2GenericCluster = { "TA2GenericCluster" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_GenHitCluster_t = { "GenHitCluster_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Ladder = { "TA2Ladder" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2TOFApparatus = { "TA2TOFApparatus" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2ClusterDetector = { "TA2ClusterDetector" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_HitCluster_t = { "HitCluster_t" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Tagger = { "TA2Tagger" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2WCLayer = { "TA2WCLayer" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2CylWire = { "TA2CylWire" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2CylStrip = { "TA2CylStrip" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Track = { "TA2Track" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2WireChamber = { "TA2WireChamber" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2DataSource = { "TA2DataSource" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2NetSource = { "TA2NetSource" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2FileSource = { "TA2FileSource" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2LocalSource = { "TA2LocalSource" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2Mk1Format = { "TA2Mk1Format" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2TAPSFormat = { "TA2TAPSFormat" , 99 , -1 };
G__linked_taginfo G__AcquRootDictLN_TA2TAPSMk2Format = { "TA2TAPSMk2Format" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAcquRootDict() {
  G__AcquRootDictLN_TClass.tagnum = -1 ;
  G__AcquRootDictLN_TBuffer.tagnum = -1 ;
  G__AcquRootDictLN_TMemberInspector.tagnum = -1 ;
  G__AcquRootDictLN_TObject.tagnum = -1 ;
  G__AcquRootDictLN_TNamed.tagnum = -1 ;
  G__AcquRootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__AcquRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AcquRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AcquRootDictLN_TList.tagnum = -1 ;
  G__AcquRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AcquRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AcquRootDictLN_TFile.tagnum = -1 ;
  G__AcquRootDictLN_TApplication.tagnum = -1 ;
  G__AcquRootDictLN_Map_t.tagnum = -1 ;
  G__AcquRootDictLN_ARFile_t.tagnum = -1 ;
  G__AcquRootDictLN_ARSocket_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2System.tagnum = -1 ;
  G__AcquRootDictLN_TTree.tagnum = -1 ;
  G__AcquRootDictLN_TBranch.tagnum = -1 ;
  G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__AcquRootDictLN_TThread.tagnum = -1 ;
  G__AcquRootDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__AcquRootDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AcquRootDictLN_TQObject.tagnum = -1 ;
  G__AcquRootDictLN_AcquExptInfo_t.tagnum = -1 ;
  G__AcquRootDictLN_ADCInfo_t.tagnum = -1 ;
  G__AcquRootDictLN_ModuleInfo_t.tagnum = -1 ;
  G__AcquRootDictLN_AcquBlock_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2RingBuffer.tagnum = -1 ;
  G__AcquRootDictLN_TA2DataFormat.tagnum = -1 ;
  G__AcquRootDictLN_AcquMk2Info_t.tagnum = -1 ;
  G__AcquRootDictLN_ModuleInfoMk2_t.tagnum = -1 ;
  G__AcquRootDictLN_ReadErrorMk2_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2Mk2Format.tagnum = -1 ;
  G__AcquRootDictLN_MultiADC_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2Analysis.tagnum = -1 ;
  G__AcquRootDictLN_TA2DataServer.tagnum = -1 ;
  G__AcquRootDictLN_TAcquRoot.tagnum = -1 ;
  G__AcquRootDictLN_TA2Cut.tagnum = -1 ;
  G__AcquRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AcquRootDictLN_TH1F.tagnum = -1 ;
  G__AcquRootDictLN_TF1.tagnum = -1 ;
  G__AcquRootDictLN_TA2MultiCut.tagnum = -1 ;
  G__AcquRootDictLN_TA2BitPattern.tagnum = -1 ;
  G__AcquRootDictLN_TA2RateMonitor.tagnum = -1 ;
  G__AcquRootDictLN_TRandom.tagnum = -1 ;
  G__AcquRootDictLN_TA2DataManager.tagnum = -1 ;
  G__AcquRootDictLN_TA2H.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AcquRootDictLN_TH2F.tagnum = -1 ;
  G__AcquRootDictLN_TA2HistManager.tagnum = -1 ;
  G__AcquRootDictLN_TRint.tagnum = -1 ;
  G__AcquRootDictLN_TDAQexperiment.tagnum = -1 ;
  G__AcquRootDictLN_TA2Control.tagnum = -1 ;
  G__AcquRootDictLN_FlashADC_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2Detector.tagnum = -1 ;
  G__AcquRootDictLN_HitD2A_t.tagnum = -1 ;
  G__AcquRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AcquRootDictLN_TVector3.tagnum = -1 ;
  G__AcquRootDictLN_TLorentzVector.tagnum = -1 ;
  G__AcquRootDictLN_TParticlePDG.tagnum = -1 ;
  G__AcquRootDictLN_TDatabasePDG.tagnum = -1 ;
  G__AcquRootDictLN_TA2ParticleID.tagnum = -1 ;
  G__AcquRootDictLN_TA2Particle.tagnum = -1 ;
  G__AcquRootDictLN_TA2Apparatus.tagnum = -1 ;
  G__AcquRootDictLN_TA2Physics.tagnum = -1 ;
  G__AcquRootDictLN_TA2GenericPhysics.tagnum = -1 ;
  G__AcquRootDictLN_TA2GenericApparatus.tagnum = -1 ;
  G__AcquRootDictLN_TA2GenericDetector.tagnum = -1 ;
  G__AcquRootDictLN_TA2LongScint.tagnum = -1 ;
  G__AcquRootDictLN_LongBar_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2GenericCluster.tagnum = -1 ;
  G__AcquRootDictLN_GenHitCluster_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2Ladder.tagnum = -1 ;
  G__AcquRootDictLN_TA2TOFApparatus.tagnum = -1 ;
  G__AcquRootDictLN_TA2ClusterDetector.tagnum = -1 ;
  G__AcquRootDictLN_HitCluster_t.tagnum = -1 ;
  G__AcquRootDictLN_TA2Tagger.tagnum = -1 ;
  G__AcquRootDictLN_TA2WCLayer.tagnum = -1 ;
  G__AcquRootDictLN_TA2CylWire.tagnum = -1 ;
  G__AcquRootDictLN_TA2CylStrip.tagnum = -1 ;
  G__AcquRootDictLN_TA2Track.tagnum = -1 ;
  G__AcquRootDictLN_TA2WireChamber.tagnum = -1 ;
  G__AcquRootDictLN_TA2DataSource.tagnum = -1 ;
  G__AcquRootDictLN_TA2NetSource.tagnum = -1 ;
  G__AcquRootDictLN_TA2FileSource.tagnum = -1 ;
  G__AcquRootDictLN_TA2LocalSource.tagnum = -1 ;
  G__AcquRootDictLN_TA2Mk1Format.tagnum = -1 ;
  G__AcquRootDictLN_TA2TAPSFormat.tagnum = -1 ;
  G__AcquRootDictLN_TA2TAPSMk2Format.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAcquRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TList);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TApplication);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_Map_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_ARFile_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_ARSocket_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2System),sizeof(TA2System),-1,324609,(char*)NULL,G__setup_memvarTA2System,G__setup_memfuncTA2System);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TThread);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_AcquExptInfo_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_ADCInfo_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_ModuleInfo_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_AcquBlock_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2RingBuffer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2DataFormat),sizeof(TA2DataFormat),-1,324613,"for ROOT",G__setup_memvarTA2DataFormat,G__setup_memfuncTA2DataFormat);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_AcquMk2Info_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_ModuleInfoMk2_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_ReadErrorMk2_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Mk2Format),sizeof(TA2Mk2Format),-1,324608,(char*)NULL,G__setup_memvarTA2Mk2Format,G__setup_memfuncTA2Mk2Format);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_MultiADC_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Analysis),sizeof(TA2Analysis),-1,324608,(char*)NULL,G__setup_memvarTA2Analysis,G__setup_memfuncTA2Analysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2DataServer),sizeof(TA2DataServer),-1,324608,"for ROOT dictionary",G__setup_memvarTA2DataServer,G__setup_memfuncTA2DataServer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TAcquRoot),sizeof(TAcquRoot),-1,324608,(char*)NULL,G__setup_memvarTAcquRoot,G__setup_memfuncTAcquRoot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Cut),sizeof(TA2Cut),-1,324609,(char*)NULL,G__setup_memvarTA2Cut,G__setup_memfuncTA2Cut);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2MultiCut),sizeof(TA2MultiCut),-1,324608,(char*)NULL,G__setup_memvarTA2MultiCut,G__setup_memfuncTA2MultiCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2BitPattern),sizeof(TA2BitPattern),-1,324608,(char*)NULL,G__setup_memvarTA2BitPattern,G__setup_memfuncTA2BitPattern);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2RateMonitor),sizeof(TA2RateMonitor),-1,324608,(char*)NULL,G__setup_memvarTA2RateMonitor,G__setup_memfuncTA2RateMonitor);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TRandom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2DataManager),sizeof(TA2DataManager),-1,324610,(char*)NULL,G__setup_memvarTA2DataManager,G__setup_memfuncTA2DataManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2H),sizeof(TA2H),-1,263425,(char*)NULL,G__setup_memvarTA2H,G__setup_memfuncTA2H);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2HistManager),sizeof(TA2HistManager),-1,324610,(char*)NULL,G__setup_memvarTA2HistManager,G__setup_memfuncTA2HistManager);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TRint);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TDAQexperiment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Control),sizeof(TA2Control),-1,324608,(char*)NULL,G__setup_memvarTA2Control,G__setup_memfuncTA2Control);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_FlashADC_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Detector),sizeof(TA2Detector),-1,324610,(char*)NULL,G__setup_memvarTA2Detector,G__setup_memfuncTA2Detector);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_HitD2A_t);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TParticlePDG);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TDatabasePDG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2ParticleID),sizeof(TA2ParticleID),-1,324608,(char*)NULL,G__setup_memvarTA2ParticleID,G__setup_memfuncTA2ParticleID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Particle),sizeof(TA2Particle),-1,324864,(char*)NULL,G__setup_memvarTA2Particle,G__setup_memfuncTA2Particle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Apparatus),sizeof(TA2Apparatus),-1,324610,(char*)NULL,G__setup_memvarTA2Apparatus,G__setup_memfuncTA2Apparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Physics),sizeof(TA2Physics),-1,324608,(char*)NULL,G__setup_memvarTA2Physics,G__setup_memfuncTA2Physics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2GenericPhysics),sizeof(TA2GenericPhysics),-1,324608,(char*)NULL,G__setup_memvarTA2GenericPhysics,G__setup_memfuncTA2GenericPhysics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2GenericApparatus),sizeof(TA2GenericApparatus),-1,324608,(char*)NULL,G__setup_memvarTA2GenericApparatus,G__setup_memfuncTA2GenericApparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2GenericDetector),sizeof(TA2GenericDetector),-1,324608,(char*)NULL,G__setup_memvarTA2GenericDetector,G__setup_memfuncTA2GenericDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2LongScint),sizeof(TA2LongScint),-1,324608,(char*)NULL,G__setup_memvarTA2LongScint,G__setup_memfuncTA2LongScint);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_LongBar_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2GenericCluster),sizeof(TA2GenericCluster),-1,324608,(char*)NULL,G__setup_memvarTA2GenericCluster,G__setup_memfuncTA2GenericCluster);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_GenHitCluster_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Ladder),sizeof(TA2Ladder),-1,324608,(char*)NULL,G__setup_memvarTA2Ladder,G__setup_memfuncTA2Ladder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2TOFApparatus),sizeof(TA2TOFApparatus),-1,324608,(char*)NULL,G__setup_memvarTA2TOFApparatus,G__setup_memfuncTA2TOFApparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2ClusterDetector),sizeof(TA2ClusterDetector),-1,324610,(char*)NULL,G__setup_memvarTA2ClusterDetector,G__setup_memfuncTA2ClusterDetector);
   G__get_linked_tagnum_fwd(&G__AcquRootDictLN_HitCluster_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Tagger),sizeof(TA2Tagger),-1,324608,(char*)NULL,G__setup_memvarTA2Tagger,G__setup_memfuncTA2Tagger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2WCLayer),sizeof(TA2WCLayer),-1,324608,(char*)NULL,G__setup_memvarTA2WCLayer,G__setup_memfuncTA2WCLayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2CylWire),sizeof(TA2CylWire),-1,323584,(char*)NULL,G__setup_memvarTA2CylWire,G__setup_memfuncTA2CylWire);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2CylStrip),sizeof(TA2CylStrip),-1,323584,(char*)NULL,G__setup_memvarTA2CylStrip,G__setup_memfuncTA2CylStrip);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Track),sizeof(TA2Track),-1,324608,(char*)NULL,G__setup_memvarTA2Track,G__setup_memfuncTA2Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2WireChamber),sizeof(TA2WireChamber),-1,324609,(char*)NULL,G__setup_memvarTA2WireChamber,G__setup_memfuncTA2WireChamber);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2DataSource),sizeof(TA2DataSource),-1,324609,"for ROOT",G__setup_memvarTA2DataSource,G__setup_memfuncTA2DataSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2NetSource),sizeof(TA2NetSource),-1,324608,"for ROOT",G__setup_memvarTA2NetSource,G__setup_memfuncTA2NetSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2FileSource),sizeof(TA2FileSource),-1,324608,(char*)NULL,G__setup_memvarTA2FileSource,G__setup_memfuncTA2FileSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2LocalSource),sizeof(TA2LocalSource),-1,324608,(char*)NULL,G__setup_memvarTA2LocalSource,G__setup_memfuncTA2LocalSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2Mk1Format),sizeof(TA2Mk1Format),-1,324608,"for ROOT",G__setup_memvarTA2Mk1Format,G__setup_memfuncTA2Mk1Format);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2TAPSFormat),sizeof(TA2TAPSFormat),-1,324608,"for ROOT",G__setup_memvarTA2TAPSFormat,G__setup_memfuncTA2TAPSFormat);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AcquRootDictLN_TA2TAPSMk2Format),sizeof(TA2TAPSMk2Format),-1,324608,"for ROOT",G__setup_memvarTA2TAPSMk2Format,G__setup_memfuncTA2TAPSMk2Format);
}
extern "C" void G__cpp_setupAcquRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAcquRootDict()");
  G__set_cpp_environmentAcquRootDict();
  G__cpp_setup_tagtableAcquRootDict();

  G__cpp_setup_inheritanceAcquRootDict();

  G__cpp_setup_typetableAcquRootDict();

  G__cpp_setup_memvarAcquRootDict();

  G__cpp_setup_memfuncAcquRootDict();
  G__cpp_setup_globalAcquRootDict();
  G__cpp_setup_funcAcquRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAcquRootDict();
  return;
}
class G__cpp_setup_initAcquRootDict {
  public:
    G__cpp_setup_initAcquRootDict() { G__add_setup_func("AcquRootDict",(G__incsetup)(&G__cpp_setupAcquRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAcquRootDict() { G__remove_setup_func("AcquRootDict"); }
};
G__cpp_setup_initAcquRootDict G__cpp_setup_initializerAcquRootDict;

